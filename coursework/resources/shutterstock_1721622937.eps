%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 2003.i507.009.S.m009.c12.HIV AIDS education flat.eps
%%Creator: Adobe Illustrator(R) 19.1
%%For: awesta
%%CreationDate: 4/30/2020
%%BoundingBox: 0 0 3070 1964
%%HiResBoundingBox: 0 0 3069.9058 1964
%%CropBox: 0 0 3069.9058 1964
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.1.1 x35 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=0 RasterRes=72 GradRes=72 Text=0 Stroke=0 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:headline>
            <rdf:Alt>
               <rdf:li>Hiv aids education flat composition with view of classroom and teacher explaining anti-virus protection methods vector illustration</rdf:li>
            </rdf:Alt>
         </dc:headline>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Hiv aids education flat composition with view of classroom and teacher explaining anti-virus protection methods vector illustration</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>Hiv aids education flat composition with view of classroom and teacher explaining anti-virus protection methods vector illustration</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:MetadataDate>2019-05-18T09:11:40+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2020-04-30T13:27:55.806+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-05-18T09:11:39+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>164</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgApAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9CZsm92KuxV2KuxV2KvM&#xA;vzz1TTU8v2li11EL0X0Extua+oI1D1cpXlx365XkOyvRrK/sr+2S6sriO6tn+xNC6uh+TKSMsVXx&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV5j+cesaTHceXLZ7yEXFtq1vPcw+ovOOJaku&#xA;61qq79Tlcyr0m1urW7gS4tZkuLeQVjmiYOjDxDKSDliquKuxV2KuxV2KuxV2KuxV2KuxVporiZGi&#xA;tmVbh1IhaQEoHp8JYDeleuCRoWpLx69/5xo81Xt3Nd3fmC2nuZ3Mk0rpKWZmNSTmH4jDjZR+Xn5R&#xA;+Z/JV5cTS6vBd6ZOh9ezRZB+8FOMi8tuQ6H2yzHk3pIkzrMlk7FXYq7FXYq7FXYq7FXYq7FXYqg9&#xA;U1nStKijm1O7is4ZpBDHLMwRDIwLBeR2GynriSqIt7m2uYhNbypNE32ZI2DqfkRUYqqYq7FXYqp3&#xA;Ntf3VrPb6fKkF9LG6200g5IknE8WZR1AO9MjOVC1Jp49P/zjF5mnmeefX7aWaVi8kjpKzMxNSSTu&#xA;ScxPEYcbMPy7/KzzL5Je7N1q0N5pc6gm1jVwVmDAB15bDaobx28MsxZN6SJWzXMlk7FXYq7FXYq7&#xA;FXYq7FXYq7FVW2LLOjL1BrkZ8kFNfrkn8ozF8MMOFSurmSS3dAAKjt4ZKEACkDdIbvU9PtBW5uY4&#xA;iP2WYBvoHXLp5oQ+ogOVi0uTJ9ESUlu/PejQ1EAkuW7FV4r97UP4Zhz7SxjlZdph7Bzy+qo/jySS&#xA;68/6nKeNrBHAD0JrI3/Go/DMOfacz9IAdpi9n8UfrkZfZ+PmjfKWsatc6rJHqEkjrLExiDjivJGF&#xA;eIAA6HLdDqJyyESPRxu19Fhx4QcYAo7/ABTb6xqkl1JDCzOVZtgAaAGlTtnScEBEEvO0KRlhaavc&#xA;XHpXEr2y8inJlX7QFaUJWu3hlOXJjiLAtjKQAURFrZTmJV4+n632k+xWlfvyfFiuq611TYVDbayG&#xA;4NcxrLUK0ZZeQJUtvt2AyPHj50aRYVEsdQ9Od7i8SIxqjRksAp5nYnaoH0ZE5YWKja8Q7kO1vqoi&#xA;ikSfkJI2kc8k4oqtx3apHXLBPHZFdU2GzZeYqsKMSrcCA6Hcio7+GPiYV4ovL/zua7uPLFqr8pHj&#xA;vkHE9RWORaU+dMhqoRELHeshs88u/KvnrylZ2epSSS6XcXvEw2ccrxXlDyILwrRgP3ZrXp3zXCXc&#xA;1Aplo/53+fNOIS4ni1GNduF1GOQ/2cfptX/WrkxMpZzo/wDzkRo03FNX0ya0Y7GW3ZZ0+ZDemwHy&#xA;rkxkTbOdG/MTyVrHEWWrwGRukMrejJXwCShCfoyYkCrKbNyJ0dKGm9e1KZHILCDyTT65J/KMxvDD&#xA;DhUL24kkt2WgA2Jp4DJ44AFMRulmZLN2KuxV2KuxV2KuxV2KuxVQub+ytRW5njhHbmwUn5A5CeSM&#xA;eZAbsWDJk+mJPuCVS+fNAtCxQyXMnQCNaD6S/H8Mwc3aGMct3ZYuwtRPnUff+xKb78y9SZf9Es0g&#xA;RvsvITISB3FOA/XmFPtCXQU7PD7O4x9cjL3bfrS/zBf+ZktbKa91Fj9fi9dbaImMrGTRS4UKKN2y&#xA;jLlyULPNzNDp9MZSEIfQas77+Vr7jyfCdD/SlheNfMq+vJGYmiBiDFXKkk1KsN/bfInB6eIG0Q7U&#xA;PjeFOPB053vzHzTnTdK0p7/SXtvL5a0vYm9WSdpZfTk5svxcqIaCOtKdDXLYQjYqOxcDPqcohkEs&#xA;3qgdqoWKHx6/NfZSS6dcJJeW2n6fq0iTLSJ47cxRAKVc0SeNXrUL8O4O+GPpO4Al+PexygZYkQlk&#xA;niBjzBlZ325xJHfv7kHf6pC3mfSLgX31qehhnCyLMiByQoEixQA15knbbxyWPJWaJvybY6Y/lcse&#xA;HhHMbUTXlxS7k2S9ksr+6KJzWXkjgVBAJ5VBHQ51ZxicB5PMkWFRddvfVV/q6OY35xcw7FTxCncM&#xA;K1p3yP5aNVZ39yOALE1XUFQxpAgUq0YHpkkIx5cATU0ByRwQu7+1eEN/pTV/U9URgSn7cgiHJvh4&#xA;/EaeBweBjqr2968IbbUNYdy7QBqoqMphqpCGq7UptiMWMDn9q8Ib+vaq0XptaqYuBjMfplQVJ5b8&#xA;eJ674PDx3d7+9eEKqajqpYO9orusomDEMDyA4j9qlAuw2yJxY+Ql0pHCO9gn5n+V9e13Qmi0+xaa&#xA;YXKztAHVTwHLkFZyN/ix1BBgADaZcmL6x52ubH6xBqWh6v5eSfTLbSo7yOQSyQpaSKymB2S2U+qo&#xA;4yHl8s1hgQ08KF8wfmxo95pGoXGnwImsX9+boW13Y29xHDDQxhUmYn42oJWbh9okDxwCK0hvJOgf&#xA;l7ceTZrnWjYvrCerdL6t+0D+jHstuY1kQq7lCVKxSVBoeJK4km1JKca95D8rarb6fBYWN5odpZ6Q&#xA;b86x6UVxazL6H1uUPL+4kmdOfDmCaUpxGAEqClWm+UvzG0CW1l0PXCLF4ra4unjm9FLaO74mISw3&#xA;hgiaR6/DGCWPtUZLjTbJNX/Nvz35N1240fWI7XX0sxGbi6ije2cGRA4RmUGNWAYV+DCDahPtF/5y&#xA;H8lXoCalFc6XIftM6evFv4NFV/8AhMK0y/S/M/lvVz/uK1O3vO4SKRS4HuleQ+kZfGVskyySuxV2&#xA;KuxV2KuxV2KsG1Q+bLzXptKtZpHJJeGONliHpHcVb4elaGpzRanJm8Qws/ds9do46SGnGWUR53vv&#xA;9qHPle1trKfUNUvWmFvKsVzb2Y9RwWYqayvRKjiele2YvhAC5FyR2hKcxjxRriFgy2HyG/3JvBba&#xA;Lb6iNOtdNVYr6FW03V7j97+8eJZFJDjgKVINBUZaBEGgOfIuFPJmlj8SU94S9UBttZHTdJvO100/&#xA;mIpNdi4tYljSNoWV1VQqh+Kr8IYkEkZTnNz57Of2Tj4dPYjwyN8/s80s8waoNT1Wa5jUpbikdtGf&#xA;2YYxxQfcK5DJPilbl6LT+DiET9XM+880fJ531vjCtsILMW6GOL0IlBCnqAX5kfRk/wAxLps447Jw&#xA;78XFLiNmz+qkul1LXNRlpJc3N1ITyCcnff2UdPoyFzkepckYcGEcoxHwCPsvJHma7AZbN4o26PL8&#xA;I+7dvwy6GjyHy97iZu2dND+Kz5fik90/8tbyORJbmZwyEMFijPUGv2m/pmZj7PANyl8nVaj2iBBE&#xA;Y8+8/oH62ZfU7r/fTfdm28SPe8zxB31O6/3033Y+JHvXiDf1G7/302PiR714g76jd/76bHxI968Q&#xA;bFhdn/dR/DB4se9eIO/R95/vo/eP64+LHvXiDv0fef76P3j+uPix714gsmtpoePqrx5VpuD0+WSj&#xA;MHkoNqJAIIIqDsQcklj2rfl35J1XkbzR7cyN9qWJfRcnxLRcGP04DEKwzVv+cevLU/JtNv7mxc9F&#xA;k4zxj5D92/8Aw2QOMKxeb8l/zI0W4S58v6is0sYYQva3D2s45faA5FFXl/r5A40UhdQ1781tImY+&#xA;adHfUrXnbyTC9ti0bNZsWjcz2/Dk4DFSzM1RsagDK+FFI+H86rO7tJYLqCWxmuHvy5jWO4hc6i1S&#xA;8/MBiIa8eIRqqABQiuR4UcKP1HS/y18yiV7RLBm+saRp9hPprjT7uT15ES7nmtXCxAcpaArAfnQb&#xA;O4RulXmf8t7bWdY1G48nx/o200hY4Z7TUFa0cujGFZYnZpA4laItzf0wO+9cIlXNIKD/AC91z8wY&#xA;/O9r5bGqTFIrhor6CSRLqNY4CTMqsxkUbIQCh69MtgSyD6Ky9LsVdirsVdirsVYt52sVH1TVByX6&#xA;vIqTtHTmIy1QRXaoPT55q+0sWwn3PQdh5/qxfzhYvlf4+5Aan5/aae4aztAUuFCsLx2nAo3KqRVE&#xA;ab0PQ5rp6myaHzdlp+xeGMROW8f5vp+Z5lILnUNb1iRUnmnvWX7EfxOB2+FBsPoGUmUp95dnDDhw&#xA;CwIw+z7UdZeR/Ml1Q/VvQQ/tTME/4Xdvwy6GjyS6U4mbtnTQ/i4vdv8AsT+y/LDob69+aQr/AMbN&#xA;/wA05kw7O/nF1eb2j/mQ+f6h+tPrLyP5btaH6t67j9qZi/8Awuy/hmVDR449LdXm7Z1M/wCLh923&#xA;7UWLWG2JihjWNB0VAFFPkMz4AAbOvlklI3I2WQWYpaxf6ozDyfUXHlzVJJEjjaRzREBZj4ACpyIF&#xA;mghJv8a+Wf8Als/5JS/80Zmfydn/AJv2j9bZ4Uu5pvO3lkCouyx8BHL/ABXCOzc/837R+tfCks/x&#xA;z5b/AOWhv+Rb/wBMP8m5u77QvhSd/jny3/y0N/yLf+mP8m5u77QvhSWN598vA0DyMPERmn40yQ7L&#xA;zeXzT4MkRp3m/R9QvI7S3aQzS148koPhUsd/kMry6DJjiZGqCJYyBadZhNaW6z/un/ZfwzJ0/Vsg&#xA;lmZLNKdd82eW9BCfpfUIrRpN443JLsOlQigtT3pgJAVrQvN3lrXuY0jUYbt4xV40NJAK0qUYK1Pe&#xA;mIIKp9aJVyx6L+vIzOyCi8pYpHrHkbyfrHI6lo9rcSN9qYxqsv8AyMTi/wCOKWEat/zjv5LuiX06&#xA;e60yXqgVxNGP9jIOf/D4raETyH+cHl/4tG1+21mOPmYo79P3oLgKShlEtKqACPUp7ZExCKCC/Jn8&#xA;uta8vanqd/rtobW7VFtrRSyOCrHnIwKFh+yoB+eX4x1Zh6zliuxV2KuxV2KuxVRvLSG8tZbWYExT&#xA;KVanXfuPcZDJATiYnkW3DmljmJx5hDad5I8vWyKzW3rydeUxL/8AC7L+GYI0eOJ5X73Nzds6if8A&#xA;Fwjy2/ansNvBAnpwRpEg6KihR9wy8RA5OtnklI3IklUwsHYq7FVC7jqocdR1+WWQLIJraClrF/qL&#xA;+rMSf1FqPNq8QvZzoOrRuB8ypw4zUh71HN4z6M38jfcc7HiDnJrYalDbWRt5dMWeUsxFwyoWAIoB&#xA;8Ub9MxcuEylYnQ7vwWBjZ5rzqsbziRtNQRh4n+roiKjemrghqJQ8mevT2weAQK4+/f315+S8PmiE&#xA;1KJRQaECtSQCiHYsWpUw12rTr2ys4Sf8p9//ABSOHzSe5t7ua4llW1eNZHZggQ0UMa0FABt8sy4T&#xA;iABbMEJr5OtrmLzJZvJC6oDICxUgbxsB2zF7QmDhkAe77wwyn0vT85lxEu1kfDEfdv4Zk6fqzgle&#xA;ZLY+b/zq03V5/wAwbtkgmuImht/q/BGcKnpgFRQH9sMcx8sgDuyESeQYTc6RrOmRRXdxDJaB24xO&#xA;TwflSvSvIbZVHICdimWOURZFPdP+cffPGq6tHf6Fqc73T2aLcWk8hLP6ZPB0ZjuQpK8a++WW1l7J&#xA;ixdirsVdiqHu49g4+RyzGejIIXLUuxV2KuxV2KuxVfEnOQL27/LBI0FKPzHYOxV2KuxV2KtEAgg9&#xA;DhSmMC8YY18FA+4ZjyO5ayvyKHYq7FXYq7FXYqxbz3o9zdWsd/b3jW8tl8Sx1KqSf2gR9lvf9WU5&#xA;o2Lc3R5RE8JF2w+Dz5ra3VlJcusq2jEOQKNIjDiwYg8Tt0NOuUDMbDnnRwo11ejas6vFA6mqtUqf&#xA;YgHNrp+rp4BLcymbzDzv6Nx5lnHJSnoCAgkOGcCtAhqNq7jNPrJ/vPc7TSQHB72G63oWn3+hRJNc&#xA;iwhtn9d3koPhHwOERm7lhQDK8OWXFYFpz4o8IBNJv/zjZa2p1vzBcRuW9KKKKAtsxjkkckkf881z&#xA;ZB1MnvmFi7FXYq7FWmUMpU9DhBSl7KVYqeozIBZNYq7FXYq7FXYqirRKAue+wyrIeiCiMrYuxV2K&#xA;uxV2KuxVMk+wvyGY5a0n1ie7uNQt9JtZTAZUM1xOv2hGDSi/MjLIAAWXXauc55I4oHhsWT5JVaad&#xA;FLdXUWnyzW95bVMMpcsH4mhEgO258MsMtt+SJ9mCIvHKQn7+fvZBo2om+0yK6kAV6ESjsGU0P6q5&#xA;TONGnI0mo8XEJHn1SGxkt9duXkv7p0QsRa2SkovEdyR1Jy2VwGzhYMJ1Q8SZPB/DEL4LyDS9Vt7a&#xA;0u2uLKd/SkhclvTcmilWO1K4kcQsjdkYS0s40ScczVHoeiv511m+0+ytLXTiBqOqXCWlu5pROf2n&#xA;3BGw9sw8kiBt1ep7K0sMs5SyfRjiZHz8mGa/omlabCLdJ9RvfNk7hLaRZ2DtKd+deyD7/fuK8uIR&#xA;HMkl3fZ+vyZ5EmOOGnj9Xp2ru9/4rolusanfSWq6XqsEQ1iwneO6u0VeUicVMZLACv2jX6D1yicj&#xA;yPNrzYMcZjJiJ8OcbA7u96rqkax28CL9lPhX5AUzb6fq8xE2WG+eZ/NNv5cuZ/LKRyanH8Xpuhd2&#xA;j35ekKgeoOoqDXpStMyZXWzN4foll+Z9tb/X7+zu4tHLtJPc3cQUlpizcqyASNzkbr75rNVCNEn6&#xA;nL0mWXEI3srX/kjzh50lD6Pb/XDZIxlDOkQBcjiqlyq8mofuyrRy5tvaFCl3kTyd+bfl3zjDDY6f&#xA;Np00w4XVxcR+pZ+jUFi7qeD8eoCty8MzwbddYfTChgoDGrU3PSpwsW8VdirsVdiqFu46EOO+xy3G&#xA;ejIIfLEuxV2KuxVsAkgDqcVTBFCqFHbMcm2LeBDsVdirsVdirsVTJfsj5ZjFrSjWLa9hvrfVbOP1&#xA;3hUxTwD7TRk1+H3By2BBFF12rxzjOOWA4iNiO8JRaXcsVzNLYQzz3lwGURvD6aoWatWbkw2ywx23&#xA;5In2kZCscJcfmOXvZFo+nfUdNitWIZwCZT2LMan+mUzlZtydJp/CxiJ+LH4bWLSLkR31pLLDC5a0&#xA;u4QWFCeQWQDuD/nTLSeIbFwsOWWl/dyBMP4SN/mqWNgt7fQNbWsltp1vIJnkm2eR1+wADX4RjKVD&#xA;c7pMp6nJE0Y44G9+p6Ijzrol/qVhb3GmFRqmmzpd2atTi7J1Qk7fFmHliSNuYep7J1cMUzHJ/d5I&#xA;mMvK+rB9J1CO0E91qFlqtz5unlrIRARup+GOPcgR09vooMrxZOGyQTIu912kObhjjnihpo8vV8yf&#xA;P8Wk2sw6omp3EuqqI9Qum9eeIEEJzA4pUfypTMed3vzacmTGaGLeEBwg99cz87er6je26aPaXUzr&#xA;HEURizbD4kBza4JACy83GBMyAx17q41G6jtLeqpIwUeJ8SfYdc3IgMceItlULLOWtoHt/q8kavAV&#xA;4NE4DKVpShB2IzRSN83Fs3aTWes+XbLWx5asoVt7gAuY4YljhDFPU4/DQcuHxdMqEog8Ic6WhzHB&#xA;45+n3786v3Xsx/Xbmca5cSByrxtRCD0AG2dFpoDwgGqA9LIrC5+tWcU/dh8Q/wAobH8c12WHDIhr&#xA;IoojK2LsVdirsVWyIHQqe+EGkpeQQSD1GZDJ2KuxV2Kq9qlX5Hov68hM7IKvJcQROiSSKjynjErM&#xA;AWPgoPU5SxVMVdirsVdirsVdiqZjpmM1uxV2KuxV2KuxV2KuxV5R+Y0LR+ZpHPSWKN1+QHH9a5hZ&#xA;x6nd6E3jYtqPnOG8jhhu9QRorRFiiirsoQBfsj9rbc5I4ch6MoZMUbIPNlHkv8wfJenwSTanqccc&#xA;6qEiASV249/sI2/TNpx5DijE9PwHXaoiUvTyemaPrGm6zpsOpabN9Ysrjl6M3FlrxYo3wuFYUZSN&#xA;xmORThkJND5c1JPO8uvs1ubaWI23pgN6ixhUKvWlC5cEH/J75SIHj4nbz12M6MYPVxA8Xle+3ur7&#xA;Uh893K2GsV9MsbiNZAdgKj4CP+FzYR7SGKAjVlo0uHjjz5I3yRqZvbCdWUK0MmwBr8LAEfiDlcdU&#xA;cxJIpjqsPAQyPJOK7FUt8y31zp/lzVb+1Xlc2lncTwLStZIomdRTvuMUvCPKn/ORGt6bZxWet2Q1&#xA;VYl4LdrIYpyB0MlQ6uffb33xWmb6R/zkP5KvbiOC8gu9O50BnlRHiUn+YozP9PHFaejXAU8ZUIZJ&#xA;BUMNwfcH3y6BSFHJpdirsVYn5l/N/wAq+VdaTRdQjuZLjgslxLCiskXMVQHkykmm+wyiZ3QXhP5h&#xA;+fL3zn5ih1SztZbSOxjWK0RGZ3Xi7OJCVACuSe3h1NMgSkB7J+Tn5oaz5rkudN1i2H1u2j9aO+iQ&#xA;pHIgYIyuPshwWHTr4bYbQQ9QxYuxV2KuxV2Kqv1mf+b8BkeAIoLWnnKkByD2O2ERCaCDN/eg0Mhq&#xA;PYf0y7wo9zLhDX6QvP8Afp+4f0x8KPcvCHG/vD/u0/hj4Ue5eENfXrv/AH62Hw49y8Id9eu/9+tj&#xA;4ce5eEO+vXf+/Wx8OPcvCEDqNjaakyNfRCdoxRGbYgeFRTIS08Jcw2Y8kofSafM+uW4ttb1C2AoI&#xA;LmaOn+pIV/hhYuOkXpiR0XmXFRGKh/oBA5f7GuVeLG2zwpU+hPySvlfyVb6e9VubJ5Q0TCjBJJWc&#xA;GhA7scolMGRppy4jGier0DA0sF/NO15W1jdAf3bvGx/1wCP+IZj6iO1uy7OluQlP5c3HG/u7ev8A&#xA;eRB6f6jU/wCN8OjO5Ddr4+kFnubB1bsVaIDAgioOxB6EYq8M86/k95Ta5vbywnudFSKXg8Rh+sQE&#xA;soctCiN6gQct/ChoKDMeWYiVORHFcbeXeefKD+VNZXTHulvC8CTiZF4CjlhSlW/lyzHPiFsJw4TT&#xA;6p8ol5/Jehs44yPp1oxXfZjAhpvl0TRa0Vl7J2Kr4U5yAdup+WCRoKWL+dfyj8r+aryXUrlZIdUa&#xA;AxLNG/FGYKRG0i0NeG3SmY7G2E/kz5Q8z+W7vVl1i0+qx3UcJjrJG5LRl+yMxGz9xmDqZg7dQ5eC&#xA;JG71W3m9KdCx2Ozb0H3V+nK8M+GTZlhxRTjNk692KuxV2KoLUda0jTQv1+8htee6CV1UmngCanIy&#xA;nGPMs445S5BBWHnPyvf3S2tpqMUlw5okZ5KWPgvILU/LIRzwJoFnLBOIshOstaUJdR0fkOjdfnl0&#xA;CyChk0uxV2Kpb5i1uDQ9FutUnUuluoIjBoWZiFRa+7EZXlyCETIs8cOI08rn/O3XXtpkjsreKdiP&#xA;RmBZggrvVW+0fuzWnXyrk5w0cb5q/lL83NZk1a2stZEc9tcyLF66qI3jZzRWNPhK1O+2Sw62XEBJ&#xA;GXSirDEPPtv6HnLV0pStw0nb/dnx9v8AWzPPNwGtI8wW9mEE0R+GtfTAAPvQMq1/2OYubTmXJysO&#xA;oEeb0jybYar5g02fU9CmMfoym3kjLmKU0VXqKfDx+Lu3bMKWnnFvlrMZ2ITG5tvzAt6rKdRIGx4S&#xA;SyLT5ozDIETHezjLAeXD9iVXB12d/qtx9alenP0JPUY0Hfifnkake9uBxjcUyLyRo2qwaobqe3eC&#xA;FY2UmVShYtSgAO/bMnS45CVkOLrMsTGgbLO8z3VuxV2KpRd27LJLK3wBv92NvxO9KV275rMsJWS7&#xA;LFONAc0oufI3lTXppL/UbSO7maNbaSaQVbghLUUt9gnmfiWh98u00CRd7NOpmATsyyNY1RVjAEag&#xA;BVWgAA2AFMzXDBtC3MfGSo6Nv9OXQOzIKOTSi7RKKXPfYfLKshQUu1PzVpWnTNDKXeVPtqgFATvQ&#xA;kkDLoaWRjxEiMe8s8eGUzQCVN5nhv5uNvEYmQcjyoeYO3bw+eYHaWnGLh3sy/HNzcGGQBJ5cmzqa&#xA;O4gZeEzKSp6hlFK0NPhIr0OYE+DhFH1dQ3xxS3P8IZPa3dtdwLPbSLLE1aOpqKg0I+YPXNnGQkLD&#xA;qsmKUJcMhRVcLW7FWndURnb7Kgk/IYpfNer6pd6rqM99dOXlmctua8QTso9lGwzRzmZGy76EBEUF&#xA;Gyiu5bqJLRXa55AxCOvLkDsRT3yISfN9G6PfXF1aA3cP1e6UsrRFlclVYqr1Xb4wA1O1aZusWQSH&#xA;m6TJjMT5IuVOcZXv2+eXRNFrCAy9k7FXYqx/z9pLap5S1G1jJEoj9aKgrVoSJAtP8rjx+nMbWf3Z&#xA;b9OamHzlmjdqm3lLTJtS8yafZwkK7zK5Y9Asf7xj/wACpyeP6gwmaiU6/NiD0vPF63+/khf/AJJK&#xA;v/Gub6XN07D8Coa8vdRs3hksbma2d+auYZHjJC8TvxIyJCCtm82+apkEc2s30kYFAj3MzCnToWxo&#xA;LTvLXmPUNA1+11q1YtcW8nN1Y/3iHZ0Y+DqSMVfYGl6ja6nptrqFq3K2u4kmibvxdQwr7775Fiis&#xA;UOxVJdf8xW+nlbNCWvrhWMar+wtD8bfwyHiATEepXVYpx0uTNyjEV8TsK+bAZ/M93FfMrlp4YyVY&#xA;MzciR13NRsfbMDVa08RgAOF2fYPsxeGGoyTn4shdX6aPLbny8+a0a/LeX0SLEI4j8JBPIn6dshpN&#xA;VITEehbPaL2dxHSzzEk5ccdu73U1H5ge2vWBUp6blRIhNRxPWmZJ7RqZjIbXTp8XsUZ6XHnwZCMs&#xA;oRlR5WQDQI5fG3qaSRXlnHPCwdJFDxsNwaiuZsJDmOTMxlE1IUe5DKCxAHU5kFKPJSKIk7IgqT7A&#xA;ZRzLF4Z5wu5Z7lHY/wB6zysP8on+3KfaSRj4eMcgP2Pcey+IcM5ddgq6Fqc62nqqeUtse/Qr3B+j&#xA;MTT5jk0konniII9x2IbO0NHEakfzcoIPvG4LIrHXY77UrWJI2Q/GXJI/kJp+GYAyWQ4eXQHFjkSb&#xA;5fenHlK5ax80ahpLH/R71BfWynoHrxlA/wBbr9GZeinUzHod3B7TxjLpYZf4oHgPu6M2zZvOOxVC&#xA;6r/xy7z/AIwSf8QORnyLKHMPmjNE79NvLfmO80O99eGjwSFRcwEbOoPY9mFTQ4QWMo2918u3sOoW&#xA;i39sytaTqDGafHyr8QPhTpTxzaaQbEur1Wxrqm2ZTiIO5j4yVHRt/py6B2ZBRyaXYq0QCCDuD1GA&#xA;gEUUg08L8zflX5hsNRk/Rlub3T5GJt3QrzVT0R1JBqPHofwzSajTmB8nZ4s4kN+bKvyy/LvUtJvv&#xA;0xqwEMwQpb2oKuw59WcioG2wAOZWk0v8Uvg06jPfpD0KfRtLvZw9zZQTymi+pLEjtQe7AnNiXBVr&#xA;jQ9FgsZ/R0+2j4xuw4wxjcL12GUWxfGiXEryqZHaQ0KryJP2hTvgCW8ml2Kvpn8g9SkvPy/jhck/&#xA;ULqa2Un+U8Zh93rZEsS9GwIUL28hs7Sa6nNIoULufYdh7nIzkIgk9G3DilkmIR5kvK7W+lv9QvdU&#xA;uT8bbkdQFO9B/qhQMwdDLilLIegcr2wiIYtPo4fxz+6h9plaREkkk7k7k5qibfQYxEQAOQVLV+Fz&#xA;E/g6k/fk8MuGYPm4faeDxdNkgOcoSHzBV9ViKX0u2zUYfT/bl+thw5T83V+yuqGXs/EesRw/6Xb7&#xA;qZV+XWt3SXTaXJV7VwXjY/7rbw+TeHj9OXaHMQeE8mHb+jgY+KNpff8A2fczi0Srlj0Xp8zm7mXl&#xA;CpeYJ/Q0W8foTGUB/wBf4P8AjbJaWPFkiPNYDd5knliPXrkRG5Ns0SFgwTmD8QFKVXD7RaXjjGd8&#xA;jXz/ALHouyu1DpuIcPFxedO1DyzFoKtDHM04miZmdgB8Q22A9s0mjx8MMv8AU/SHZS7QOplAkVU/&#xA;0FDeW/8AjtW/+z/5Ntmux/U53aX9xL4feHoWkWVpJq0d3JHyuYI3WGSp+EPQNt06ZsdMBx28lqM0&#xA;xiMAfSSL+DJM2TqHYqoX6CSxuUJoHida/NSMEuTKPMPmXNC792KvVPyp8zabZ6NPYX1yIXW4Z4eY&#xA;PHiyrUcug+IHrmdpc8YipGnFz6HLl9cI8Qej215aXSc7WeOdB1aNg4/AnM+MxLkbdZkxTgakDE+a&#xA;6ePnGR3G4yyJosAgcvZIXUdQgsLczS1O9EQdWPhluLEZmgkC0A2uzEVSNRXpWp/pl40w6lnwIG4u&#xA;ZrhuUrcqdB0Ay+MBHkyApVt9RuoFCq1UHRWFR/XIywxkgxCZad5gt/rkUFwvpvLtG4+zy7A+Fcxs&#xA;ulPCSOjCUNk/niEsMkRNBIpUnwqKZrmp8N4sldSWQGnTYnxOSCW8Kvpf8gLBrb8v1mPS+u551+S8&#xA;Yf1w5EsS9IwISbzLJBLZtYSKHE4HqKeyg1H01GYmrmK4e9ztDxRmJjamE3Wkfo2xmQEtHNG8sZbr&#xA;TiVpt/q4MGPhwS87+5wO1NWdR2tprH0mHz47/UxXNK+puxVkcMcd0I7hgGV4THID41B/rnQY4DLU&#xA;zvcaP2ftfFdfqcvZ5yaaBMJQzjJD3cMh9xjt70/0zTI4NMW4tkCJyKyca1DDoSTv3zGz6YYzceTv&#xA;+zO1smsxCWU3Mbfgck3g88+R0jA/xFplep/0y3/5rzYyNlpKU+bPPHk+XR2it9d0+V3dAVju4GNA&#xA;a1oH9sytDKIyWTTPHzYxoPm3y3b6pCzatZqjVRibiKnxDb9rxpmZ2lKGTBIAgnnzciMhbNNY0aLV&#xA;okInMdFYI6gMCHpv1HhnLQzGMJRr6xTnYM3hzEudG0hh8iXlteQTQ3iOscis5ZShoDvQDnXbMIYq&#xA;I3dzPteE4GJidx+O5N5vMGg6TcNHNq9hBd/ZWO5uIoSAf2irMDmXjjIG4vPZJxIqSYQeevJaQosv&#xA;mXTJJAPjf65bip+QfNjEEDfm6+VE7ck8trm2ureO5tZUnt5lDxTRMHR1O4ZWWoIPtkmKWebNct9G&#xA;0K5vJt24mOCPu8jAhR/E+2VZsghG3J02A5JUOQ3P4+z3vnXNK7h2Kpnpd3awwus00cbFqhXZVNKd&#xA;aE4DjlLkCXb9najHCBEpRib6kBONM142VyLvT7lGmh+Lijgggb8WAPQ4gZMR4qIc6fgakeHxRlfc&#xA;Qfi9s0rUrfU9Ot7+3P7q4QOo7gnqp91Oxze45icRIdXgNTp5YckscucSsuI+Ehp0O4zKgbDWGE+a&#xA;Lwzah6IP7u3HED/KO7H+GbrRY+GF97dAbINNd0aKNEm1C2jkAAZHmjVgRtuCcrnkiCdwtt/4i8v/&#xA;APVztP8AkfH/AM1ZHxY94Ww7/EXl/wD6udp/yPj/AOasfFj3hbCHuL22upRJazpMigUeJgwr16qT&#xA;mXgIMdmQekaJfG+0u3uCauV4yf6y7H76VzQanFwTIcaQovjHV7c22rXtudjDPLGRTj9lyOnbplCr&#xA;IklNu0nH9yjhS3bk4JA+5MISHZJX195KtINF8oaNp08iQzRWkRlR2CkO45vsf8snIsU6+v2P/LTF&#xA;/wAGv9cCse1l4Fumm+sRvHJ0YOppt0O+a/UYyJX0djpsgMa6oHzHq2m3ehPykiF1ErKKMN1KHpQ/&#xA;LLhl4sch14S4GbTxjqsE/wDbob+8vOfXg/34v3jNJwl9M4497vXg/wB+L94x4SvHHvTTQr5BO0Pr&#xA;L6bKSF5D7VRmy7OyESIP008J7c6HHkwRyxF5RMR25kG9vn+N2X215Elstt9YQqWL8Aw+0QB4+2T1&#xA;GU5Dtydf2PoPy2GpH1Hc+Xk+b/0XZfyH/gj/AFzZcKKd+i7L+Q/8Ef648K079F2X8h/4I/1x4VpF&#xA;2kl1Zrxs7q4tl/lhnlQb+ysMBgDzSDTdzNeXQK3N5czg7ESTyuP+GY4iACkkoP8ARdl/If8Agj/X&#xA;DwoplP5b+Q9B8y+YW06/EqQC3eUGF+LclZQN2DCnxeGAhBfSmjaVa6RpVppdqWNtZRLDCXNW4oKD&#xA;kQBvgQ8o/N7WpLnWk01G/wBHslHIDvK4DE/QpUffmq1c7nXc73S4/DwA9cm/wGw+2z8mA5is3Yql&#xA;V/JzuCOoQcR+s/ic3Wkhw4x5up1MrmVlozLdRFSVPMCo9zTLcsQYkHuXSzMMsZDmJB71+UGqGbSb&#xA;vTnNTaSCSOv8ktdh8mUn6c1vZmS4mPc7/wBqtNw5Y5B/EK+I/Z9zObtR6LOf2AWJ9h1za4+dPLB4&#xA;95lupTpmoXKsVlZHbkOoLf7edDn9GI10DknYPJ859pdXArsKsj8iySLrJQMQjxNyXsaEUzN0BIyU&#xA;yhze5+RLnlb3VsT9hlkUf64of+I5PtOG4kjKHzF+Ydp9U89a/DSgF/cOo8FkkLqO/Zs1bBOrS0s5&#xA;vybuZ4kpe2uuI1xJ1Jie2Kp8hybCFY3oH6P/AE7px1I00/6zD9cPX9z6g9T/AIWuFL6A/OD8tbDX&#xA;4rjzPLeyQzadYFI4EVSjiJnlBJO+/qZFiHz/APoWL/fjfcMlwsqd+hYv9+N9wx4Vp36Fi/3433DH&#xA;hWnfoWL/AH433DHhWnfoWL/fjfcMeFad+hYv9+N9wx4Vp36Fi/3433DHhWkxySXYq7FXYq7FXYq9&#xA;C/I7/lNH/wCYOX/iaZEoL33IsHgv5h200fm3UFcULSCRPdXRSM0Wolw5ZAva4dIc+kxzx7mMaI9x&#xA;YvyWjGoopoxr0Pvh8OXcXU8Y70v1bUxbWcjwMGmAAU9QKkCvh3zJw6SR3lsHGzaoAVHmlOnMzWcb&#xA;MSxPKpO5+0c2o5OsR1r/AL0w/wCuv68E/pLbh+uPvD1/8nvW/Tt5QH0fqp5nty9ROP4cs0nZl8Z9&#xA;z2ntXXgR7+P9Bv8AQ9O1uT09IvHHX0XA/wBkKfxzodMLyR97wsebx/zH/wAcO9/4xHN7q/7qTkS5&#xA;PLc59pSzWyR6NDT7R+6mRkgpnkksh8jf8dwf8Yn/AIZmaD+9DKHN7L5HkK6rKnZ4TX5hlzM7SH7s&#xA;HzTl5PBfzlg9H8y9cSgFZIn26fvII3/42zRtSZ/lvbHUvIvnrS6cmW1t76Je4a1Z5GoOu/ED/bxC&#xA;sAyaX0tpOuNrP5ISXcjcp49OmtpydzzgBjqfdgob6cj1R1eE5Nk7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq9C/I7/lNH/5g5f+JpkSgvfciwYl588krr9utzaEJqduvGOuyyJWvBj2p+yf8xhazSeILH1B&#xA;33YnbH5WXDPfHL7D3/reDal5a1iC9mjaAlw7cwCtVau6nfqDlmLWQ4QJGpDmx1PZOUzMsY44S3B8&#xA;ilGt6TqNvpk0s0JSNePJiRtVwOxy2OpxyNA7uHm7Oz44mUo1Ee52iaTqNxpkMsMJeNuXFgRvRyO5&#xA;xlqccTRO64ezs+SIlGNxPuTrR/Kus3upW9ukQjeSRQrOygVJ275XPVwIqJuRcrD2ZlhLjyDhhHcn&#xA;yHc+ifKnle08vaaLaI+pPJRrmcihdqdvBR2GHT6cYo0Obj9p9oz1WTiO0RyHd+1Nbu2S5tZbeT7E&#xA;qlCR1FRSuZWOZjIEdHXA08z1vyre+hdWE44CaN1hn6oSRRT/AFGbyeaOXGRE83I4gQ8wk8i+aUkZ&#xA;PqJehpyV0IPuPizVHTz7mvhLGvN2iarpf1T6/bmD1vU9OpU148a/ZJ/mGVZMco80EMj/AMEeaf8A&#xA;q3v/AMFH/wA1ZZ4E+5PCWR+SvJ2r2l7LeX8Yt1EbJHGSrMzNTf4SaAUzK0uKUZcRZRD1fydolxbM&#xA;99cqY2kXhFGevEkEsR26bYe0NSJemLHJK9ngn59Q+n+ZF6+376G3fb2iCb/8DmrYBPv+ccII7jVd&#xA;eglXlFLZpHIPFWcgj7sUF5bqVjLYajdWM397aTSQSf60bFT+IybJ7D+V120n5P8Amq1Jr6DTsvsJ&#xA;IF2+9TgQebzbJMnYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXoX5Hf8AKaP/AMwcv/E0yJQXvuRYOxV4&#xA;hqnP9JXfP7frScvnzNc5zJ9R976Xpq8ONfzR9zGvOv8AyjN5/wA8v+TqZdo/70fjo4XbP+Kz+H+6&#xA;DvJX/KM2f/PX/k6+Os/vT+Oi9jf4rD4/7osn0f1f0vY+l/e/WIuH+tzFMqxXxiu9zNXXgzvlwn7n&#xA;tudE+auxVJ/M3p/Uo+X2+fwfca5maO+I+5sx82M5sm55X+ef/Sk/6Ov+ZOYGu6fFrm9UzPbF0fD1&#xA;F5/YqOVOtK74DdbIZ4KUFOnbNG4z5n/5yH4/4/SlK/UYeVPHlJ1wMgyH/nGT0vrHmGv97wtOP+rW&#xA;bl+NMUF5/wDmh9V/5WDrv1b+7+tNy/4yUHqf8lOWSDIM4/Kn/wAlh5z/ANRv+TJxQXn+SZOxV2Ku&#xA;xV2KuxV2Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F87F117407206811822AB2A6B75D99AD</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stRef:instanceID>
            <stRef:documentID>xmp.did:0880117407206811822A8072EAEFE205</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AC3D3EC9D6DEE611ADF3FA58164AFD71</stEvt:instanceID>
                  <stEvt:when>2017-01-20T09:07:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T18:36:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:05801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T21:11:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:577FABBD61206811822AA8872E1D75D1</stEvt:instanceID>
                  <stEvt:when>2019-04-07T19:22:06+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stEvt:instanceID>
                  <stEvt:when>2019-05-11T00:15:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</stEvt:instanceID>
                  <stEvt:when>2019-05-18T09:11:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3069.905736</stDim:w>
            <stDim:h>1964.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1964 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1964 li
3069.91 1964 li
3069.91 0 li
cp
clp
gsave
3069.91 1964 mo
4.54747e-012 1964 li
4.54747e-012 .002455 li
3069.91 .002455 li
3069.91 1964 li
cp
clp
3195.75 2005.79 mo
-465.359 2005.79 li
-465.359 -7.62376 li
3195.75 -7.62376 li
3195.75 2005.79 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0680247 .149508 0 0 cmyk
f
747.859 188.46 mo
747.859 173.61 744.45 159.556 738.375 147.039 cv
738.509 147.562 738.658 148.077 738.783 148.602 cv
566.978 148.602 li
567.105 148.075 567.254 147.562 567.388 147.039 cv
561.313 159.556 557.901 173.61 557.901 188.46 cv
557.901 205.233 562.255 220.986 569.886 234.664 cv
735.877 234.664 li
743.506 220.986 747.859 205.233 747.859 188.46 cv
cp
0 0 0 0 cmyk
f
738.783 148.602 mo
738.658 148.077 738.509 147.562 738.375 147.039 cv
729.591 113.005 701.061 86.9227 665.717 81.7726 cv
665.717 -45.1342 li
640.046 -45.1342 li
640.046 81.7726 li
604.7 86.9227 576.17 113.005 567.388 147.039 cv
567.254 147.562 567.105 148.075 566.978 148.602 cv
738.783 148.602 li
cp
.681819 .735073 .463508 .373449 cmyk
f
1563.46 2009.65 mo
735.877 234.664 li
569.886 234.664 li
-157.379 2021.19 li
1563.46 2009.65 li
cp
.021973 .0755932 0 0 cmyk
f
2564.94 188.46 mo
2564.94 173.61 2561.53 159.556 2555.45 147.039 cv
2555.59 147.562 2555.74 148.077 2555.87 148.602 cv
2384.06 148.602 li
2384.19 148.077 2384.33 147.562 2384.47 147.039 cv
2378.4 159.556 2374.98 173.61 2374.98 188.46 cv
2374.98 205.233 2379.34 220.986 2386.97 234.664 cv
2552.96 234.664 li
2560.59 220.986 2564.94 205.233 2564.94 188.46 cv
cp
0 0 0 0 cmyk
f
2555.87 148.602 mo
2555.74 148.077 2555.59 147.562 2555.45 147.039 cv
2546.67 113.005 2518.14 86.9227 2482.8 81.7726 cv
2482.8 -45.1342 li
2457.13 -45.1342 li
2457.13 81.7726 li
2421.78 86.9227 2393.25 113.005 2384.47 147.039 cv
2384.33 147.562 2384.19 148.077 2384.06 148.602 cv
2555.87 148.602 li
cp
.681819 .735073 .463508 .373449 cmyk
f
3380.54 2009.65 mo
2552.96 234.664 li
2386.97 234.664 li
1659.7 2021.19 li
3380.54 2009.65 li
cp
.021973 .0755932 0 0 cmyk
f
1681.42 952.783 mo
1631.42 952.783 1590.75 912.11 1590.75 862.115 cv
1590.75 812.118 1631.42 771.443 1681.42 771.443 cv
1731.41 771.443 1772.09 812.118 1772.09 862.115 cv
1772.09 912.11 1731.41 952.783 1681.42 952.783 cv
cp
1432.6 952.783 mo
1382.61 952.783 1341.93 912.11 1341.93 862.115 cv
1341.93 812.118 1382.61 771.443 1432.6 771.443 cv
1482.59 771.443 1523.27 812.118 1523.27 862.115 cv
1523.27 912.11 1482.59 952.783 1432.6 952.783 cv
cp
1183.78 952.783 mo
1133.79 952.783 1093.12 912.11 1093.12 862.115 cv
1093.12 812.118 1133.79 771.443 1183.78 771.443 cv
1233.78 771.443 1274.45 812.118 1274.45 862.115 cv
1274.45 912.11 1233.78 952.783 1183.78 952.783 cv
cp
1700.85 546.818 mo
1703.19 663.282 li
1148.82 667.94 li
1146.49 553.806 li
1700.85 546.818 li
cp
1868.56 458.186 mo
978.787 469.504 li
960.154 1076.98 li
1877.87 1069.44 li
1868.56 458.186 li
cp
0 0 0 0 cmyk
f
1436.44 596.189 mo
1431.28 607.375 li
1442.45 607.375 li
1436.44 596.189 li
cp
.32987 .43714 0 0 cmyk
f
1494.58 613.258 mo
1495.1 613.273 1495.57 613.273 1496 613.258 cv
1498.29 613.258 1500.3 612.981 1502.02 612.427 cv
1503.75 611.873 1505.19 611.159 1506.35 610.286 cv
1507.51 609.413 1508.38 608.437 1508.96 607.366 cv
1509.54 606.294 1509.83 605.232 1509.83 604.182 cv
1509.83 603.141 1509.66 602.096 1509.31 601.036 cv
1508.96 599.977 1508.38 599.016 1507.55 598.15 cv
1506.73 597.282 1505.64 596.558 1504.28 595.975 cv
1502.93 595.395 1501.24 595.057 1499.24 594.973 cv
1498.66 594.947 1497.98 594.947 1497.22 594.973 cv
1496.56 595.005 1495.78 595.045 1494.85 595.1 cv
1493.93 595.158 1492.89 595.249 1491.74 595.378 cv
1490.95 613.086 li
1491.68 613.146 1492.35 613.184 1492.97 613.206 cv
1493.58 613.228 1494.12 613.244 1494.58 613.258 cv
cp
f
1283.92 594.803 mo
1277.63 594.973 li
1277.63 588.26 li
1296.08 589.008 li
1295.96 594.398 li
1290.46 594.592 li
1289.71 602.132 li
1306.57 602.132 li
1307.16 594.846 li
1299.54 595.462 li
1299.17 588.687 li
1317.65 588.519 li
1317.82 593.928 li
1311.28 594.503 li
1311.28 613.534 li
1317.82 613.258 li
1317.82 619.993 li
1299.49 619.416 li
1299.37 614.004 li
1305.65 613.748 li
1306.25 605.8 li
1289.29 606.802 li
1288.71 613.086 li
1296.21 613.132 li
1295.91 619.845 li
1277.63 618.375 li
1277.76 612.959 li
1284.6 613.048 li
1283.92 594.803 li
cp
1327.3 594.803 mo
1321.02 594.973 li
1321.02 588.26 li
1339.47 589.008 li
1339.35 594.398 li
1333.85 594.592 li
1332.1 613.086 li
1339.6 613.132 li
1339.3 619.845 li
1321.02 618.375 li
1321.15 612.959 li
1327.99 613.048 li
1327.3 594.803 li
cp
1340.75 588.431 mo
1359.21 589.176 li
1359.08 594.592 li
1353.79 594.76 li
1359.08 611.746 li
1369.07 595.1 li
1362.66 595.635 li
1362.3 588.898 li
1380.77 588.728 li
1380.94 594.101 li
1373.7 594.719 li
1365.05 613.429 li
1369.54 613.623 li
1369.42 619.034 li
1351.09 619.588 li
1351.09 612.875 li
1355.54 613.048 li
1346.85 594.973 li
1340.75 595.146 li
1340.75 588.431 li
cp
1396.35 581.185 mo
1400.76 581.185 li
1400.34 627.581 li
1395.18 627.835 li
1396.35 581.185 li
cp
1416.88 613.58 mo
1422.41 613.623 li
1432.69 596.146 li
1422.86 596.551 li
1422.86 589.646 li
1441.02 589.646 li
1450.31 613.534 li
1456.94 613.258 li
1456.94 619.993 li
1438.61 619.416 li
1438.48 614.004 li
1445.86 613.707 li
1444.02 610.298 li
1429.94 610.298 li
1428.36 613.707 li
1435.33 613.748 li
1435.03 620.461 li
1416.75 618.926 li
1416.88 613.58 li
cp
1463.89 594.803 mo
1457.6 594.973 li
1457.6 588.26 li
1476.05 589.008 li
1475.93 594.398 li
1470.43 594.592 li
1468.68 613.086 li
1476.18 613.132 li
1475.88 619.845 li
1457.6 618.375 li
1457.73 612.959 li
1464.57 613.048 li
1463.89 594.803 li
cp
1485.58 596.251 mo
1484.7 596.424 1483.81 596.608 1482.9 596.808 cv
1481.99 597.006 1481.05 597.227 1480.08 597.469 cv
1478.76 590.648 li
1480.36 590.164 1481.95 589.775 1483.51 589.476 cv
1485.08 589.176 1486.56 588.953 1487.95 588.805 cv
1489.34 588.656 1490.61 588.555 1491.77 588.507 cv
1492.93 588.457 1493.91 588.431 1494.7 588.431 cv
1497.39 588.431 1499.86 588.713 1502.13 589.272 cv
1504.4 589.833 1506.35 590.73 1508 591.96 cv
1509.65 593.189 1510.94 594.779 1511.86 596.73 cv
1512.78 598.687 1513.24 601.056 1513.24 603.839 cv
1513.24 605.942 1512.97 607.807 1512.42 609.432 cv
1511.87 611.06 1511.12 612.477 1510.18 613.686 cv
1509.22 614.894 1508.1 615.908 1506.79 616.733 cv
1505.5 617.555 1504.09 618.224 1502.58 618.737 cv
1501.06 619.248 1499.48 619.612 1497.82 619.833 cv
1496.17 620.053 1494.5 620.163 1492.83 620.163 cv
1491.11 620.163 1489.07 620.111 1486.7 620.005 cv
1484.34 619.897 1481.69 619.703 1478.76 619.416 cv
1480.38 611.597 li
1481.41 611.866 1482.47 612.098 1483.6 612.29 cv
1484.72 612.482 1485.83 612.633 1486.92 612.748 cv
1485.58 596.251 li
cp
1516.17 594.813 mo
1516.56 593.842 1517.11 592.984 1517.83 592.233 cv
1518.54 591.488 1519.38 590.852 1520.35 590.318 cv
1521.32 589.785 1522.4 589.351 1523.57 589.018 cv
1524.74 588.682 1525.98 588.445 1527.3 588.303 cv
1528.61 588.16 1529.96 588.107 1531.36 588.134 cv
1532.78 588.203 1534.18 588.344 1535.58 588.56 cv
1536.16 588.644 1536.77 588.752 1537.41 588.891 cv
1538.05 589.023 1538.68 589.188 1539.3 589.378 cv
1539.93 589.572 1540.54 589.792 1541.12 590.039 cv
1541.7 590.289 1542.24 590.569 1542.74 590.883 cv
1543.65 586.726 li
1547.15 588.134 li
1542.78 598.809 li
1541.17 598.044 1539.64 597.457 1538.19 597.052 cv
1536.73 596.646 1535.45 596.352 1534.34 596.167 cv
1533.03 595.954 1531.82 595.848 1530.7 595.848 cv
1529.03 595.877 1527.63 596.002 1526.48 596.22 cv
1525.33 596.441 1524.41 596.74 1523.72 597.116 cv
1523.03 597.491 1522.55 597.92 1522.29 598.404 cv
1522.03 598.888 1521.96 599.406 1522.09 599.96 cv
1522.23 600.586 1522.56 601.08 1523.09 601.442 cv
1523.61 601.803 1524.32 602.075 1525.2 602.252 cv
1526.08 602.43 1527.13 602.544 1528.34 602.604 cv
1529.56 602.657 1530.92 602.696 1532.45 602.71 cv
1533.24 602.724 1534.13 602.753 1535.1 602.796 cv
1536.07 602.837 1537.06 602.947 1538.06 603.127 cv
1539.06 603.302 1540.03 603.571 1540.97 603.926 cv
1541.91 604.28 1542.74 604.779 1543.48 605.417 cv
1544.2 606.057 1544.79 606.857 1545.23 607.824 cv
1545.67 608.79 1545.89 609.977 1545.89 611.384 cv
1545.89 612.664 1545.71 613.772 1545.34 614.709 cv
1544.97 615.644 1544.47 616.448 1543.84 617.104 cv
1543.22 617.766 1542.49 618.305 1541.64 618.722 cv
1540.8 619.145 1539.9 619.476 1538.94 619.718 cv
1537.99 619.955 1537.01 620.12 1536.01 620.207 cv
1534.99 620.291 1534.02 620.336 1533.06 620.336 cv
1531.85 620.336 1530.7 620.281 1529.6 620.173 cv
1528.5 620.068 1527.42 619.914 1526.37 619.718 cv
1525.32 619.518 1524.27 619.281 1523.23 619.003 cv
1522.18 618.722 1521.12 618.415 1520.04 618.075 cv
1518.78 621.825 li
1515.78 620.952 li
1518.53 610.425 li
1519.81 610.979 1521.07 611.475 1522.33 611.916 cv
1523.59 612.355 1524.85 612.729 1526.13 613.036 cv
1527.4 613.34 1528.68 613.57 1529.97 613.728 cv
1531.27 613.882 1532.59 613.961 1533.94 613.961 cv
1535.26 613.961 1536.39 613.882 1537.32 613.728 cv
1538.26 613.57 1539.03 613.338 1539.62 613.026 cv
1540.21 612.712 1540.63 612.321 1540.91 611.851 cv
1541.17 611.384 1541.31 610.837 1541.31 610.209 cv
1541.31 609.43 1541.11 608.809 1540.71 608.356 cv
1540.32 607.903 1539.72 607.553 1538.91 607.313 cv
1538.11 607.073 1537.11 606.91 1535.91 606.821 cv
1534.71 606.738 1533.3 606.673 1531.7 606.63 cv
1530.58 606.601 1529.4 606.56 1528.16 606.503 cv
1526.92 606.447 1525.71 606.325 1524.52 606.14 cv
1523.32 605.956 1522.19 605.688 1521.11 605.328 cv
1520.03 604.975 1519.08 604.486 1518.26 603.861 cv
1517.44 603.237 1516.79 602.456 1516.31 601.516 cv
1515.83 600.578 1515.59 599.435 1515.59 598.085 cv
1515.59 596.877 1515.78 595.786 1516.17 594.813 cv
cp
1703.19 663.282 mo
1700.85 546.818 li
1146.49 553.806 li
1148.82 667.94 li
1703.19 663.282 li
cp
f
1277.63 618.375 mo
1295.91 619.845 li
1296.21 613.132 li
1288.71 613.086 li
1289.29 606.802 li
1306.25 605.8 li
1305.65 613.748 li
1299.37 614.004 li
1299.49 619.416 li
1317.82 619.993 li
1317.82 613.258 li
1311.28 613.534 li
1311.28 594.503 li
1317.82 593.928 li
1317.65 588.519 li
1299.17 588.687 li
1299.54 595.462 li
1307.16 594.846 li
1306.57 602.132 li
1289.71 602.132 li
1290.46 594.592 li
1295.96 594.398 li
1296.08 589.008 li
1277.63 588.26 li
1277.63 594.973 li
1283.92 594.803 li
1284.6 613.048 li
1277.76 612.959 li
1277.63 618.375 li
cp
0 0 0 0 cmyk
f
1321.02 618.375 mo
1339.3 619.845 li
1339.6 613.132 li
1332.1 613.086 li
1333.85 594.592 li
1339.35 594.398 li
1339.47 589.008 li
1321.02 588.26 li
1321.02 594.973 li
1327.3 594.803 li
1327.99 613.048 li
1321.15 612.959 li
1321.02 618.375 li
cp
f
1355.54 613.048 mo
1351.09 612.875 li
1351.09 619.588 li
1369.42 619.034 li
1369.54 613.623 li
1365.05 613.429 li
1373.7 594.719 li
1380.94 594.101 li
1380.77 588.728 li
1362.3 588.898 li
1362.66 595.635 li
1369.07 595.1 li
1359.08 611.746 li
1353.79 594.76 li
1359.08 594.592 li
1359.21 589.176 li
1340.75 588.431 li
1340.75 595.146 li
1346.85 594.973 li
1355.54 613.048 li
cp
f
1400.76 581.185 mo
1396.35 581.185 li
1395.18 627.835 li
1400.34 627.581 li
1400.76 581.185 li
cp
f
1436.44 596.189 mo
1442.45 607.375 li
1431.28 607.375 li
1436.44 596.189 li
cp
1435.33 613.748 mo
1428.36 613.707 li
1429.94 610.298 li
1444.02 610.298 li
1445.86 613.707 li
1438.48 614.004 li
1438.61 619.416 li
1456.94 619.993 li
1456.94 613.258 li
1450.31 613.534 li
1441.02 589.646 li
1422.86 589.646 li
1422.86 596.551 li
1432.69 596.146 li
1422.41 613.623 li
1416.88 613.58 li
1416.75 618.926 li
1435.03 620.461 li
1435.33 613.748 li
cp
f
1457.6 618.375 mo
1475.88 619.845 li
1476.18 613.132 li
1468.68 613.086 li
1470.43 594.592 li
1475.93 594.398 li
1476.05 589.008 li
1457.6 588.26 li
1457.6 594.973 li
1463.89 594.803 li
1464.57 613.048 li
1457.73 612.959 li
1457.6 618.375 li
cp
f
1491.74 595.378 mo
1492.89 595.249 1493.93 595.158 1494.85 595.1 cv
1495.78 595.045 1496.56 595.005 1497.22 594.973 cv
1497.98 594.947 1498.66 594.947 1499.24 594.973 cv
1501.24 595.057 1502.93 595.395 1504.28 595.975 cv
1505.64 596.558 1506.73 597.282 1507.55 598.15 cv
1508.38 599.016 1508.96 599.977 1509.31 601.036 cv
1509.66 602.096 1509.83 603.141 1509.83 604.182 cv
1509.83 605.232 1509.54 606.294 1508.96 607.366 cv
1508.38 608.437 1507.51 609.413 1506.35 610.286 cv
1505.19 611.159 1503.75 611.873 1502.02 612.427 cv
1500.3 612.981 1498.29 613.258 1496 613.258 cv
1495.57 613.273 1495.1 613.273 1494.58 613.258 cv
1494.12 613.244 1493.58 613.228 1492.97 613.206 cv
1492.35 613.184 1491.68 613.146 1490.95 613.086 cv
1491.74 595.378 li
cp
1480.38 611.597 mo
1478.76 619.416 li
1481.69 619.703 1484.34 619.897 1486.7 620.005 cv
1489.07 620.111 1491.11 620.163 1492.83 620.163 cv
1494.5 620.163 1496.17 620.053 1497.82 619.833 cv
1499.48 619.612 1501.06 619.248 1502.58 618.737 cv
1504.09 618.224 1505.5 617.555 1506.79 616.733 cv
1508.1 615.908 1509.22 614.894 1510.18 613.686 cv
1511.12 612.477 1511.87 611.06 1512.42 609.432 cv
1512.97 607.807 1513.24 605.942 1513.24 603.839 cv
1513.24 601.056 1512.78 598.687 1511.86 596.73 cv
1510.94 594.779 1509.65 593.189 1508 591.96 cv
1506.35 590.73 1504.4 589.833 1502.13 589.272 cv
1499.86 588.713 1497.39 588.431 1494.7 588.431 cv
1493.91 588.431 1492.93 588.457 1491.77 588.507 cv
1490.61 588.555 1489.34 588.656 1487.95 588.805 cv
1486.56 588.953 1485.08 589.176 1483.51 589.476 cv
1481.95 589.775 1480.36 590.164 1478.76 590.648 cv
1480.08 597.469 li
1481.05 597.227 1481.99 597.006 1482.9 596.808 cv
1483.81 596.608 1484.7 596.424 1485.58 596.251 cv
1486.92 612.748 li
1485.83 612.633 1484.72 612.482 1483.6 612.29 cv
1482.47 612.098 1481.41 611.866 1480.38 611.597 cv
cp
f
1518.26 603.861 mo
1519.08 604.486 1520.03 604.975 1521.11 605.328 cv
1522.19 605.688 1523.32 605.956 1524.52 606.14 cv
1525.71 606.325 1526.92 606.447 1528.16 606.503 cv
1529.4 606.56 1530.58 606.601 1531.7 606.63 cv
1533.3 606.673 1534.71 606.738 1535.91 606.821 cv
1537.11 606.91 1538.11 607.073 1538.91 607.313 cv
1539.72 607.553 1540.32 607.903 1540.71 608.356 cv
1541.11 608.809 1541.31 609.43 1541.31 610.209 cv
1541.31 610.837 1541.17 611.384 1540.91 611.851 cv
1540.63 612.321 1540.21 612.712 1539.62 613.026 cv
1539.03 613.338 1538.26 613.57 1537.32 613.728 cv
1536.39 613.882 1535.26 613.961 1533.94 613.961 cv
1532.59 613.961 1531.27 613.882 1529.97 613.728 cv
1528.68 613.57 1527.4 613.34 1526.13 613.036 cv
1524.85 612.729 1523.59 612.355 1522.33 611.916 cv
1521.07 611.475 1519.81 610.979 1518.53 610.425 cv
1515.78 620.952 li
1518.78 621.825 li
1520.04 618.075 li
1521.12 618.415 1522.18 618.722 1523.23 619.003 cv
1524.27 619.281 1525.32 619.518 1526.37 619.718 cv
1527.42 619.914 1528.5 620.068 1529.6 620.173 cv
1530.7 620.281 1531.85 620.336 1533.06 620.336 cv
1534.02 620.336 1534.99 620.291 1536.01 620.207 cv
1537.01 620.12 1537.99 619.955 1538.94 619.718 cv
1539.9 619.476 1540.8 619.145 1541.64 618.722 cv
1542.49 618.305 1543.22 617.766 1543.84 617.104 cv
1544.47 616.448 1544.97 615.644 1545.34 614.709 cv
1545.71 613.772 1545.89 612.664 1545.89 611.384 cv
1545.89 609.977 1545.67 608.79 1545.23 607.824 cv
1544.79 606.857 1544.2 606.057 1543.48 605.417 cv
1542.74 604.779 1541.91 604.28 1540.97 603.926 cv
1540.03 603.571 1539.06 603.302 1538.06 603.127 cv
1537.06 602.947 1536.07 602.837 1535.1 602.796 cv
1534.13 602.753 1533.24 602.724 1532.45 602.71 cv
1530.92 602.696 1529.56 602.657 1528.34 602.604 cv
1527.13 602.544 1526.08 602.43 1525.2 602.252 cv
1524.32 602.075 1523.61 601.803 1523.09 601.442 cv
1522.56 601.08 1522.23 600.586 1522.09 599.96 cv
1521.96 599.406 1522.03 598.888 1522.29 598.404 cv
1522.55 597.92 1523.03 597.491 1523.72 597.116 cv
1524.41 596.74 1525.33 596.441 1526.48 596.22 cv
1527.63 596.002 1529.03 595.877 1530.7 595.848 cv
1531.82 595.848 1533.03 595.954 1534.34 596.167 cv
1535.45 596.352 1536.73 596.646 1538.19 597.052 cv
1539.64 597.457 1541.17 598.044 1542.78 598.809 cv
1547.15 588.134 li
1543.65 586.726 li
1542.74 590.883 li
1542.24 590.569 1541.7 590.289 1541.12 590.039 cv
1540.54 589.792 1539.93 589.572 1539.3 589.378 cv
1538.68 589.188 1538.05 589.023 1537.41 588.891 cv
1536.77 588.752 1536.16 588.644 1535.58 588.56 cv
1534.18 588.344 1532.78 588.203 1531.36 588.134 cv
1529.96 588.107 1528.61 588.16 1527.3 588.303 cv
1525.98 588.445 1524.74 588.682 1523.57 589.018 cv
1522.4 589.351 1521.32 589.785 1520.35 590.318 cv
1519.38 590.852 1518.54 591.488 1517.83 592.233 cv
1517.11 592.984 1516.56 593.842 1516.17 594.813 cv
1515.78 595.786 1515.59 596.877 1515.59 598.085 cv
1515.59 599.435 1515.83 600.578 1516.31 601.516 cv
1516.79 602.456 1517.44 603.237 1518.26 603.861 cv
cp
f
1204.07 910.839 mo
1163.5 910.839 li
1159.23 910.839 1155.74 907.343 1155.74 903.073 cv
1155.74 899.945 1157.62 897.24 1160.3 896.013 cv
1160.3 835.041 li
1160.3 825.947 1166.94 818.35 1175.61 816.813 cv
1175.61 813.799 li
1175.61 809.306 1179.29 805.626 1183.78 805.626 cv
1183.78 805.626 li
1188.28 805.626 1191.96 809.306 1191.96 813.799 cv
1191.96 816.813 li
1200.62 818.35 1207.27 825.947 1207.27 835.041 cv
1207.27 896.013 li
1209.95 897.24 1211.83 899.945 1211.83 903.073 cv
1211.83 907.343 1208.34 910.839 1204.07 910.839 cv
cp
1183.78 793.819 mo
1146.13 793.819 1115.49 824.458 1115.49 862.115 cv
1115.49 899.772 1146.13 930.409 1183.78 930.409 cv
1221.44 930.409 1252.08 899.772 1252.08 862.115 cv
1252.08 824.458 1221.44 793.819 1183.78 793.819 cv
cp
f
1183.78 930.409 mo
1146.13 930.409 1115.49 899.772 1115.49 862.115 cv
1115.49 824.458 1146.13 793.819 1183.78 793.819 cv
1221.44 793.819 1252.08 824.458 1252.08 862.115 cv
1252.08 899.772 1221.44 930.409 1183.78 930.409 cv
cp
1183.78 771.443 mo
1133.79 771.443 1093.12 812.118 1093.12 862.115 cv
1093.12 912.11 1133.79 952.783 1183.78 952.783 cv
1233.78 952.783 1274.45 912.11 1274.45 862.115 cv
1274.45 812.118 1233.78 771.443 1183.78 771.443 cv
cp
.501976 0 .237308 0 cmyk
f
1207.27 896.013 mo
1207.27 835.041 li
1207.27 825.947 1200.62 818.35 1191.96 816.813 cv
1191.96 813.799 li
1191.96 809.306 1188.28 805.626 1183.78 805.626 cv
1183.78 805.626 li
1179.29 805.626 1175.61 809.306 1175.61 813.799 cv
1175.61 816.813 li
1166.94 818.35 1160.3 825.947 1160.3 835.041 cv
1160.3 896.013 li
1157.62 897.24 1155.74 899.945 1155.74 903.073 cv
1155.74 907.343 1159.23 910.839 1163.5 910.839 cv
1204.07 910.839 li
1208.34 910.839 1211.83 907.343 1211.83 903.073 cv
1211.83 899.945 1209.95 897.24 1207.27 896.013 cv
cp
.16199 .222812 .0143435 0 cmyk
f
1657.92 840.96 mo
1632.26 814.78 li
1620.42 827.067 1613.12 843.751 1613.12 862.115 cv
1613.12 877.171 1618.03 891.096 1626.31 902.397 cv
1664.68 864.033 li
1649.64 849.138 li
1657.92 840.96 li
cp
0 0 0 0 cmyk
f
1749.71 862.115 mo
1749.71 847.575 1745.13 834.089 1737.35 822.998 cv
1699.21 861.144 li
1720.54 883.554 li
1715.12 888.595 li
1720.99 894.759 li
1726.7 889.159 li
1730 892.46 li
1710.98 910.702 li
1707.49 907.986 li
1714.16 901.455 li
1707.93 895.291 li
1701.91 900.892 li
1680.58 879.775 li
1642.3 918.05 li
1653.39 925.825 1666.88 930.409 1681.42 930.409 cv
1719.08 930.409 1749.71 899.772 1749.71 862.115 cv
cp
f
1669.3 829.728 mo
1683.78 844.935 li
1721.7 807.012 li
1710.4 798.726 1696.47 793.819 1681.42 793.819 cv
1663.49 793.819 1647.16 800.774 1634.97 812.112 cv
1660.51 838.402 li
1669.3 829.728 li
cp
f
1634.11 811.227 mo
1634.97 812.112 li
1647.16 800.774 1663.49 793.819 1681.42 793.819 cv
1696.47 793.819 1710.4 798.726 1721.7 807.012 cv
1683.78 844.935 li
1664.68 864.033 li
1626.31 902.397 li
1618.03 891.096 1613.12 877.171 1613.12 862.115 cv
1613.12 843.751 1620.42 827.067 1632.26 814.78 cv
1623.51 805.864 li
1634.11 811.227 li
cp
1642.3 918.05 mo
1680.58 879.775 li
1699.21 861.144 li
1737.35 822.998 li
1745.13 834.089 1749.71 847.575 1749.71 862.115 cv
1749.71 899.772 1719.08 930.409 1681.42 930.409 cv
1666.88 930.409 1653.39 925.825 1642.3 918.05 cv
cp
1681.42 771.443 mo
1631.42 771.443 1590.75 812.118 1590.75 862.115 cv
1590.75 912.11 1631.42 952.783 1681.42 952.783 cv
1731.41 952.783 1772.09 912.11 1772.09 862.115 cv
1772.09 812.118 1731.41 771.443 1681.42 771.443 cv
cp
0 .855222 .510704 0 cmyk
f
1707.93 895.291 mo
1714.16 901.455 li
1707.49 907.986 li
1710.98 910.702 li
1730 892.46 li
1726.7 889.159 li
1720.99 894.759 li
1715.12 888.595 li
1720.54 883.554 li
1699.21 861.144 li
1680.58 879.775 li
1701.91 900.892 li
1707.93 895.291 li
cp
.16199 .222812 .0143435 0 cmyk
f
1632.26 814.78 mo
1657.92 840.96 li
1649.64 849.138 li
1664.68 864.033 li
1683.78 844.935 li
1669.3 829.728 li
1660.51 838.402 li
1634.97 812.112 li
1634.11 811.227 li
1623.51 805.864 li
1632.26 814.78 li
cp
f
1494.65 856.74 mo
1495.42 863.098 1493.15 869.684 1488.1 874.182 cv
1488.07 874.205 1488.05 874.232 1488.02 874.256 cv
1487.94 874.323 li
1487.73 874.5 1487.55 874.69 1487.33 874.858 cv
1480.48 880.35 li
1480.38 880.437 1480.26 880.501 1480.15 880.568 cv
1466.88 891.208 li
1465.51 892.311 1463.48 892.088 1462.37 890.712 cv
1461.97 890.211 li
1460.87 888.832 1461.09 886.804 1462.47 885.702 cv
1473.63 876.752 li
1472.87 875.807 li
1452.04 892.51 li
1450.61 893.661 1448.49 893.428 1447.34 891.992 cv
1447.11 891.702 li
1445.96 890.268 1446.19 888.154 1447.63 887.001 cv
1468.45 870.3 li
1467.64 869.286 li
1445.8 886.802 li
1444.36 887.952 1442.25 887.72 1441.1 886.286 cv
1440.86 885.996 li
1439.71 884.563 1439.95 882.446 1441.38 881.295 cv
1463.22 863.781 li
1462.41 862.765 li
1441.73 879.351 li
1440.29 880.501 1438.18 880.271 1437.03 878.835 cv
1436.79 878.545 li
1435.65 877.111 1435.88 874.994 1437.31 873.844 cv
1457.99 857.258 li
1457.38 856.495 li
1444.52 866.814 li
1443.14 867.92 1441.11 867.694 1440.01 866.318 cv
1439.6 865.817 li
1438.5 864.441 1438.72 862.413 1440.1 861.307 cv
1461.23 844.359 li
1461.23 844.359 li
1462.23 843.557 li
1468.16 838.805 1476.01 837.987 1482.59 840.742 cv
1493.81 831.862 li
1482.63 809.342 1459.4 793.819 1432.6 793.819 cv
1405.46 793.819 1381.96 809.74 1370.96 832.734 cv
1381.08 840.742 li
1387.65 837.987 1395.51 838.805 1401.44 843.557 cv
1402.43 844.359 li
1402.43 844.359 li
1423.57 861.307 li
1424.94 862.413 1425.17 864.441 1424.06 865.817 cv
1423.66 866.318 li
1422.56 867.694 1420.53 867.92 1419.15 866.814 cv
1406.28 856.495 li
1405.67 857.258 li
1426.35 873.844 li
1427.79 874.994 1428.02 877.111 1426.87 878.545 cv
1426.64 878.835 li
1425.49 880.271 1423.37 880.501 1421.94 879.351 cv
1401.26 862.765 li
1400.44 863.781 li
1422.28 881.295 li
1423.72 882.446 1423.95 884.563 1422.8 885.996 cv
1422.57 886.286 li
1421.42 887.72 1419.3 887.952 1417.87 886.802 cv
1396.03 869.286 li
1395.21 870.3 li
1416.04 887.001 li
1417.47 888.154 1417.71 890.268 1416.55 891.702 cv
1416.32 891.992 li
1415.17 893.428 1413.06 893.661 1411.63 892.51 cv
1390.8 875.807 li
1390.04 876.752 li
1401.2 885.702 li
1402.57 886.804 1402.8 888.832 1401.7 890.211 cv
1401.29 890.712 li
1400.19 892.088 1398.16 892.311 1396.78 891.208 cv
1383.52 880.568 li
1383.4 880.501 1383.29 880.437 1383.18 880.35 cv
1376.33 874.858 li
1376.12 874.69 1375.93 874.5 1375.73 874.323 cv
1375.65 874.256 li
1375.62 874.232 1375.6 874.205 1375.57 874.182 cv
1370.51 869.684 1368.24 863.098 1369.01 856.74 cv
1364.87 853.465 li
1364.52 856.299 1364.31 859.181 1364.31 862.115 cv
1364.31 899.772 1394.94 930.409 1432.6 930.409 cv
1470.26 930.409 1500.9 899.772 1500.9 862.115 cv
1500.9 858.802 1500.65 855.548 1500.19 852.36 cv
1494.65 856.74 li
cp
0 0 0 0 cmyk
f
1375.57 874.182 mo
1375.6 874.205 1375.62 874.232 1375.65 874.256 cv
1375.73 874.323 li
1375.93 874.5 1376.12 874.69 1376.33 874.858 cv
1383.18 880.35 li
1383.29 880.437 1383.4 880.501 1383.52 880.568 cv
1396.78 891.208 li
1398.16 892.311 1400.19 892.088 1401.29 890.712 cv
1401.7 890.211 li
1402.8 888.832 1402.57 886.804 1401.2 885.702 cv
1390.04 876.752 li
1390.8 875.807 li
1411.63 892.51 li
1413.06 893.661 1415.17 893.428 1416.32 891.992 cv
1416.55 891.702 li
1417.71 890.268 1417.47 888.154 1416.04 887.001 cv
1395.21 870.3 li
1396.03 869.286 li
1417.87 886.802 li
1419.3 887.952 1421.42 887.72 1422.57 886.286 cv
1422.8 885.996 li
1423.95 884.563 1423.72 882.446 1422.28 881.295 cv
1400.44 863.781 li
1401.26 862.765 li
1421.94 879.351 li
1423.37 880.501 1425.49 880.271 1426.64 878.835 cv
1426.87 878.545 li
1428.02 877.111 1427.79 874.994 1426.35 873.844 cv
1405.67 857.258 li
1406.28 856.495 li
1419.15 866.814 li
1420.53 867.92 1422.56 867.694 1423.66 866.318 cv
1424.06 865.817 li
1425.17 864.441 1424.94 862.413 1423.57 861.307 cv
1402.43 844.359 li
1402.43 844.359 li
1401.44 843.557 li
1395.51 838.805 1387.65 837.987 1381.08 840.742 cv
1370.96 832.734 li
1367.89 839.157 1365.8 846.131 1364.87 853.465 cv
1369.01 856.74 li
1368.24 863.098 1370.51 869.684 1375.57 874.182 cv
cp
.16199 .222812 .0143435 0 cmyk
f
1462.23 843.557 mo
1461.23 844.359 li
1461.23 844.359 li
1440.1 861.307 li
1438.72 862.413 1438.5 864.441 1439.6 865.817 cv
1440.01 866.318 li
1441.11 867.694 1443.14 867.92 1444.52 866.814 cv
1457.38 856.495 li
1457.99 857.258 li
1437.31 873.844 li
1435.88 874.994 1435.65 877.111 1436.79 878.545 cv
1437.03 878.835 li
1438.18 880.271 1440.29 880.501 1441.73 879.351 cv
1462.41 862.765 li
1463.22 863.781 li
1441.38 881.295 li
1439.95 882.446 1439.71 884.563 1440.86 885.996 cv
1441.1 886.286 li
1442.25 887.72 1444.36 887.952 1445.8 886.802 cv
1467.64 869.286 li
1468.45 870.3 li
1447.63 887.001 li
1446.19 888.154 1445.96 890.268 1447.11 891.702 cv
1447.34 891.992 li
1448.49 893.428 1450.61 893.661 1452.04 892.51 cv
1472.87 875.807 li
1473.63 876.752 li
1462.47 885.702 li
1461.09 886.804 1460.87 888.832 1461.97 890.211 cv
1462.37 890.712 li
1463.48 892.088 1465.51 892.311 1466.88 891.208 cv
1480.15 880.568 li
1480.26 880.501 1480.38 880.437 1480.48 880.35 cv
1487.33 874.858 li
1487.55 874.69 1487.73 874.5 1487.94 874.323 cv
1488.02 874.256 li
1488.05 874.232 1488.07 874.205 1488.1 874.182 cv
1493.15 869.684 1495.42 863.098 1494.65 856.74 cv
1500.19 852.36 li
1499.14 845.098 1496.96 838.205 1493.81 831.862 cv
1482.59 840.742 li
1476.01 837.987 1468.16 838.805 1462.23 843.557 cv
cp
f
1432.6 930.409 mo
1394.94 930.409 1364.31 899.772 1364.31 862.115 cv
1364.31 859.181 1364.52 856.299 1364.87 853.465 cv
1365.8 846.131 1367.89 839.157 1370.96 832.734 cv
1381.96 809.74 1405.46 793.819 1432.6 793.819 cv
1459.4 793.819 1482.63 809.342 1493.81 831.862 cv
1496.96 838.205 1499.14 845.098 1500.19 852.36 cv
1500.65 855.548 1500.9 858.802 1500.9 862.115 cv
1500.9 899.772 1470.26 930.409 1432.6 930.409 cv
cp
1432.6 771.443 mo
1382.61 771.443 1341.93 812.118 1341.93 862.115 cv
1341.93 912.11 1382.61 952.783 1432.6 952.783 cv
1482.59 952.783 1523.27 912.11 1523.27 862.115 cv
1523.27 812.118 1482.59 771.443 1432.6 771.443 cv
cp
.501976 0 .237308 0 cmyk
f
2110.4 1439.09 mo
2086.78 1431.62 2095.55 1332.24 2098.99 1252.1 cv
2082.98 1250.97 2067.21 1249.23 2051.91 1246.99 cv
2059.83 1346.22 li
2015.91 1347.39 li
2014.5 1359.49 2013.62 1372.34 2013.42 1386.03 cv
2011.49 1515.98 2027.06 1652.53 2027.06 1652.53 cv
2027.06 1652.53 2027.1 1652.56 2027.15 1652.58 cv
2028.22 1664.46 2029.82 1680.24 2031.81 1694.4 cv
2035.65 1721.6 2055.97 2060.92 2055.97 2060.92 cv
2055.97 2060.92 2064.22 2077.5 2121.72 2072.4 cv
2200.65 1914.87 2144.01 1683.77 2139.96 1667.36 cv
2147.13 1656.29 2154.35 1629.94 2160.86 1598.17 cv
2139.71 1473.46 2147.53 1449.21 2110.4 1439.09 cv
cp
.691066 .735134 .454688 .360204 cmyk
f
2098.99 1252.1 mo
2095.55 1332.24 2086.78 1431.62 2110.4 1439.09 cv
2147.53 1449.21 2139.71 1473.46 2160.86 1598.17 cv
2163.72 1615.09 2167.13 1633.86 2171.25 1654.71 cv
2171.39 1654.76 2171.53 1654.8 2171.67 1654.85 cv
2172.47 1665.1 2174.55 1689.43 2177.48 1710.26 cv
2181.32 1737.46 2253.03 2069.07 2253.03 2069.07 cv
2253.03 2069.07 2269.59 2071.08 2327.08 2065.98 cv
2379.54 1862.33 2287.37 1690.43 2285.45 1682.49 cv
2283.88 1675.99 2292.17 1657.7 2295.22 1651.3 cv
2295.32 1651.27 2295.38 1651.25 2295.38 1651.25 cv
2295.38 1651.25 2295.5 1650.92 2295.73 1650.25 cv
2296.1 1649.49 2296.31 1649.06 2296.31 1649.06 cv
2296.26 1649.02 2296.22 1648.99 2296.17 1648.95 cv
2299.67 1638.43 2314.55 1590.3 2333.83 1477.69 cv
2351.2 1376.29 2294.14 1286.76 2262.42 1238.28 cv
2261.59 1238.3 2260.76 1238.32 2259.93 1238.34 cv
2209.83 1252.76 2153.1 1255.92 2098.99 1252.1 cv
cp
.691646 .752377 .41471 .289616 cmyk
f
2088.26 865.889 mo
2092.74 870.381 2098.23 873.877 2104.27 876.011 cv
2104.27 876.011 li
2098.23 873.877 2092.74 870.381 2088.26 865.889 cv
cp
.681819 .735073 .463508 .373449 cmyk
f
2085.29 862.559 mo
2084.95 862.141 2084.62 861.722 2084.3 861.295 cv
2084.62 861.722 2084.95 862.141 2085.29 862.559 cv
cp
f
2126.95 877.392 mo
2126.95 877.392 li
2145.39 873.74 2158.74 860.197 2168.58 844.139 cv
2158.74 860.197 2145.39 873.74 2126.95 877.392 cv
cp
f
2077.02 844.75 mo
2077.6 847.927 2078.58 850.974 2079.89 853.851 cv
2078.58 850.974 2077.6 847.927 2077.03 844.75 cv
2080.69 843.295 2084.01 841.988 2086.82 840.852 cv
2086.9 840.692 2086.99 840.526 2087.09 840.368 cv
2094.78 827.793 2094.19 806.477 2093.02 794.066 cv
2080.66 794.543 2065.16 792.86 2043.14 786.664 cv
2042.82 773.263 2042.97 757.622 2043.92 741.13 cv
2033.69 774.426 2010.95 807.491 1978.15 803.943 cv
1988.45 829.685 2004.1 846.153 2023.81 856.846 cv
2027.58 855.191 2031.24 853.844 2034.79 852.849 cv
2037.18 851.398 2076.94 844.285 2077.02 844.75 cv
cp
f
1966.74 1011.42 mo
1967.74 1005.27 1969.45 999.238 1971.61 993.614 cv
1976.85 979.982 1985.75 967.958 1993.23 955.515 cv
2002.78 939.625 2011.94 923.174 2016.59 905.095 cv
2019.2 894.982 2020.42 884.771 2023.14 874.582 cv
2026.14 863.352 2027.48 858.361 2034.74 852.883 cv
2034.75 852.873 2034.77 852.861 2034.79 852.849 cv
2031.24 853.844 2027.58 855.191 2023.81 856.846 cv
1985.34 873.764 1937.36 922.097 1914.25 938.836 cv
1913.29 939.529 1912.34 940.237 1911.39 940.939 cv
1926.56 967.332 1939.74 993.882 1953.7 1019.67 cv
1958.09 1016.99 1962.43 1014.24 1966.74 1011.42 cv
cp
.203555 .32163 0 0 cmyk
f
2085.29 862.559 mo
2086.22 863.717 2087.21 864.834 2088.26 865.889 cv
2092.74 870.381 2098.23 873.877 2104.27 876.011 cv
2109.43 877.833 2115 878.66 2120.67 878.235 cv
2122.83 878.085 2124.92 877.795 2126.95 877.392 cv
2145.39 873.74 2158.74 860.197 2168.58 844.139 cv
2170.2 841.494 2171.73 838.786 2173.17 836.038 cv
2173.17 836.038 li
2173.17 836.038 li
2168.34 835.288 2163.79 834.64 2159.61 834.082 cv
2157.81 812.672 2156.96 791.057 2156.6 772.669 cv
2148.54 779.736 2138.88 784.814 2128.39 787.391 cv
2117.33 790.107 2107.25 793.521 2093.02 794.066 cv
2094.19 806.477 2094.78 827.793 2087.09 840.368 cv
2086.99 840.526 2086.9 840.692 2086.82 840.852 cv
2084.01 841.988 2080.69 843.295 2077.03 844.75 cv
2077.6 847.927 2078.58 850.974 2079.89 853.851 cv
2081.09 856.491 2082.58 858.982 2084.3 861.295 cv
2084.62 861.722 2084.95 862.141 2085.29 862.559 cv
cp
.258976 .641138 .605188 .0761425 cmyk
f
2058.59 753.52 mo
2064.21 751.082 li
2068.22 749.344 2072.89 750.439 2075.71 753.776 cv
2077.15 753.174 li
2080.68 751.7 2084.75 752.395 2087.58 754.956 cv
2093.29 760.096 li
2093.29 760.096 2085.28 770.602 2070.41 765.905 cv
2055.55 761.211 2058.59 753.52 2058.59 753.52 cv
cp
2136.73 693.725 mo
2135.48 692.03 2133.89 690.606 2132.09 689.476 cv
2128.5 687.194 2124.29 685.964 2120.11 684.825 cv
2115.95 683.643 2111.69 682.754 2107.39 682.186 cv
2105.23 681.905 2103.07 681.706 2100.9 681.577 cv
2098.74 681.406 2096.56 681.32 2094.38 681.308 cv
2094.36 680.515 li
2096.52 678.98 2098.79 678.021 2101.11 677.259 cv
2103.42 676.52 2105.78 676.077 2108.15 675.844 cv
2112.89 675.42 2117.67 675.885 2122.22 677.142 cv
2123.35 677.487 2124.49 677.829 2125.6 678.23 cv
2126.7 678.669 2127.84 679.093 2128.97 679.668 cv
2131.23 680.776 2133.54 682.2 2135.57 684.142 cv
2136.09 684.6 2136.56 685.144 2137.02 685.674 cv
2137.49 686.216 2137.95 686.782 2138.33 687.388 cv
2139.14 688.58 2139.77 689.877 2140.23 691.219 cv
2141.12 693.9 2141.23 696.947 2139.99 699.371 cv
2139.2 699.45 li
2138.91 697.362 2138.01 695.386 2136.73 693.725 cv
cp
2178.06 759.233 mo
2175.25 759.233 2172.96 756.948 2172.96 754.131 cv
2172.96 751.319 2175.25 749.034 2178.06 749.034 cv
2180.88 749.034 2183.16 751.319 2183.16 754.131 cv
2183.16 756.948 2180.88 759.233 2178.06 759.233 cv
cp
2120.78 765.092 mo
2109.68 765.092 2100.69 756.097 2100.69 745.002 cv
2100.69 733.906 2109.68 724.911 2120.78 724.911 cv
2131.88 724.911 2140.87 733.906 2140.87 745.002 cv
2140.87 756.097 2131.88 765.092 2120.78 765.092 cv
cp
2110.09 712.449 mo
2107.66 713.074 2105.19 711.617 2104.56 709.193 cv
2104.26 708.03 2104.45 706.86 2104.99 705.885 cv
2104.14 705.906 2103.28 705.954 2102.44 706.064 cv
2101.4 706.167 2100.37 706.338 2099.37 706.587 cv
2099.25 706.208 li
2100.95 704.266 2103.18 703.235 2105.51 702.674 cv
2107.84 702.145 2110.37 702.19 2112.79 702.89 cv
2115.21 703.542 2117.49 705.002 2119.14 706.913 cv
2120.84 708.793 2121.73 711.281 2121.72 713.768 cv
2121.38 713.974 li
2120.45 712.72 li
2120.14 712.3 2119.84 711.876 2119.45 711.528 cv
2118.39 710.406 li
2118.01 710.054 2117.58 709.757 2117.18 709.428 cv
2116.03 708.553 2114.75 707.824 2113.4 707.287 cv
2113.8 709.591 2112.39 711.854 2110.09 712.449 cv
cp
2043.14 786.664 mo
2065.16 792.86 2080.66 794.543 2093.02 794.066 cv
2107.25 793.521 2117.33 790.107 2128.39 787.391 cv
2138.88 784.814 2148.54 779.736 2156.6 772.669 cv
2160.03 769.669 2163.17 766.32 2165.95 762.635 cv
2166.19 762.323 2166.43 761.997 2166.67 761.681 cv
2192.14 767.741 2224.32 734.788 2217.39 717.924 cv
2212.61 706.28 2194.38 715.038 2182.01 722.739 cv
2165.42 706.901 2164.94 659.587 2165.3 643.193 cv
2142.6 650.793 2090.45 666.3 2056.05 661.256 cv
2055.46 663.359 2054.89 665.48 2054.35 667.631 cv
2055 667.568 2055.66 667.549 2056.32 667.588 cv
2057.66 667.65 2058.96 668.033 2060.17 668.535 cv
2061.39 669.041 2062.53 669.678 2063.61 670.402 cv
2065.75 671.857 2067.75 673.612 2069.01 675.955 cv
2068.54 676.209 li
2067.01 675.684 2065.78 675.377 2064.57 675.037 cv
2061.19 674.101 li
2060.13 673.804 2059.14 673.536 2058.25 673.303 cv
2057.02 673.02 li
2056.65 672.975 2056.31 672.884 2055.95 672.845 cv
2055.14 672.735 2054.18 672.721 2053.11 672.769 cv
2051.73 678.707 2050.52 684.778 2049.47 690.919 cv
2050.11 690.671 2050.76 690.464 2051.43 690.304 cv
2053.77 689.773 2056.3 689.822 2058.71 690.517 cv
2061.14 691.171 2063.42 692.634 2065.07 694.542 cv
2066.77 696.422 2067.67 698.911 2067.65 701.396 cv
2067.31 701.603 li
2066.38 700.351 li
2066.07 699.932 2065.77 699.508 2065.38 699.157 cv
2064.31 698.036 li
2063.94 697.685 2063.51 697.385 2063.11 697.059 cv
2062.08 696.276 2060.94 695.619 2059.75 695.098 cv
2059.75 695.108 2059.75 695.113 2059.75 695.12 cv
2060.38 697.544 2058.92 700.016 2056.49 700.644 cv
2054.07 701.27 2051.6 699.812 2050.97 697.385 cv
2050.61 695.986 2050.96 694.573 2051.78 693.507 cv
2051.68 693.507 2051.58 693.497 2051.48 693.497 cv
2050.65 693.499 2049.83 693.552 2049.01 693.636 cv
2047.24 704.432 2045.94 715.403 2045 726.191 cv
2045.7 725.995 2046.51 725.824 2047.45 725.685 cv
2065.38 723.029 2075.01 683.512 2075.01 683.512 cv
2075.05 683.461 2075.1 683.413 2075.14 683.363 cv
2078.53 679.623 2084.66 683.041 2083.31 687.906 cv
2080.79 697.014 2075.21 717.579 2071.64 734.333 cv
2070.78 738.337 2066.94 740.979 2062.9 740.3 cv
2056.08 739.154 2048.49 736.064 2044.46 732.983 cv
2044.26 735.716 2044.08 738.435 2043.92 741.13 cv
2042.97 757.622 2042.82 773.263 2043.14 786.664 cv
cp
.17496 .504753 .432349 .00357061 cmyk
f
2165.3 643.193 mo
2164.94 659.587 2165.42 706.901 2182.01 722.739 cv
2194.38 715.038 2212.61 706.28 2217.39 717.924 cv
2224.32 734.788 2192.14 767.741 2166.67 761.681 cv
2166.43 761.997 2166.19 762.323 2165.95 762.635 cv
2163.17 766.32 2160.03 769.669 2156.6 772.669 cv
2156.96 791.057 2157.81 812.672 2159.61 834.082 cv
2163.79 834.64 2168.34 835.288 2173.17 836.038 cv
2173.17 836.038 li
2186.85 838.164 2200.5 840.6 2213.98 843.743 cv
2227.47 846.892 2241.41 850.545 2254.15 856.405 cv
2288.57 834.079 2306.15 803.536 2306.15 803.536 cv
2238.64 800.973 2254.03 717.97 2259.77 694.406 cv
2263.09 685.374 2264.2 672.8 2261.8 655.444 cv
2252.63 589.095 2200.7 579.114 2175.62 578.232 cv
2161.3 565.384 2134.07 550.4 2088.44 557.734 cv
2013.47 569.781 2049.66 660.024 2049.66 660.024 cv
2051.71 660.525 2053.84 660.932 2056.05 661.256 cv
2090.45 666.3 2142.6 650.793 2165.3 643.193 cv
cp
.681819 .735073 .463508 .373449 cmyk
f
2163.74 941.392 mo
2162.97 940.742 2162 940.541 2161.1 940.541 cv
2160.66 940.541 2160.24 940.591 2159.86 940.658 cv
2157.34 941.109 2154.85 942.799 2153.67 944.864 cv
2149.76 951.718 2152.32 959.924 2156.38 968.141 cv
2160.58 961.691 2164.56 955.115 2165.61 948.963 cv
2166.13 945.815 2165.39 942.773 2163.74 941.392 cv
cp
0 0 0 0 cmyk
f
2051.91 1246.99 mo
2067.21 1249.23 2082.98 1250.97 2098.99 1252.1 cv
2153.1 1255.92 2209.83 1252.76 2259.93 1238.34 cv
2173.71 1240.25 2096.84 1217.93 2057.25 1205.83 cv
2054.82 1207.7 2052.09 1209.39 2049.01 1210.78 cv
2051.91 1246.99 li
cp
f
2167.46 1019.75 mo
2162.44 1009.44 2159.19 1003.38 2155.67 997.056 cv
2151.37 1004.22 2146.97 1011.58 2142.76 1018.86 cv
2130.12 1011.57 li
2134.78 1003.49 2139.64 995.388 2144.35 987.553 cv
2145.38 985.836 2146.41 984.115 2147.44 982.393 cv
2147.19 981.928 2146.92 981.456 2146.65 980.972 cv
2141.43 971.519 2131.7 953.921 2141 937.628 cv
2144.3 931.838 2150.54 927.494 2157.29 926.288 cv
2163.23 925.224 2168.86 926.619 2173.13 930.208 cv
2178.77 934.947 2181.41 943.068 2180 951.396 cv
2178.32 961.315 2172.33 970.444 2167.06 978.493 cv
2166.11 979.938 2165.2 981.331 2164.33 982.683 cv
2164.69 983.311 2165.04 983.925 2165.38 984.53 cv
2170.38 993.407 2174 999.818 2180.59 1013.35 cv
2167.46 1019.75 li
cp
2173.17 836.038 mo
2173.17 836.038 li
2171.73 838.786 2170.2 841.494 2168.58 844.139 cv
2158.74 860.197 2145.39 873.74 2126.95 877.392 cv
2124.92 877.795 2122.83 878.085 2120.67 878.235 cv
2115 878.66 2109.43 877.835 2104.27 876.011 cv
2098.23 873.877 2092.74 870.381 2088.26 865.889 cv
2087.21 864.834 2086.22 863.717 2085.29 862.559 cv
2084.95 862.141 2084.62 861.722 2084.3 861.295 cv
2082.58 858.982 2081.09 856.491 2079.89 853.851 cv
2078.58 850.974 2077.6 847.927 2077.02 844.75 cv
2076.94 844.285 2037.18 851.398 2034.79 852.849 cv
2034.77 852.861 2034.75 852.873 2034.74 852.883 cv
2027.48 858.361 2026.14 863.352 2023.14 874.582 cv
2020.42 884.771 2019.2 894.982 2016.59 905.095 cv
2011.94 923.174 2002.78 939.625 1993.23 955.515 cv
1985.75 967.958 1976.85 979.982 1971.61 993.614 cv
1969.45 999.238 1967.74 1005.27 1966.74 1011.42 cv
1965.44 1019.38 1965.32 1027.53 1966.95 1035.27 cv
2034.82 1033.08 li
2040.63 1105.84 li
2041.04 1105.57 2041.49 1105.34 2041.96 1105.12 cv
2043.48 1112.63 2054.62 1130.69 2065.25 1144.64 cv
2068.82 1149.32 2070.89 1155.14 2072.06 1160.78 cv
2104.01 1162.41 2141.35 1165.39 2171.31 1164.09 cv
2175.41 1163.91 2213.62 1162.78 2249.24 1161.72 cv
2247.92 1138.3 2248.63 1112.71 2252.27 1086.44 cv
2252.91 1081.83 2253.68 1077.25 2254.53 1072.68 cv
2250.4 1052.78 2246.92 1036.06 2245.16 1029.59 cv
2244.53 1027.25 2243.88 1024.88 2243.23 1022.49 cv
2231.9 981.079 2219.15 934.729 2228.45 892.309 cv
2231.47 878.547 2238.79 866.759 2255.09 862.779 cv
2258.7 861.895 2262.31 861.945 2265.84 862.674 cv
2265.44 862.42 2265.04 862.166 2264.63 861.921 cv
2261.26 859.876 2257.75 858.059 2254.15 856.405 cv
2241.41 850.545 2227.47 846.892 2213.98 843.743 cv
2200.5 840.6 2186.85 838.164 2173.17 836.038 cv
cp
f
2255.09 862.779 mo
2238.79 866.759 2231.47 878.547 2228.45 892.309 cv
2219.15 934.729 2231.9 981.079 2243.23 1022.49 cv
2273.77 1012.6 2304.9 1004.46 2336.43 998.504 cv
2335.25 992.194 2334.04 985.882 2332.73 979.591 cv
2325.38 944.324 2317.7 908.211 2292.92 880.621 cv
2286.12 873.048 2276.35 864.841 2265.84 862.674 cv
2262.31 861.945 2258.7 861.895 2255.09 862.779 cv
cp
.203555 .32163 0 0 cmyk
f
2336.43 998.504 mo
2304.9 1004.46 2273.77 1012.6 2243.23 1022.49 cv
2243.88 1024.88 2244.53 1027.25 2245.16 1029.59 cv
2246.92 1036.06 2250.4 1052.78 2254.53 1072.68 cv
2260.86 1103.09 2268.73 1140.93 2274.36 1160.98 cv
2266.5 1161.21 2257.95 1161.46 2249.24 1161.72 cv
2213.62 1162.78 2175.41 1163.91 2171.31 1164.09 cv
2141.35 1165.39 2104.01 1162.41 2072.06 1160.78 cv
2070.89 1155.14 2068.82 1149.32 2065.25 1144.64 cv
2054.62 1130.69 2043.48 1112.63 2041.96 1105.12 cv
2041.49 1105.34 2041.04 1105.57 2040.63 1105.84 cv
2031.56 1111.67 2036.23 1130.61 2040.73 1143.41 cv
2024.91 1139.43 2002.93 1136.6 2002.93 1136.6 cv
2002.93 1136.6 1926.5 1098.01 1932.46 1117.68 cv
1933.31 1120.5 1935.49 1122.73 1938.18 1123.94 cv
1993.69 1148.85 li
1992.57 1150.6 1991.44 1152.5 1990.33 1154.51 cv
1981.69 1150.45 1923.42 1123.66 1922.76 1139.11 cv
1922.65 1141.65 1924.32 1143.94 1926.64 1144.99 cv
1983.76 1170.67 li
1983.31 1172.4 1982.94 1174.15 1982.67 1175.93 cv
1967.17 1170.59 1917.96 1154.76 1920.31 1169.52 cv
1920.74 1172.23 1922.86 1174.39 1925.49 1175.22 cv
1983.93 1193.61 li
1984.23 1194.52 1984.58 1195.42 1984.96 1196.32 cv
1967.53 1193.64 1932.35 1189.34 1939.55 1199.57 cv
1941.48 1202.32 1953.91 1205.5 1957.27 1205.72 cv
2002.25 1210.42 li
2023.12 1217.06 2038.17 1215.71 2049.01 1210.78 cv
2052.09 1209.39 2054.82 1207.7 2057.25 1205.83 cv
2096.84 1217.93 2173.71 1240.25 2259.93 1238.34 cv
2260.76 1238.32 2261.59 1238.3 2262.42 1238.28 cv
2290.51 1237.5 2319.56 1234.13 2348.61 1226.96 cv
2359.07 1224.38 2365.92 1215.26 2366.32 1205.33 cv
2370.81 1172.76 2342.18 1029.36 2336.43 998.504 cv
cp
.17496 .504753 .432349 .00357061 cmyk
f
1825.87 1039.84 mo
1923.32 1036.69 li
1924.45 1036.1 1925.54 1035.54 1926.57 1035 cv
1935.79 1030.21 1944.83 1025.08 1953.7 1019.67 cv
1939.74 993.882 1926.56 967.332 1911.39 940.939 cv
1886.38 959.323 1861.6 980.866 1834.65 996.164 cv
1834.55 996.212 1834.44 996.265 1834.33 996.313 cv
1829.62 937.695 1814.32 829.62 1826.21 776.216 cv
1828.71 764.997 1828.02 755.685 1825.44 747.979 cv
1825.23 741.451 1822.95 731.796 1813.96 720.773 cv
1798.79 702.188 1786.87 675.65 1786.87 675.65 cv
1786.87 675.65 1774.95 682.723 1780.43 695.942 cv
1782.25 700.332 1783.31 705.312 1783.92 710.004 cv
1766.51 706.853 1747.17 703.07 1743.84 701.26 cv
1737.55 697.853 1700.04 662.759 1685.29 676.49 cv
1697.62 685.947 1706.98 693.478 1713.92 699.239 cv
1699.77 689.896 1681.43 680.224 1672.57 689.1 cv
1677.53 692.615 1682 695.842 1686.06 698.81 cv
1679.53 697.05 1673.68 697.309 1669.72 701.274 cv
1704.47 725.93 1716.49 737.004 1716.49 737.004 cv
1746.91 755.718 li
1745.1 756.541 1743.6 757.013 1742.64 756.912 cv
1737.69 756.387 1704.31 743.772 1698.47 756.502 cv
1727.05 764.205 1737.56 768.525 1737.56 768.525 cv
1788.49 781.349 li
1745.83 910.755 1750.03 1001.76 1767.29 1056.94 cv
1767.45 1057.45 1767.63 1057.94 1767.83 1058.43 cv
1768.12 1060.77 1769.14 1062.92 1771.06 1064.8 cv
1773.4 1067.09 1776.02 1068.98 1778.89 1070.53 cv
1783.68 1073.34 1789.32 1075.04 1794.81 1075.53 cv
1805.11 1076.99 1816.89 1076.01 1829.18 1073.52 cv
1825.87 1039.84 li
cp
f
2062.9 740.3 mo
2066.94 740.979 2070.78 738.337 2071.64 734.333 cv
2075.21 717.579 2080.79 697.014 2083.31 687.906 cv
2084.66 683.041 2078.53 679.623 2075.14 683.363 cv
2075.1 683.413 2075.05 683.461 2075.01 683.512 cv
2075.01 683.512 2065.38 723.029 2047.45 725.685 cv
2046.51 725.824 2045.7 725.995 2045 726.191 cv
2040.11 727.57 2040.91 730.274 2044.46 732.983 cv
2048.49 736.064 2056.08 739.154 2062.9 740.3 cv
cp
.258976 .641138 .605188 .0761425 cmyk
f
2070.41 765.905 mo
2085.28 770.602 2093.29 760.096 2093.29 760.096 cv
2087.58 754.956 li
2084.75 752.395 2080.68 751.7 2077.15 753.174 cv
2075.71 753.776 li
2072.89 750.439 2068.22 749.344 2064.21 751.082 cv
2058.59 753.52 li
2058.59 753.52 2055.55 761.211 2070.41 765.905 cv
cp
f
2139.99 699.371 mo
2141.23 696.947 2141.12 693.9 2140.23 691.219 cv
2139.77 689.877 2139.14 688.58 2138.33 687.388 cv
2137.95 686.782 2137.49 686.216 2137.02 685.674 cv
2136.56 685.144 2136.09 684.6 2135.57 684.142 cv
2133.54 682.2 2131.23 680.776 2128.97 679.668 cv
2127.84 679.093 2126.7 678.669 2125.6 678.23 cv
2124.49 677.829 2123.35 677.487 2122.22 677.142 cv
2117.67 675.885 2112.89 675.42 2108.15 675.844 cv
2105.78 676.077 2103.42 676.52 2101.11 677.259 cv
2098.79 678.021 2096.52 678.98 2094.36 680.515 cv
2094.38 681.308 li
2096.56 681.32 2098.74 681.406 2100.9 681.577 cv
2103.07 681.706 2105.23 681.905 2107.39 682.186 cv
2111.69 682.754 2115.95 683.643 2120.11 684.825 cv
2124.29 685.964 2128.5 687.194 2132.09 689.476 cv
2133.89 690.606 2135.48 692.03 2136.73 693.725 cv
2138.01 695.386 2138.91 697.362 2139.2 699.45 cv
2139.99 699.371 li
cp
.681819 .735073 .463508 .373449 cmyk
f
2055.95 672.845 mo
2056.31 672.884 2056.65 672.975 2057.02 673.02 cv
2058.25 673.303 li
2059.14 673.536 2060.13 673.804 2061.19 674.101 cv
2064.57 675.037 li
2065.78 675.377 2067.01 675.684 2068.54 676.209 cv
2069.01 675.955 li
2067.75 673.612 2065.75 671.857 2063.61 670.402 cv
2062.53 669.678 2061.39 669.041 2060.17 668.535 cv
2058.96 668.033 2057.66 667.65 2056.32 667.588 cv
2055.66 667.549 2055 667.568 2054.35 667.631 cv
2052.38 667.82 2050.47 668.441 2048.7 669.228 cv
2047.52 669.76 2046.37 670.35 2045.27 671.021 cv
2044.18 671.699 2043.12 672.421 2042.08 673.166 cv
2042.38 673.608 li
2045.46 673.639 2048.03 673.214 2050.32 672.989 cv
2051.33 672.876 2052.26 672.802 2053.11 672.769 cv
2054.18 672.721 2055.14 672.735 2055.95 672.845 cv
cp
f
2118.39 710.406 mo
2119.45 711.528 li
2119.84 711.876 2120.14 712.3 2120.45 712.72 cv
2121.38 713.974 li
2121.72 713.768 li
2121.73 711.281 2120.84 708.793 2119.14 706.913 cv
2117.49 705.002 2115.21 703.542 2112.79 702.89 cv
2110.37 702.19 2107.84 702.145 2105.51 702.674 cv
2103.18 703.235 2100.95 704.266 2099.25 706.208 cv
2099.37 706.587 li
2100.37 706.338 2101.4 706.167 2102.44 706.064 cv
2103.28 705.954 2104.14 705.906 2104.99 705.885 cv
2104.45 706.86 2104.26 708.03 2104.56 709.193 cv
2105.19 711.617 2107.66 713.074 2110.09 712.449 cv
2112.39 711.854 2113.8 709.591 2113.4 707.287 cv
2114.75 707.824 2116.03 708.553 2117.18 709.428 cv
2117.58 709.757 2118.01 710.054 2118.39 710.406 cv
cp
f
2051.78 693.507 mo
2050.96 694.573 2050.61 695.986 2050.97 697.385 cv
2051.6 699.812 2054.07 701.27 2056.49 700.644 cv
2058.92 700.016 2060.38 697.544 2059.75 695.12 cv
2059.75 695.113 2059.75 695.108 2059.75 695.098 cv
2060.94 695.619 2062.08 696.276 2063.11 697.059 cv
2063.51 697.385 2063.94 697.685 2064.31 698.036 cv
2065.38 699.157 li
2065.77 699.508 2066.07 699.932 2066.38 700.351 cv
2067.31 701.603 li
2067.65 701.396 li
2067.67 698.911 2066.77 696.422 2065.07 694.542 cv
2063.42 692.634 2061.14 691.171 2058.71 690.517 cv
2056.3 689.822 2053.77 689.773 2051.43 690.304 cv
2050.76 690.464 2050.11 690.671 2049.47 690.919 cv
2047.87 691.538 2046.39 692.452 2045.17 693.837 cv
2045.29 694.219 li
2046.29 693.969 2047.33 693.797 2048.37 693.694 cv
2048.58 693.67 2048.8 693.658 2049.01 693.636 cv
2049.83 693.552 2050.65 693.499 2051.48 693.497 cv
2051.58 693.497 2051.68 693.507 2051.78 693.507 cv
cp
f
2178.06 749.034 mo
2175.25 749.034 2172.96 751.319 2172.96 754.131 cv
2172.96 756.948 2175.25 759.233 2178.06 759.233 cv
2180.88 759.233 2183.16 756.948 2183.16 754.131 cv
2183.16 751.319 2180.88 749.034 2178.06 749.034 cv
cp
0 0 0 0 cmyk
f
2120.78 724.911 mo
2109.68 724.911 2100.69 733.906 2100.69 745.002 cv
2100.69 756.097 2109.68 765.092 2120.78 765.092 cv
2131.88 765.092 2140.87 756.097 2140.87 745.002 cv
2140.87 733.906 2131.88 724.911 2120.78 724.911 cv
cp
.258976 .641138 .605188 .0761425 cmyk
f
2153.67 944.864 mo
2154.85 942.799 2157.34 941.109 2159.86 940.658 cv
2160.24 940.591 2160.66 940.541 2161.1 940.541 cv
2162 940.541 2162.97 940.742 2163.74 941.392 cv
2165.39 942.773 2166.13 945.815 2165.61 948.963 cv
2164.56 955.115 2160.58 961.691 2156.38 968.141 cv
2152.32 959.924 2149.76 951.718 2153.67 944.864 cv
cp
2164.33 982.683 mo
2165.2 981.331 2166.11 979.938 2167.06 978.493 cv
2172.33 970.444 2178.32 961.315 2180 951.396 cv
2181.41 943.068 2178.77 934.947 2173.13 930.208 cv
2168.86 926.619 2163.23 925.224 2157.29 926.288 cv
2150.54 927.494 2144.3 931.838 2141 937.628 cv
2131.7 953.921 2141.43 971.519 2146.65 980.972 cv
2146.92 981.456 2147.19 981.928 2147.44 982.393 cv
2146.41 984.115 2145.38 985.836 2144.35 987.553 cv
2139.64 995.388 2134.78 1003.49 2130.12 1011.57 cv
2142.76 1018.86 li
2146.97 1011.58 2151.37 1004.22 2155.67 997.056 cv
2159.19 1003.38 2162.44 1009.44 2167.46 1019.75 cv
2180.59 1013.35 li
2174 999.818 2170.38 993.407 2165.38 984.53 cv
2165.04 983.925 2164.69 983.311 2164.33 982.683 cv
cp
0 .855222 .510704 0 cmyk
f
2051.91 1246.99 mo
2049.01 1210.78 li
2038.17 1215.71 2023.12 1217.06 2002.25 1210.42 cv
1957.27 1205.72 li
1953.91 1205.5 1941.48 1202.32 1939.55 1199.57 cv
1932.35 1189.34 1967.53 1193.64 1984.96 1196.32 cv
1984.58 1195.42 1984.23 1194.52 1983.93 1193.61 cv
1925.49 1175.22 li
1922.86 1174.39 1920.74 1172.23 1920.31 1169.52 cv
1917.96 1154.76 1967.17 1170.59 1982.67 1175.93 cv
1982.94 1174.15 1983.31 1172.4 1983.76 1170.67 cv
1926.64 1144.99 li
1924.32 1143.94 1922.65 1141.65 1922.76 1139.11 cv
1923.42 1123.66 1981.69 1150.45 1990.33 1154.51 cv
1991.44 1152.5 1992.57 1150.6 1993.69 1148.85 cv
1938.18 1123.94 li
1935.49 1122.73 1933.31 1120.5 1932.46 1117.68 cv
1926.5 1098.01 2002.93 1136.6 2002.93 1136.6 cv
2002.93 1136.6 2024.91 1139.43 2040.73 1143.41 cv
2036.23 1130.61 2031.56 1111.67 2040.63 1105.84 cv
2034.82 1033.08 li
1966.95 1035.27 li
1923.32 1036.69 li
1825.87 1039.84 li
1829.18 1073.52 li
1856.5 1351.66 li
2015.91 1347.39 li
2059.83 1346.22 li
2051.91 1246.99 li
cp
.617761 .670893 .348363 .13611 cmyk
f
276.943 1617.62 mo
275.001 1614.83 274.363 1611.68 274.696 1608.35 cv
270.048 1591.73 265.715 1575 261.88 1558.18 cv
256.788 1535.83 254.174 1512.92 250.094 1490.38 cv
249.59 1487.6 249.084 1484.79 248.598 1481.96 cv
243.735 1481.08 240.873 1480.31 240.873 1480.31 cv
240.873 1480.31 220.406 1353.97 262.755 1343.38 cv
262.942 1343.34 263.129 1343.3 263.315 1343.26 cv
269.53 1339.19 277.173 1335.79 285.516 1332.86 cv
312.972 1352.07 368.459 1412.69 333.382 1577.38 cv
342.036 1578.34 352.7 1579.7 364.488 1581.33 cv
369.561 1527.3 379.739 1364.64 323.758 1322.55 cv
328.63 1321.24 333.091 1320.26 335.944 1319.82 cv
335.985 1319.9 336.026 1319.99 336.064 1320.08 cv
343.091 1318.82 li
342.638 1312.24 342.151 1305.6 341.657 1299.13 cv
290.33 1304.58 237.234 1312.03 223.935 1320.44 cv
201.603 1334.56 167.16 1512.8 158.877 1621.45 cv
280.407 1621.45 li
279.033 1620.22 277.866 1618.95 276.943 1617.62 cv
cp
.32987 .43714 0 0 cmyk
f
436.889 1318.62 mo
429.75 1304.17 414.902 1294.08 397.624 1293.99 cv
398.892 1298.63 400.448 1303.8 402.251 1308.8 cv
408.341 1314.29 418.297 1317.88 428.695 1320.23 cv
428.259 1319.36 427.846 1318.56 427.47 1317.86 cv
429.63 1317.8 433.039 1318.06 436.889 1318.62 cv
cp
f
330.867 1469.19 mo
328.445 1470.83 325.961 1472.3 323.437 1473.62 cv
327.388 1504.43 331.509 1545.81 330.972 1577.12 cv
331.756 1577.2 332.559 1577.28 333.382 1577.38 cv
368.459 1412.69 312.972 1352.07 285.516 1332.86 cv
277.173 1335.79 269.53 1339.19 263.315 1343.26 cv
305.329 1333.66 330.867 1429.14 330.867 1469.19 cv
cp
0 .73788 .502708 0 cmyk
f
336.064 1320.08 mo
344.822 1339.28 370.523 1406.54 420.15 1400.55 cv
459.277 1395.83 438.088 1339.11 428.695 1320.23 cv
418.297 1317.88 408.341 1314.29 402.251 1308.8 cv
400.448 1303.8 398.892 1298.63 397.624 1293.99 cv
396.382 1289.45 395.418 1285.43 394.771 1282.57 cv
393.611 1282.43 392.443 1282.3 391.268 1282.17 cv
377.464 1280.71 364.438 1274.39 354.354 1264.22 cv
354.1 1263.96 353.839 1263.69 353.58 1263.43 cv
349.039 1265.27 344 1265.59 338.898 1264.79 cv
339.737 1274.74 340.71 1286.64 341.657 1299.13 cv
342.151 1305.6 342.638 1312.24 343.091 1318.82 cv
336.064 1320.08 li
cp
.0466621 .301549 .245121 0 cmyk
f
466.651 1598.26 mo
469.809 1586.93 472.612 1575.93 474.652 1565.56 cv
468.886 1555.35 464.633 1544.4 461.977 1533.04 cv
461.583 1532.24 461.291 1531.29 461.132 1530.17 cv
460.982 1529.11 460.859 1528.05 460.72 1526.98 cv
459.512 1520.35 458.845 1513.62 458.706 1506.85 cv
457.469 1489.06 457.575 1471.24 458.622 1453.47 cv
457.992 1418.77 453.149 1361.2 449.797 1321.44 cv
445.636 1320.16 441.008 1319.22 436.889 1318.62 cv
433.039 1318.06 429.63 1317.8 427.47 1317.86 cv
427.846 1318.56 428.259 1319.36 428.695 1320.23 cv
438.088 1339.11 459.277 1395.83 420.15 1400.55 cv
370.523 1406.54 344.822 1339.28 336.064 1320.08 cv
336.026 1319.99 335.985 1319.9 335.944 1319.82 cv
333.091 1320.26 328.63 1321.24 323.758 1322.55 cv
379.739 1364.64 369.561 1527.3 364.488 1581.33 cv
396.219 1585.71 436.064 1592.1 466.651 1598.26 cv
cp
0 .73788 .502708 0 cmyk
f
556.877 1593.96 mo
558.235 1593.4 li
557.774 1593.59 557.323 1593.78 556.877 1593.96 cv
cp
532.692 1575.66 mo
524.91 1577.39 517.444 1579.46 517.444 1579.46 cv
507.423 1581.55 500.556 1586.39 495.857 1591.83 cv
495.431 1591.51 495.004 1591.18 494.577 1590.84 cv
494.874 1591.33 495.189 1591.79 495.527 1592.23 cv
492.503 1595.84 490.41 1599.67 488.967 1603.14 cv
482.422 1601.56 474.875 1599.92 466.651 1598.26 cv
436.064 1592.1 396.219 1585.71 364.488 1581.33 cv
352.7 1579.7 342.036 1578.34 333.382 1577.38 cv
332.559 1577.28 331.756 1577.2 330.972 1577.12 cv
331.509 1545.81 327.388 1504.43 323.437 1473.62 cv
295.907 1488.03 263.21 1484.58 248.598 1481.96 cv
249.084 1484.79 249.59 1487.6 250.094 1490.38 cv
254.174 1512.92 256.788 1535.83 261.88 1558.18 cv
265.715 1575 270.048 1591.73 274.696 1608.35 cv
274.363 1611.68 275.001 1614.83 276.943 1617.62 cv
277.866 1618.95 279.033 1620.22 280.407 1621.45 cv
304.645 1643.12 397.401 1649.29 503.515 1628.38 cv
503.822 1628.08 504.09 1627.79 504.366 1627.5 cv
508.621 1627.14 514.018 1625.79 520.882 1622.92 cv
525.154 1621.45 li
547.225 1613.87 li
548.019 1613.54 568.261 1604.14 568.899 1603.57 cv
590.073 1584.65 li
591.464 1583.41 590.84 1581.09 589.008 1580.76 cv
587.119 1580.43 584.612 1580.38 581.639 1581.24 cv
579.337 1583.31 577.016 1585.35 574.676 1587.36 cv
567.46 1593.56 560.234 1598.6 550.876 1600.87 cv
548.529 1601.44 547.54 1597.82 549.882 1597.25 cv
559.359 1594.95 566.458 1589.59 573.688 1583.27 cv
580.569 1577.27 587.364 1571.07 593.707 1564.49 cv
594.144 1564.04 594.642 1563.88 595.117 1563.94 cv
594.877 1563.77 594.609 1563.64 594.292 1563.59 cv
592.077 1563.18 589.008 1563.18 585.34 1564.59 cv
579.15 1570.15 573.665 1576.37 566.961 1581.43 cv
560.093 1586.61 553.149 1590.27 545.008 1592.86 cv
542.701 1593.6 541.723 1589.98 544.013 1589.25 cv
552.027 1586.71 558.834 1582.95 565.549 1577.82 cv
572.778 1572.3 578.503 1565.3 585.482 1559.53 cv
586.134 1558.99 586.884 1558.98 587.508 1559.25 cv
587.201 1558.74 586.692 1558.35 586.019 1558.23 cv
583.475 1557.76 577.961 1557.48 573.557 1559.6 cv
573.557 1559.6 554.933 1573.04 546.554 1573.38 cv
544.941 1573.44 542.867 1573.7 540.575 1574.09 cv
548.86 1537.38 542.742 1488.88 538.372 1460.43 cv
535.765 1461.77 532.723 1463.21 529.328 1464.6 cv
541.505 1511.54 545.492 1550.34 532.692 1575.66 cv
cp
0 .186191 .151827 0 cmyk
f
458.706 1506.85 mo
458.685 1505.74 458.658 1504.64 458.663 1503.52 cv
458.74 1491.19 458.783 1475.73 458.687 1458.61 cv
458.677 1456.96 458.653 1455.24 458.622 1453.47 cv
457.575 1471.24 457.469 1489.06 458.706 1506.85 cv
cp
f
461.977 1533.04 mo
461.507 1531.03 461.092 1529 460.72 1526.98 cv
460.859 1528.05 460.982 1529.11 461.132 1530.17 cv
461.291 1531.29 461.583 1532.24 461.977 1533.04 cv
cp
f
428.908 1283.09 mo
432.699 1290.6 439.577 1302.68 449.1 1313.15 cv
449.322 1315.81 449.558 1318.58 449.797 1321.44 cv
453.149 1361.2 457.992 1418.77 458.622 1453.47 cv
458.653 1455.24 458.677 1456.96 458.687 1458.61 cv
458.783 1475.73 458.74 1491.19 458.663 1503.52 cv
458.658 1504.64 458.685 1505.74 458.706 1506.85 cv
458.845 1513.62 459.512 1520.35 460.72 1526.98 cv
461.092 1529 461.507 1531.03 461.977 1533.04 cv
464.633 1544.4 468.886 1555.35 474.652 1565.56 cv
476.802 1569.36 479.147 1573.07 481.722 1576.65 cv
485.731 1582.21 490.07 1587.22 494.577 1590.84 cv
495.004 1591.18 495.431 1591.51 495.857 1591.83 cv
500.556 1586.39 507.423 1581.55 517.444 1579.46 cv
517.444 1579.46 524.91 1577.39 532.692 1575.66 cv
545.492 1550.34 541.505 1511.54 529.328 1464.6 cv
518.756 1423.84 502.019 1376.95 484.764 1327.45 cv
482.904 1322.1 481.036 1316.73 479.171 1311.33 cv
479.49 1306.33 479.118 1302.12 479.118 1302.12 cv
479.118 1302.12 479.478 1256.36 476.821 1245.39 cv
474.165 1234.41 455.834 1194.69 455.834 1194.69 cv
455.834 1194.69 454.022 1196.05 452.257 1198.1 cv
459.538 1223.77 464.268 1249.97 466.977 1270.61 cv
451.121 1277.82 438.98 1281.45 428.908 1283.09 cv
cp
.0220951 .284672 .22385 0 cmyk
f
302.274 1229.69 mo
305.281 1216.59 328.212 1226.32 339.661 1232.11 cv
347.684 1207.7 339.291 1161.9 336.63 1148.87 cv
336.865 1148.79 337.105 1148.7 337.347 1148.61 cv
337.018 1149.15 li
343.094 1146.55 405.593 1156.98 433.238 1147.5 cv
433.797 1147.31 434.348 1147.11 434.876 1146.9 cv
460.696 1136.75 418.491 1082.1 381.014 1084.44 cv
381.302 1082.84 381.46 1081.19 381.46 1079.5 cv
381.46 1064.08 368.953 1051.57 353.525 1051.57 cv
338.097 1051.57 325.592 1064.08 325.592 1079.5 cv
325.592 1085.24 327.323 1090.58 330.291 1095.01 cv
304.564 1103.17 289.889 1114.15 281.951 1125.51 cv
275.413 1117.72 265.605 1112.76 254.637 1112.76 cv
234.954 1112.76 218.996 1128.72 218.996 1148.4 cv
218.996 1168.08 234.954 1184.04 254.637 1184.04 cv
263.285 1184.04 271.208 1180.96 277.382 1175.84 cv
281.385 1197.38 290.999 1219.61 302.035 1233.49 cv
301.924 1232.18 301.994 1230.9 302.274 1229.69 cv
cp
.681819 .735073 .463508 .373449 cmyk
f
418.137 1186.24 mo
423.392 1198.9 428.594 1211.58 433.945 1224.2 cv
434.468 1225.44 435.02 1226.71 435.971 1227.64 cv
439.515 1231.11 446.702 1227.16 450.052 1225.28 cv
451.351 1224.55 452.547 1223.43 452.919 1221.95 cv
453.259 1220.59 452.852 1219.1 452.121 1217.89 cv
450.967 1215.99 449.083 1214.29 447.39 1212.89 cv
436.113 1203.6 429.723 1193.37 423.186 1180.36 cv
422.749 1179.48 422.279 1178.57 421.507 1177.99 cv
417.631 1175.09 416.952 1181.58 417.429 1183.87 cv
417.631 1184.83 417.901 1185.68 418.137 1186.24 cv
cp
.0466621 .301549 .245121 0 cmyk
f
398.796 1205.12 mo
398.583 1207.43 400.23 1209.51 402.476 1209.78 cv
404.72 1210.05 406.712 1208.39 406.926 1206.08 cv
407.137 1203.77 405.492 1201.68 403.248 1201.42 cv
401.002 1201.16 399.01 1202.81 398.796 1205.12 cv
cp
.691066 .735134 .454688 .360204 cmyk
f
442.897 1193.24 mo
445.142 1193.5 447.134 1191.85 447.347 1189.53 cv
447.561 1187.22 445.913 1185.14 443.67 1184.87 cv
441.425 1184.6 439.431 1186.26 439.22 1188.57 cv
439.007 1190.88 440.653 1192.97 442.897 1193.24 cv
cp
f
382.11 1203.98 mo
382.51 1198.43 385.51 1195.63 390.048 1192.83 cv
394.102 1190.33 398.29 1188.02 402.812 1186.48 cv
405.694 1185.5 404.456 1180.9 401.549 1181.89 cv
395.428 1183.98 389.314 1187.17 384.167 1191.09 cv
379.633 1194.56 377.763 1198.34 377.356 1203.98 cv
377.135 1207.03 381.891 1207.02 382.11 1203.98 cv
cp
.681819 .735073 .463508 .373449 cmyk
f
432.085 1172.44 mo
429.146 1173.26 430.392 1177.85 433.348 1177.02 cv
436.803 1176.05 440.236 1174.71 443.809 1175.88 cv
444.336 1176.06 444.806 1176.04 445.211 1175.91 cv
447.035 1175.29 447.448 1172.08 445.074 1171.3 cv
444.504 1171.11 443.938 1170.97 443.372 1170.87 cv
439.551 1170.2 435.825 1171.38 432.085 1172.44 cv
cp
f
313.981 1233.41 mo
323.751 1230.73 333.856 1233.69 340.941 1240.85 cv
343.094 1243.04 339.732 1246.39 337.579 1244.22 cv
331.663 1238.22 323.422 1235.76 315.245 1237.99 cv
312.284 1238.8 311.032 1234.21 313.981 1233.41 cv
cp
384.167 1191.09 mo
389.314 1187.17 395.428 1183.98 401.549 1181.89 cv
404.456 1180.9 405.694 1185.5 402.812 1186.48 cv
398.29 1188.02 394.102 1190.33 390.048 1192.83 cv
385.51 1195.63 382.51 1198.43 382.11 1203.98 cv
381.891 1207.02 377.135 1207.03 377.356 1203.98 cv
377.763 1198.34 379.633 1194.56 384.167 1191.09 cv
cp
406.926 1206.08 mo
406.712 1208.39 404.72 1210.05 402.476 1209.78 cv
400.23 1209.51 398.583 1207.43 398.796 1205.12 cv
399.01 1202.81 401.002 1201.16 403.248 1201.42 cv
405.492 1201.68 407.137 1203.77 406.926 1206.08 cv
cp
421.507 1177.99 mo
422.279 1178.57 422.749 1179.48 423.186 1180.36 cv
429.723 1193.37 436.113 1203.6 447.39 1212.89 cv
449.083 1214.29 450.967 1215.99 452.121 1217.89 cv
452.852 1219.1 453.259 1220.59 452.919 1221.95 cv
452.547 1223.43 451.351 1224.55 450.052 1225.28 cv
446.702 1227.16 439.515 1231.11 435.971 1227.64 cv
435.02 1226.71 434.468 1225.44 433.945 1224.2 cv
428.594 1211.58 423.392 1198.9 418.137 1186.24 cv
417.901 1185.68 417.631 1184.83 417.429 1183.87 cv
416.952 1181.58 417.631 1175.09 421.507 1177.99 cv
cp
443.67 1184.87 mo
445.913 1185.14 447.561 1187.22 447.347 1189.53 cv
447.134 1191.85 445.142 1193.5 442.897 1193.24 cv
440.653 1192.97 439.007 1190.88 439.22 1188.57 cv
439.431 1186.26 441.425 1184.6 443.67 1184.87 cv
cp
452.78 1245.34 mo
444.993 1251.63 435.461 1252.69 425.775 1253.26 cv
421.685 1253.5 421.714 1247.14 425.775 1246.91 cv
433.53 1246.45 441.984 1245.94 448.292 1240.85 cv
451.445 1238.3 455.964 1242.78 452.78 1245.34 cv
cp
353.58 1263.43 mo
353.839 1263.69 354.1 1263.96 354.354 1264.22 cv
364.438 1274.39 377.464 1280.71 391.268 1282.17 cv
392.443 1282.3 393.611 1282.43 394.771 1282.57 cv
405.047 1283.8 415.001 1285.35 428.908 1283.09 cv
438.98 1281.45 451.121 1277.82 466.977 1270.61 cv
464.268 1249.97 459.538 1223.77 452.257 1198.1 cv
450.131 1190.61 447.786 1183.16 445.211 1175.91 cv
444.806 1176.04 444.336 1176.06 443.809 1175.88 cv
440.236 1174.71 436.803 1176.05 433.348 1177.02 cv
430.392 1177.85 429.146 1173.26 432.085 1172.44 cv
435.825 1171.38 439.551 1170.2 443.372 1170.87 cv
440.308 1162.7 436.935 1154.84 433.238 1147.5 cv
405.593 1156.98 343.094 1146.55 337.018 1149.15 cv
337.347 1148.61 li
337.105 1148.7 336.865 1148.79 336.63 1148.87 cv
339.291 1161.9 347.684 1207.7 339.661 1232.11 cv
328.212 1226.32 305.281 1216.59 302.274 1229.69 cv
301.994 1230.9 301.924 1232.18 302.035 1233.49 cv
303.102 1246.11 321.349 1262.05 338.898 1264.79 cv
344 1265.59 349.039 1265.27 353.58 1263.43 cv
cp
.00595102 .199283 .166995 0 cmyk
f
315.245 1237.99 mo
323.422 1235.76 331.663 1238.22 337.579 1244.22 cv
339.732 1246.39 343.094 1243.04 340.941 1240.85 cv
333.856 1233.69 323.751 1230.73 313.981 1233.41 cv
311.032 1234.21 312.284 1238.8 315.245 1237.99 cv
cp
.0601205 .319219 .305028 0 cmyk
f
448.292 1240.85 mo
441.984 1245.94 433.53 1246.45 425.775 1246.91 cv
421.714 1247.14 421.685 1253.5 425.775 1253.26 cv
435.461 1252.69 444.993 1251.63 452.78 1245.34 cv
455.964 1242.78 451.445 1238.3 448.292 1240.85 cv
cp
f
323.437 1473.62 mo
325.961 1472.3 328.445 1470.83 330.867 1469.19 cv
330.867 1429.14 305.329 1333.66 263.315 1343.26 cv
263.129 1343.3 262.942 1343.34 262.755 1343.38 cv
220.406 1353.97 240.873 1480.31 240.873 1480.31 cv
240.873 1480.31 243.735 1481.08 248.598 1481.96 cv
263.21 1484.58 295.907 1488.03 323.437 1473.62 cv
cp
0 .860502 .696803 0 cmyk
f
529.328 1464.6 mo
532.723 1463.21 535.765 1461.77 538.372 1460.43 cv
544.722 1457.15 548.482 1454.45 548.482 1454.45 cv
548.482 1454.45 526.06 1334.36 484.764 1327.45 cv
502.019 1376.95 518.756 1423.84 529.328 1464.6 cv
cp
f
-296.285 1662.52 mo
-296.285 1646.54 li
-305.813 1646.54 li
-305.813 2257.87 li
637.658 2257.87 li
637.658 1662.52 li
-296.285 1662.52 li
cp
.617761 .670893 .348363 .13611 cmyk
f
684.315 1621.45 mo
525.154 1621.45 li
520.882 1622.92 li
514.018 1625.79 508.621 1627.14 504.366 1627.5 cv
504.09 1627.79 503.822 1628.08 503.515 1628.38 cv
397.401 1649.29 304.645 1643.12 280.407 1621.45 cv
158.877 1621.45 li
-296.285 1621.45 li
-296.285 1646.54 li
-296.285 1662.52 li
637.658 1662.52 li
684.315 1662.52 li
684.315 1621.45 li
cp
.691066 .735134 .454688 .360204 cmyk
f
585.482 1559.53 mo
578.503 1565.3 572.778 1572.3 565.549 1577.82 cv
558.834 1582.95 552.027 1586.71 544.013 1589.25 cv
541.723 1589.98 542.701 1593.6 545.008 1592.86 cv
553.149 1590.27 560.093 1586.61 566.961 1581.43 cv
573.665 1576.37 579.15 1570.15 585.34 1564.59 cv
586.251 1563.77 587.182 1562.96 588.131 1562.18 cv
589.332 1561.18 588.642 1559.74 587.508 1559.25 cv
586.884 1558.98 586.134 1558.99 585.482 1559.53 cv
cp
.105531 .384802 .362463 0 cmyk
f
593.707 1564.49 mo
587.364 1571.07 580.569 1577.27 573.688 1583.27 cv
566.458 1589.59 559.359 1594.95 549.882 1597.25 cv
547.54 1597.82 548.529 1601.44 550.876 1600.87 cv
560.234 1598.6 567.46 1593.56 574.676 1587.36 cv
577.016 1585.35 579.337 1583.31 581.639 1581.24 cv
586.699 1576.7 591.65 1572.02 596.354 1567.14 cv
597.591 1565.85 596.467 1564.08 595.117 1563.94 cv
594.642 1563.88 594.144 1564.04 593.707 1564.49 cv
cp
f
3013.66 1668.11 mo
3013.61 1664.92 3013.55 1661.67 3013.46 1658.35 cv
3008.9 1661.57 3004.17 1664.82 2999.25 1668.11 cv
3013.66 1668.11 li
cp
.501976 0 .237308 0 cmyk
f
2855.88 1281.31 mo
2857.5 1311.24 2872.27 1546.85 2937.72 1564.85 cv
2938.1 1595.14 2938.56 1625.1 2939.1 1652.3 cv
2956.12 1634.21 2983.84 1603.22 3009.01 1574.79 cv
3006.59 1542.39 3003.39 1508.23 2999.78 1474.83 cv
2995.33 1470.16 2991.03 1465.61 2986.98 1461.27 cv
2982.52 1462.3 2977.9 1462.64 2973.15 1462.08 cv
2961.78 1452.28 2948.82 1440.26 2936.4 1428.4 cv
2936.58 1453.55 2936.82 1482.14 2937.12 1511.79 cv
2918.32 1461.32 2881.76 1351.24 2893.52 1286.26 cv
2915.64 1289.88 2928.35 1293.32 2928.35 1293.32 cv
2928.38 1293.52 li
2940.41 1296.11 2958.05 1304.82 2980.56 1329.3 cv
2974.76 1294 2969.35 1268.96 2965.42 1261.97 cv
2956.15 1245.45 2884.8 1245.18 2817.09 1248.89 cv
2823.39 1278.83 li
2835 1279.43 2845.87 1280.29 2855.88 1281.31 cv
cp
f
2627.78 1668.11 mo
2672.61 1668.11 li
2672.01 1640.17 li
2666.67 1635.18 2660.63 1629.43 2654.2 1623.26 cv
2630.69 1600.68 2602.19 1572.54 2585.53 1556.02 cv
2599.63 1536.44 2615.66 1512.28 2628.87 1491.71 cv
2628.91 1489.96 2628.97 1488.19 2629.06 1486.41 cv
2606.75 1484 2585.69 1465.73 2574.96 1454.85 cv
2553.21 1490.52 2520.19 1544.47 2514.21 1552.98 cv
2512.17 1555.89 2512.07 1560.59 2513.45 1565.82 cv
2517.07 1587.53 2547.44 1620.36 2627.78 1668.11 cv
cp
.0382391 .299779 .240635 0 cmyk
f
2672.61 1668.11 mo
2922.43 1668.11 li
2923.52 1667.13 2924.6 1666.39 2925.66 1665.93 cv
2928.42 1663.45 2933.09 1658.68 2939.1 1652.3 cv
2938.56 1625.1 2938.1 1595.14 2937.72 1564.85 cv
2872.27 1546.85 2857.5 1311.24 2855.88 1281.31 cv
2845.87 1280.29 2835 1279.43 2823.39 1278.83 cv
2824.02 1281.78 li
2824.02 1281.78 2781.79 1311.97 2755.59 1286.43 cv
2755.61 1283.97 2755.63 1281.57 2755.64 1279.2 cv
2740.51 1280.44 2727.15 1282.48 2715.53 1284.89 cv
2682.23 1337.57 2672.04 1441.69 2668.93 1498 cv
2672.01 1640.17 li
2672.61 1668.11 li
cp
0 .73788 .502708 0 cmyk
f
2629.06 1486.41 mo
2632.23 1417.6 2664.8 1324.14 2674.83 1296.82 cv
2673.24 1297.45 2671.77 1298.06 2670.41 1298.65 cv
2661.99 1302.26 2657.78 1304.89 2657.78 1304.89 cv
2657.8 1305.04 li
2647.18 1311.32 2629.99 1327.05 2607.95 1366.32 cv
2569.7 1434.49 2567.57 1446.78 2567.57 1446.78 cv
2567.57 1446.78 2570.28 1450.11 2574.96 1454.85 cv
2585.69 1465.73 2606.75 1484 2629.06 1486.41 cv
cp
f
2755.64 1279.2 mo
2755.63 1281.57 2755.61 1283.97 2755.59 1286.43 cv
2781.79 1311.97 2824.02 1281.78 2824.02 1281.78 cv
2823.39 1278.83 li
2817.09 1248.89 li
2809.18 1211.32 li
2800.05 1220.44 2788.57 1226.61 2776.14 1229.01 cv
2769.22 1230.34 2762.68 1231.99 2755.24 1232.91 cv
2755.37 1238.9 2755.49 1245.71 2755.57 1253.25 cv
2755.65 1261.13 2755.68 1269.81 2755.64 1279.2 cv
cp
.0382391 .299779 .240635 0 cmyk
f
2765.83 1177.21 mo
2769.13 1168.11 2778.33 1163.12 2786.37 1166.04 cv
2794.41 1168.96 2798.26 1178.71 2794.95 1187.79 cv
2791.65 1196.88 2782.45 1201.88 2774.4 1198.96 cv
2766.36 1196.03 2762.52 1186.29 2765.83 1177.21 cv
cp
2724.26 1202.39 mo
2721.24 1201.31 2722.55 1196.45 2725.6 1197.55 cv
2735.15 1200.98 2744.89 1199.07 2754.44 1196.64 cv
2757.58 1195.83 2758.91 1200.68 2755.78 1201.48 cv
2745.39 1204.12 2734.64 1206.12 2724.26 1202.39 cv
cp
2711.43 1182.25 mo
2710 1181.59 2708.64 1180.53 2708.11 1179 cv
2707.63 1177.6 2707.92 1176 2708.58 1174.66 cv
2709.62 1172.56 2711.45 1170.59 2713.1 1168.97 cv
2724.12 1158.18 2729.9 1146.85 2735.58 1132.55 cv
2735.97 1131.59 2736.38 1130.59 2737.13 1129.91 cv
2740.95 1126.51 2742.25 1133.29 2741.96 1135.73 cv
2741.84 1136.76 2741.63 1137.68 2741.43 1138.3 cv
2737.07 1152.1 2732.75 1165.91 2728.28 1179.68 cv
2727.84 1181.03 2727.38 1182.42 2726.46 1183.48 cv
2723.05 1187.45 2715.13 1183.94 2711.43 1182.25 cv
cp
2712.13 1131.25 mo
2714.46 1130.77 2716.71 1132.33 2717.15 1134.75 cv
2717.58 1137.15 2716.04 1139.5 2713.71 1139.98 cv
2711.37 1140.46 2709.12 1138.9 2708.69 1136.48 cv
2708.25 1134.07 2709.79 1131.73 2712.13 1131.25 cv
cp
2757.73 1153.79 mo
2755.4 1154.27 2753.15 1152.7 2752.72 1150.29 cv
2752.28 1147.88 2753.82 1145.54 2756.16 1145.06 cv
2758.49 1144.58 2760.74 1146.14 2761.17 1148.55 cv
2761.61 1150.96 2760.07 1153.31 2757.73 1153.79 cv
cp
2756.6 1123.58 mo
2763.02 1125.18 2769.63 1127.98 2775.28 1131.44 cv
2780.54 1134.68 2783.39 1138.66 2784.36 1144.75 cv
2785.04 1148.98 2778.57 1150.79 2777.89 1146.53 cv
2777 1140.98 2774.12 1138.31 2769.29 1135.79 cv
2764.68 1133.39 2759.87 1131.3 2754.81 1130.05 cv
2750.62 1129.01 2752.41 1122.54 2756.6 1123.58 cv
cp
2853.19 1170.8 mo
2856.37 1171.39 2855.02 1176.22 2851.86 1175.64 cv
2843.08 1174.01 2834.61 1177.62 2829 1184.4 cv
2826.93 1186.89 2823.4 1183.32 2825.45 1180.85 cv
2832.26 1172.62 2842.71 1168.85 2853.19 1170.8 cv
cp
2809.18 1211.32 mo
2810.62 1209.88 2812.01 1208.38 2813.32 1206.8 cv
2813.57 1206.51 2813.82 1206.2 2814.07 1205.9 cv
2831.46 1211.28 2853.62 1196.32 2862.07 1181.28 cv
2865.15 1175.8 2866.41 1170.31 2864.95 1165.79 cv
2859.11 1147.66 2819.37 1175.93 2819.37 1175.93 cv
2812.32 1152.68 2815.39 1122.47 2818.66 1103.14 cv
2804.33 1106.54 2770.17 1110.26 2720.95 1087.87 cv
2717.31 1096.56 2714.14 1105.92 2711.39 1115.63 cv
2715.44 1114.74 2719.36 1115.53 2723.61 1116.35 cv
2727.85 1117.17 2726.05 1123.64 2721.83 1122.82 cv
2718.74 1122.23 2715.05 1121.02 2711.97 1122.34 cv
2711.17 1122.68 2710.3 1122.81 2709.5 1122.66 cv
2700.58 1157.27 2696.68 1195.4 2695.45 1223.6 cv
2724.15 1233.82 2741.27 1234.64 2755.24 1232.91 cv
2762.68 1231.99 2769.22 1230.34 2776.14 1229.01 cv
2788.57 1226.61 2800.05 1220.44 2809.18 1211.32 cv
cp
0 .186191 .151827 0 cmyk
f
2728.28 1179.68 mo
2732.75 1165.91 2737.07 1152.1 2741.43 1138.3 cv
2741.63 1137.68 2741.84 1136.76 2741.96 1135.73 cv
2742.25 1133.29 2740.95 1126.51 2737.13 1129.91 cv
2736.38 1130.59 2735.97 1131.59 2735.58 1132.55 cv
2729.9 1146.85 2724.12 1158.18 2713.1 1168.97 cv
2711.45 1170.59 2709.62 1172.56 2708.58 1174.66 cv
2707.92 1176 2707.63 1177.6 2708.11 1179 cv
2708.64 1180.53 2710 1181.59 2711.43 1182.25 cv
2715.13 1183.94 2723.05 1187.45 2726.46 1183.48 cv
2727.38 1182.42 2727.84 1181.03 2728.28 1179.68 cv
cp
.0382391 .299779 .240635 0 cmyk
f
2756.16 1145.06 mo
2753.82 1145.54 2752.28 1147.88 2752.72 1150.29 cv
2753.15 1152.7 2755.4 1154.27 2757.73 1153.79 cv
2760.07 1153.31 2761.61 1150.96 2761.17 1148.55 cv
2760.74 1146.14 2758.49 1144.58 2756.16 1145.06 cv
cp
.681819 .735073 .463508 .373449 cmyk
f
2713.71 1139.98 mo
2716.04 1139.5 2717.58 1137.15 2717.15 1134.75 cv
2716.71 1132.33 2714.46 1130.77 2712.13 1131.25 cv
2709.79 1131.73 2708.25 1134.07 2708.69 1136.48 cv
2709.12 1138.9 2711.37 1140.46 2713.71 1139.98 cv
cp
f
2754.81 1130.05 mo
2759.87 1131.3 2764.68 1133.39 2769.29 1135.79 cv
2774.12 1138.31 2777 1140.98 2777.89 1146.53 cv
2778.57 1150.79 2785.04 1148.98 2784.36 1144.75 cv
2783.39 1138.66 2780.54 1134.68 2775.28 1131.44 cv
2769.63 1127.98 2763.02 1125.18 2756.6 1123.58 cv
2752.41 1122.54 2750.62 1129.01 2754.81 1130.05 cv
cp
.691066 .735134 .454688 .360204 cmyk
f
2711.97 1122.34 mo
2715.05 1121.02 2718.74 1122.23 2721.83 1122.82 cv
2726.05 1123.64 2727.85 1117.17 2723.61 1116.35 cv
2719.36 1115.53 2715.44 1114.74 2711.39 1115.63 cv
2710.47 1115.85 2709.53 1116.13 2708.59 1116.54 cv
2706.91 1117.26 2706.57 1119.7 2707.39 1121.13 cv
2707.89 1122.02 2708.66 1122.5 2709.5 1122.66 cv
2710.3 1122.81 2711.17 1122.68 2711.97 1122.34 cv
cp
f
2829 1184.4 mo
2834.61 1177.62 2843.08 1174.01 2851.86 1175.64 cv
2855.02 1176.22 2856.37 1171.39 2853.19 1170.8 cv
2842.71 1168.85 2832.26 1172.62 2825.45 1180.85 cv
2823.4 1183.32 2826.93 1186.89 2829 1184.4 cv
cp
.0559396 .315587 .30106 0 cmyk
f
2754.44 1196.64 mo
2744.89 1199.07 2735.15 1200.98 2725.6 1197.55 cv
2722.55 1196.45 2721.24 1201.31 2724.26 1202.39 cv
2734.64 1206.12 2745.39 1204.12 2755.78 1201.48 cv
2758.91 1200.68 2757.58 1195.83 2754.44 1196.64 cv
cp
f
2999.25 1668.11 mo
3004.17 1664.82 3008.9 1661.57 3013.46 1658.35 cv
3110.05 1590.32 3125.25 1541.64 3123.7 1523.92 cv
3123.66 1523.54 3123.56 1523.16 3123.39 1522.79 cv
3123.16 1517.41 3121.55 1511.79 3118.25 1506.35 cv
3112.8 1497.38 3067.59 1449.44 3038.06 1418.49 cv
3029.41 1431.51 3010.45 1455.9 2986.98 1461.27 cv
2991.03 1465.61 2995.33 1470.16 2999.78 1474.83 cv
3016.61 1492.49 3035.59 1511.76 3051.47 1526.57 cv
3040.91 1538.62 3025.51 1556.15 3009.01 1574.79 cv
2983.84 1603.22 2956.12 1634.21 2939.1 1652.3 cv
2933.09 1658.68 2928.42 1663.45 2925.66 1665.93 cv
2924.6 1666.39 2923.52 1667.13 2922.43 1668.11 cv
2999.25 1668.11 li
cp
.0382391 .299779 .240635 0 cmyk
f
2928.38 1293.52 mo
2928.35 1293.32 li
2928.35 1293.32 2915.64 1289.88 2893.52 1286.26 cv
2881.76 1351.24 2918.32 1461.32 2937.12 1511.79 cv
2936.82 1482.14 2936.58 1453.55 2936.4 1428.4 cv
2948.82 1440.26 2961.78 1452.28 2973.15 1462.08 cv
2977.9 1462.64 2982.52 1462.3 2986.98 1461.27 cv
3010.45 1455.9 3029.41 1431.51 3038.06 1418.49 cv
3041.33 1413.56 3043.14 1410.26 3043.14 1410.26 cv
3043.14 1410.26 3038.78 1398.57 2988.67 1338.57 cv
2985.9 1335.25 2983.2 1332.17 2980.56 1329.3 cv
2958.05 1304.82 2940.41 1296.11 2928.38 1293.52 cv
cp
0 .73788 .502708 0 cmyk
f
2818.66 1103.14 mo
2815.39 1122.47 2812.32 1152.68 2819.37 1175.93 cv
2819.37 1175.93 2859.11 1147.66 2864.95 1165.79 cv
2866.41 1170.31 2865.15 1175.8 2862.07 1181.28 cv
2889.96 1158.09 2896.52 1112.5 2883.16 1086.45 cv
2887.51 1073.48 2892.55 1025.11 2817.03 1018.76 cv
2738.11 1012.13 2696.49 994.007 2696.05 972.564 cv
2669.84 996.716 2660.01 1057.85 2714.43 1084.79 cv
2716.64 1085.87 2718.81 1086.89 2720.95 1087.87 cv
2770.17 1110.26 2804.33 1106.54 2818.66 1103.14 cv
cp
.691066 .735134 .454688 .360204 cmyk
f
2629.06 1486.41 mo
2628.97 1488.19 2628.91 1489.96 2628.87 1491.71 cv
2628.15 1521.78 2633.55 1546.49 2649.66 1557.78 cv
2651.16 1557.1 2652.55 1556.25 2653.85 1555.31 cv
2653.59 1577.16 2653.62 1600.43 2654.2 1623.26 cv
2660.63 1629.43 2666.67 1635.18 2672.01 1640.17 cv
2668.93 1498 li
2672.04 1441.69 2682.23 1337.57 2715.53 1284.89 cv
2727.15 1282.48 2740.51 1280.44 2755.64 1279.2 cv
2755.68 1269.81 2755.65 1261.13 2755.57 1253.25 cv
2717.82 1256.46 2690.23 1259.69 2690.23 1259.69 cv
2681.58 1263.92 2675.16 1278.83 2670.41 1298.65 cv
2671.77 1298.06 2673.24 1297.45 2674.83 1296.82 cv
2664.8 1324.14 2632.23 1417.6 2629.06 1486.41 cv
cp
.501976 0 .237308 0 cmyk
f
2794.95 1187.79 mo
2798.26 1178.71 2794.41 1168.96 2786.37 1166.04 cv
2778.33 1163.12 2769.13 1168.11 2765.83 1177.21 cv
2762.52 1186.29 2766.36 1196.03 2774.4 1198.96 cv
2782.45 1201.88 2791.65 1196.88 2794.95 1187.79 cv
cp
0 .373907 .308995 0 cmyk
f
3329.33 1654.33 mo
2385.85 1654.33 li
2385.85 2265.67 li
3329.33 2265.67 li
3329.33 1654.33 li
cp
.617761 .670893 .348363 .13611 cmyk
f
2339.2 1670.32 mo
3319.79 1670.32 li
3319.79 1629.25 li
2339.2 1629.25 li
2339.2 1670.32 li
cp
.691066 .735134 .454688 .360204 cmyk
f
1303.7 1802.76 mo
1318.65 1756.04 1258.85 1565.44 1212.14 1543.02 cv
1211.83 1542.86 1211.51 1542.72 1211.18 1542.57 cv
1230.03 1557.82 1240.89 1585.9 1236.43 1642.05 cv
1236.15 1645.57 1235.87 1648.99 1235.59 1652.36 cv
1238.23 1658.46 1239.7 1665.18 1239.7 1672.22 cv
1239.7 1845.33 li
1239.7 1859.83 1233.49 1872.95 1223.6 1882.18 cv
1224.65 1887.42 1225.78 1892.8 1226.95 1898.29 cv
1249.03 1878.87 1292.67 1837.26 1303.7 1802.76 cv
cp
0 .860502 .696803 0 cmyk
f
870.979 1845.33 mo
870.979 1807.43 li
816.836 1790.72 798.882 1746.94 809.531 1702.4 cv
820.526 1656.44 848.344 1631.31 858.565 1579.38 cv
825.528 1627.8 784.967 1699.74 786.077 1759.78 cv
787.384 1830.4 837.201 1878.14 879.159 1902.99 cv
881.005 1895.57 883.215 1888.2 885.831 1880.99 cv
876.67 1871.84 870.979 1859.22 870.979 1845.33 cv
cp
f
1032.92 1895.8 mo
921.45 1895.8 li
907.583 1895.8 894.977 1890.12 885.831 1880.99 cv
883.215 1888.2 881.005 1895.57 879.159 1902.99 cv
869.267 1942.81 869.857 1984.46 874.982 2012.81 cv
1032.92 2012.81 li
1032.92 1895.8 li
cp
0 .73788 .502708 0 cmyk
f
1091.88 1593.42 mo
1091.49 1603.13 1090.8 1612.57 1089.83 1621.75 cv
1189.23 1621.75 li
1209.94 1621.75 1227.85 1634.4 1235.59 1652.36 cv
1235.87 1648.99 1236.15 1645.57 1236.43 1642.05 cv
1240.89 1585.9 1230.03 1557.82 1211.18 1542.57 cv
1190.51 1525.86 1160.21 1524.58 1129.91 1518.72 cv
1116.03 1516.03 1103.98 1511.31 1093.67 1505.67 cv
1095.38 1536.34 1092.91 1567.57 1091.88 1593.42 cv
cp
f
1189.23 1895.8 mo
1077.76 1895.8 li
1077.76 2012.81 li
1241.01 2012.81 li
1246.21 1983.79 1235.52 1938.36 1226.95 1898.29 cv
1225.78 1892.8 1224.65 1887.42 1223.6 1882.18 cv
1214.57 1890.61 1202.48 1895.8 1189.23 1895.8 cv
cp
f
1189.23 1621.75 mo
1089.83 1621.75 li
1085.73 1660.5 1076.52 1694.4 1062.81 1722.5 cv
1071.49 1725.37 1077.76 1733.55 1077.76 1743.19 cv
1077.76 1895.8 li
1189.23 1895.8 li
1202.48 1895.8 1214.57 1890.61 1223.6 1882.18 cv
1233.49 1872.95 1239.7 1859.83 1239.7 1845.33 cv
1239.7 1672.22 li
1239.7 1665.18 1238.23 1658.46 1235.59 1652.36 cv
1227.85 1634.4 1209.94 1621.75 1189.23 1621.75 cv
cp
.617761 .670893 .348363 .13611 cmyk
f
926.626 1814.51 mo
904.982 1814.79 886.5 1812.22 870.979 1807.43 cv
870.979 1845.33 li
870.979 1859.22 876.67 1871.84 885.831 1880.99 cv
894.977 1890.12 907.583 1895.8 921.45 1895.8 cv
1032.92 1895.8 li
1032.92 1767.2 li
1005.46 1797.25 969.38 1813.97 926.626 1814.51 cv
cp
f
1062.81 1722.5 mo
1054.46 1739.62 1044.45 1754.59 1032.92 1767.2 cv
1032.92 1895.8 li
1032.92 2012.81 li
1032.92 2047.82 li
1032.92 2059.85 1042.67 2069.6 1054.71 2069.6 cv
1055.97 2069.6 li
1068 2069.6 1077.76 2059.85 1077.76 2047.82 cv
1077.76 2012.81 li
1077.76 1895.8 li
1077.76 1743.19 li
1077.76 1733.55 1071.49 1725.37 1062.81 1722.5 cv
cp
.691066 .735134 .454688 .360204 cmyk
f
1097.11 1389.16 mo
1097.03 1389.18 1096.95 1389.19 1096.87 1389.22 cv
1096.1 1392.5 1095.2 1395.76 1094.15 1398.95 cv
1094.17 1398.94 1094.18 1398.94 1094.19 1398.94 cv
1101.45 1398.49 1106.37 1393.04 1104.12 1389.3 cv
1103.75 1388.68 1103.11 1388.27 1102.41 1388.12 cv
1103.09 1387.97 1103.74 1387.81 1104.3 1387.65 cv
1106.55 1386.97 1106.61 1383.53 1105.7 1381.91 cv
1104.46 1379.67 1101.39 1379.14 1098.78 1379.11 cv
1098.29 1382.47 1097.65 1385.85 1096.87 1389.2 cv
1096.95 1389.18 1097.03 1389.17 1097.11 1389.16 cv
cp
.171023 .984497 .0705272 0 cmyk
f
1076.51 1314.08 mo
1079.81 1319.57 1083.79 1324.51 1088.9 1328.3 cv
1095.84 1333.46 1099.44 1345.31 1099.93 1359.43 cv
1107.9 1354.12 1119.64 1337.83 1110.51 1336.08 cv
1103.97 1334.82 1087.44 1320.34 1076.09 1309.79 cv
1075.98 1309.92 1075.87 1310.03 1075.76 1310.15 cv
1076.19 1311.24 1076.56 1312.63 1076.51 1314.08 cv
cp
.0220951 .284672 .22385 0 cmyk
f
1039.2 1339.25 mo
1044.24 1339.9 1048.18 1340.96 1049.4 1340.78 cv
1068.22 1374.2 li
1062.17 1383.58 1043.56 1378.45 1029.33 1369.72 cv
1031.94 1380.84 1040.91 1391.58 1051.87 1400.65 cv
1066.54 1412.8 1076.32 1428.5 1082.76 1446.13 cv
1088.6 1443.64 1091.94 1436.99 1089.72 1430.69 cv
1087.65 1424.81 1087.32 1416.56 1091.84 1405.33 cv
1092.68 1403.25 1093.44 1401.11 1094.15 1398.95 cv
1095.2 1395.76 1096.1 1392.5 1096.87 1389.22 cv
1096.87 1389.21 1096.87 1389.2 1096.87 1389.2 cv
1097.65 1385.85 1098.29 1382.47 1098.78 1379.11 cv
1099.76 1372.36 1100.15 1365.67 1099.93 1359.43 cv
1099.44 1345.31 1095.84 1333.46 1088.9 1328.3 cv
1083.79 1324.51 1079.81 1319.57 1076.51 1314.08 cv
1076.45 1315.59 1075.93 1317.17 1074.49 1318.54 cv
1072.22 1317.34 1070.86 1315.52 1070.05 1313.84 cv
1064.82 1316.12 1061.7 1314.76 1061.7 1314.76 cv
1061.7 1314.76 1060.85 1306.75 1070.13 1303.42 cv
1070.42 1303.32 1070.68 1303.21 1070.95 1303.11 cv
1068.01 1296.36 1065.57 1289.35 1063.01 1282.84 cv
1061.15 1278.1 1057.18 1272.64 1052.52 1267.31 cv
1064.56 1300.47 1050.11 1323.19 1039.2 1339.25 cv
cp
.00595102 .199283 .166995 0 cmyk
f
870.979 1807.43 mo
886.5 1812.22 904.982 1814.79 926.626 1814.51 cv
969.38 1813.97 1005.46 1797.25 1032.92 1767.2 cv
1044.45 1754.59 1054.46 1739.62 1062.81 1722.5 cv
1076.52 1694.4 1085.73 1660.5 1089.83 1621.75 cv
1090.8 1612.57 1091.49 1603.13 1091.88 1593.42 cv
1092.91 1567.57 1095.38 1536.34 1093.67 1505.67 cv
1092.52 1484.96 1089.46 1464.49 1082.76 1446.13 cv
1076.32 1428.5 1066.54 1412.8 1051.87 1400.65 cv
1040.91 1391.58 1031.94 1380.84 1029.33 1369.72 cv
1017.01 1362.16 1007.98 1351.9 1013.23 1346 cv
1020.2 1338.18 1031.11 1338.2 1039.2 1339.25 cv
1050.11 1323.19 1064.56 1300.47 1052.52 1267.31 cv
1051.35 1264.1 1049.95 1260.8 1048.27 1257.4 cv
1024.46 1209.34 951.61 1232.93 951.61 1232.93 cv
951.61 1232.93 911.997 1228.22 879.648 1267.63 cv
847.301 1307.05 862.027 1489.19 862.403 1535.35 cv
862.539 1552.14 861.086 1566.56 858.565 1579.38 cv
848.344 1631.31 820.526 1656.44 809.531 1702.4 cv
798.882 1746.94 816.836 1790.72 870.979 1807.43 cv
cp
.296513 .629755 .646296 .123476 cmyk
f
1048.23 1357.41 mo
1040.82 1352.02 1031.98 1349.7 1022.89 1351.13 cv
1020.2 1351.56 1019.05 1347.44 1021.76 1347.01 cv
1031.95 1345.41 1042 1347.62 1050.39 1353.72 cv
1052.59 1355.32 1050.46 1359.03 1048.23 1357.41 cv
cp
1068.22 1374.2 mo
1049.4 1340.78 li
1048.18 1340.96 1044.24 1339.9 1039.2 1339.25 cv
1031.11 1338.2 1020.2 1338.18 1013.23 1346 cv
1007.98 1351.9 1017.01 1362.16 1029.33 1369.72 cv
1043.56 1378.45 1062.17 1383.58 1068.22 1374.2 cv
cp
0 .201572 .170871 0 cmyk
f
1050.39 1353.72 mo
1042 1347.62 1031.95 1345.41 1021.76 1347.01 cv
1019.05 1347.44 1020.2 1351.56 1022.89 1351.13 cv
1031.98 1349.7 1040.82 1352.02 1048.23 1357.41 cv
1050.46 1359.03 1052.59 1355.32 1050.39 1353.72 cv
cp
.0315251 .305272 .282994 0 cmyk
f
1061.7 1314.76 mo
1061.7 1314.76 1064.82 1316.12 1070.05 1313.84 cv
1070.86 1315.52 1072.22 1317.34 1074.49 1318.54 cv
1075.93 1317.17 1076.45 1315.59 1076.51 1314.08 cv
1076.56 1312.63 1076.19 1311.24 1075.76 1310.15 cv
1075.87 1310.03 1075.98 1309.92 1076.09 1309.79 cv
1081 1304.4 1079.98 1296.16 1079.98 1296.16 cv
1079.98 1296.16 1079.42 1299.86 1070.95 1303.11 cv
1070.68 1303.21 1070.42 1303.32 1070.13 1303.42 cv
1060.85 1306.75 1061.7 1314.76 1061.7 1314.76 cv
cp
.691066 .735134 .454688 .360204 cmyk
f
1888.13 1813.41 mo
1888.13 1845.33 li
1888.13 1873.08 1865.42 1895.8 1837.66 1895.8 cv
1726.2 1895.8 li
1726.2 2012.81 li
1874.32 2012.81 li
1900.77 1988.65 1915.57 1949.8 1923.66 1906.27 cv
1923.47 1906.35 1923.37 1906.38 1923.37 1906.38 cv
1923.37 1906.38 1905.98 1863.64 1888.13 1813.41 cv
cp
.203555 .32163 0 0 cmyk
f
1569.89 1621.75 mo
1837.66 1621.75 li
1842.19 1621.75 1846.59 1622.36 1850.78 1623.49 cv
1855.63 1563.56 1871.14 1498.4 1872.06 1494.58 cv
1863.93 1489.59 1854.72 1485.8 1844.29 1483.52 cv
1813.38 1476.77 1764.79 1461.42 1748.16 1456.06 cv
1740.4 1438.7 li
1740.15 1438.7 li
1683.88 1437.18 li
1683.03 1437.15 li
1674.35 1454.51 li
1666.3 1458.91 1620.28 1483 1579.38 1481.96 cv
1560.29 1481.47 1544.73 1486.29 1532.02 1494.4 cv
1532.16 1494.93 1548.54 1562.71 1553.43 1624.53 cv
1558.59 1622.74 1564.13 1621.75 1569.89 1621.75 cv
cp
f
1681.35 1895.8 mo
1569.89 1895.8 li
1542.12 1895.8 1519.41 1873.08 1519.41 1845.33 cv
1519.41 1817.9 li
1504.69 1866.31 1490.91 1906.69 1490.91 1906.69 cv
1490.91 1906.69 1490.66 1906.61 1490.19 1906.44 cv
1495.01 1929.36 1501.33 1951.62 1509.6 1972.56 cv
1515.93 1988.62 1524.46 2001.9 1534.77 2012.81 cv
1681.35 2012.81 li
1681.35 1895.8 li
cp
f
1741.62 1413.23 mo
1739.87 1413.9 1738.09 1414.51 1736.29 1415.07 cv
1720.61 1419.88 1702.53 1421.54 1684.41 1414.88 cv
1683.88 1437.18 li
1740.15 1438.7 li
1741.62 1413.23 li
cp
.00595102 .199283 .166995 0 cmyk
f
1736.29 1415.07 mo
1738.09 1414.51 1739.87 1413.9 1741.62 1413.23 cv
1763.21 1404.95 1781.54 1387.77 1793.21 1367.46 cv
1793.11 1367.43 1793.02 1367.41 1792.92 1367.37 cv
1792.92 1367.37 1796.99 1320.86 1806.3 1310.39 cv
1807.51 1309.02 1808.67 1308.14 1809.77 1307.66 cv
1815.09 1287.12 1819.42 1265.17 1814.64 1241.48 cv
1808.15 1216.01 1799.81 1189.15 1750.67 1181.59 cv
1721.53 1177.11 1699.91 1185.54 1690.49 1208.63 cv
1690.49 1208.63 1679.15 1186.53 1647.75 1191.77 cv
1616.58 1195.51 1592.84 1240.09 1613.72 1301.52 cv
1614.38 1302.01 1615.07 1302.62 1615.77 1303.41 cv
1623.37 1311.96 1627.47 1344.54 1628.72 1356.21 cv
1630.74 1361.48 1633.42 1366.98 1637.16 1372.92 cv
1651.79 1396.16 1668.12 1408.88 1684.41 1414.88 cv
1702.53 1421.54 1720.61 1419.88 1736.29 1415.07 cv
cp
.339269 .700801 .701045 .244419 cmyk
f
1613.72 1301.52 mo
1605.57 1295.6 1600.51 1311.62 1605.89 1326.67 cv
1611.7 1342.95 1618.09 1364.47 1629.14 1360.4 cv
1629.14 1360.4 1629.01 1358.82 1628.72 1356.21 cv
1627.47 1344.54 1623.37 1311.96 1615.77 1303.41 cv
1615.07 1302.62 1614.38 1302.01 1613.72 1301.52 cv
cp
.00595102 .199283 .166995 0 cmyk
f
1806.3 1310.39 mo
1796.99 1320.86 1792.92 1367.37 1792.92 1367.37 cv
1793.02 1367.41 1793.11 1367.43 1793.21 1367.46 cv
1804.08 1371.06 1810.42 1349.79 1816.18 1333.65 cv
1821.24 1319.49 1817.06 1304.47 1809.77 1307.66 cv
1808.67 1308.14 1807.51 1309.02 1806.3 1310.39 cv
cp
f
1519.41 1817.9 mo
1519.41 1672.22 li
1519.41 1650.22 1533.69 1631.4 1553.43 1624.53 cv
1548.54 1562.71 1532.16 1494.93 1532.02 1494.4 cv
1532.02 1494.38 li
1470.98 1511.82 1418.66 1759.71 1423.65 1823.23 cv
1428.31 1882.73 1483.24 1903.99 1490.19 1906.44 cv
1490.66 1906.61 1490.91 1906.69 1490.91 1906.69 cv
1490.91 1906.69 1504.69 1866.31 1519.41 1817.9 cv
cp
.32987 .43714 0 0 cmyk
f
1872.11 1494.38 mo
1872.11 1494.38 1872.09 1494.46 1872.06 1494.58 cv
1871.14 1498.4 1855.63 1563.56 1850.78 1623.49 cv
1872.23 1629.31 1888.13 1648.99 1888.13 1672.22 cv
1888.13 1813.41 li
1905.98 1863.64 1923.37 1906.38 1923.37 1906.38 cv
1923.37 1906.38 1923.47 1906.35 1923.66 1906.27 cv
1927.76 1904.61 1975.71 1884.04 1980.48 1823.23 cv
1985.46 1759.71 1933.14 1511.82 1872.11 1494.38 cv
cp
f
1569.89 1621.75 mo
1564.13 1621.75 1558.59 1622.74 1553.43 1624.53 cv
1533.69 1631.4 1519.41 1650.22 1519.41 1672.22 cv
1519.41 1817.9 li
1519.41 1845.33 li
1519.41 1873.08 1542.12 1895.8 1569.89 1895.8 cv
1681.35 1895.8 li
1681.35 1743.19 li
1681.35 1731.16 1691.11 1721.4 1703.14 1721.4 cv
1704.4 1721.4 li
1716.44 1721.4 1726.2 1731.16 1726.2 1743.19 cv
1726.2 1895.8 li
1837.66 1895.8 li
1865.42 1895.8 1888.13 1873.08 1888.13 1845.33 cv
1888.13 1813.41 li
1888.13 1672.22 li
1888.13 1648.99 1872.23 1629.31 1850.78 1623.49 cv
1846.59 1622.36 1842.19 1621.75 1837.66 1621.75 cv
1569.89 1621.75 li
cp
.617761 .670893 .348363 .13611 cmyk
f
1704.4 1721.4 mo
1703.14 1721.4 li
1691.11 1721.4 1681.35 1731.16 1681.35 1743.19 cv
1681.35 1895.8 li
1681.35 2012.81 li
1681.35 2047.82 li
1681.35 2059.85 1691.11 2069.6 1703.14 2069.6 cv
1704.4 2069.6 li
1716.44 2069.6 1726.2 2059.85 1726.2 2047.82 cv
1726.2 2012.81 li
1726.2 1895.8 li
1726.2 1743.19 li
1726.2 1731.16 1716.44 1721.4 1704.4 1721.4 cv
cp
.691066 .735134 .454688 .360204 cmyk
f
296.662 414.622 mo
1105.11 206.736 li
1147.46 418.472 li
377.504 610.96 li
296.662 414.622 li
cp
0 .73788 .502708 0 cmyk
f
1884.49 174.511 mo
1867.72 350.54 li
2722.72 555.909 li
2773.02 413.406 li
1884.49 174.511 li
cp
.691066 .735134 .454688 .360204 cmyk
f
1159.55 214.184 mo
1880.88 211.864 li
1886.02 362.69 li
1172.39 381.254 li
1159.55 214.184 li
cp
.203555 .32163 0 0 cmyk
f
478.884 504.512 mo
463.621 509.204 448.397 513.994 433.202 518.883 cv
431.234 513.771 430.249 511.213 428.283 506.102 cv
434.413 503.637 437.484 502.415 443.624 499.983 cv
441.898 493.489 440.174 486.991 438.453 480.492 cv
424.638 486.251 410.86 492.089 397.115 498.008 cv
398.731 504.189 399.542 507.277 401.167 513.457 cv
407.348 511.223 413.538 509.01 419.738 506.819 cv
421.742 513.316 422.745 516.562 424.753 523.057 cv
409.331 527.317 393.937 531.675 378.569 536.137 cv
376.761 530.968 375.855 528.384 374.045 523.213 cv
379.683 521.158 385.329 519.12 390.98 517.104 cv
385.066 502.894 379.149 488.689 373.22 474.484 cv
366.989 476.985 363.875 478.243 357.653 480.78 cv
355.251 474.427 354.052 471.252 351.653 464.899 cv
367.318 459.673 383.014 454.547 398.746 449.529 cv
400.467 454.71 401.328 457.297 403.047 462.475 cv
397.593 464.648 394.867 465.738 389.419 467.937 cv
390.98 474.137 392.546 480.336 394.114 486.536 cv
408.11 481.432 422.133 476.407 436.187 471.463 cv
434.655 465.491 433.123 459.517 431.596 453.542 cv
425.37 456.268 419.153 459.016 412.944 461.789 cv
410.278 455.46 408.94 452.298 406.269 445.973 cv
421.762 440.306 437.288 434.744 452.854 429.282 cv
454.789 434.408 455.758 436.971 457.69 442.099 cv
451.272 444.892 448.066 446.297 441.665 449.126 cv
446.908 464.29 452.152 479.454 457.393 494.613 cv
463.794 492.105 466.997 490.861 473.407 488.387 cv
475.599 494.839 476.692 498.063 478.884 504.512 cv
cp
0 0 0 0 cmyk
f
527.542 470.212 mo
529.312 476.776 530.196 480.058 531.968 486.622 cv
516.447 490.3 500.95 494.079 485.476 497.96 cv
483.855 492.729 483.045 490.113 481.429 484.877 cv
488.262 482.672 491.679 481.576 498.521 479.406 cv
493.134 464.993 487.74 450.579 482.338 436.168 cv
476.038 438.434 472.889 439.575 466.601 441.874 cv
464.434 435.436 463.353 432.219 461.185 425.779 cv
476.982 421.15 492.808 416.621 508.662 412.194 cv
510.194 417.431 510.957 420.049 512.486 425.288 cv
506.974 427.254 504.22 428.242 498.715 430.234 cv
502.057 445.542 505.418 460.847 508.801 476.148 cv
515.042 474.148 521.29 472.168 527.542 470.212 cv
cp
f
602.846 448.505 mo
604.252 453.796 604.956 456.445 606.361 461.739 cv
591.228 466.664 576.132 471.686 561.064 476.805 cv
559.061 470.315 558.062 467.071 556.057 460.581 cv
560.565 459.37 562.821 458.769 567.33 457.575 cv
555.607 445.206 543.811 432.902 531.944 420.666 cv
525.811 422.761 522.747 423.818 516.624 425.947 cv
514.567 419.477 513.536 416.24 511.474 409.769 cv
527.327 405.406 543.203 401.148 559.107 396.993 cv
560.555 402.275 561.279 404.917 562.73 410.201 cv
557.403 411.987 554.739 412.884 549.422 414.691 cv
558.072 427.012 566.681 439.362 575.247 451.744 cv
579.581 435.765 584.012 419.817 588.536 403.891 cv
582.152 406.317 578.963 407.54 572.593 410 cv
570.279 403.581 569.119 400.371 566.803 393.953 cv
582.504 389.142 598.236 384.428 613.999 379.82 cv
615.649 385.001 616.471 387.59 618.118 392.772 cv
612.086 395.009 606.066 397.264 600.051 399.539 cv
597.083 416.797 594.206 434.065 591.43 451.351 cv
595.994 450.205 598.279 449.632 602.846 448.505 cv
cp
f
719.718 348.399 mo
704.94 380.686 690.656 413.181 676.87 445.909 cv
672.267 444.95 669.961 444.475 665.343 443.536 cv
675.037 410.407 685.175 377.428 695.758 344.573 cv
703.751 345.815 711.739 347.093 719.718 348.399 cv
cp
f
803.437 380.978 mo
812.95 378.902 822.468 376.857 831.996 374.846 cv
824.926 366.68 817.813 358.552 810.668 350.449 cv
808.215 360.617 805.811 370.794 803.437 380.978 cv
cp
875.296 398.59 mo
859.691 401.194 844.103 403.898 828.534 406.703 cv
827.261 401.376 826.625 398.712 825.35 393.385 cv
831.552 391.803 837.757 390.24 843.969 388.701 cv
841.404 385.708 840.116 384.215 837.538 381.228 cv
825.547 383.745 813.569 386.317 801.598 388.945 cv
800.735 392.668 800.306 394.529 799.45 398.255 cv
805.36 396.974 811.272 395.716 817.191 394.476 cv
818.323 401.179 818.889 404.531 820.023 411.232 cv
804.317 413.327 788.626 415.523 772.946 417.82 cv
771.853 412.52 771.307 409.868 770.209 404.567 cv
775.842 403.303 778.662 402.678 784.298 401.438 cv
789.755 385.071 795.313 368.741 800.97 352.441 cv
792.596 354.621 784.231 356.833 775.876 359.083 cv
774.327 352.269 773.555 348.862 772.009 342.051 cv
787.676 338.515 803.365 335.077 819.078 331.739 cv
831.243 349.732 843.292 367.804 855.232 385.951 cv
861.935 384.306 865.287 383.491 872 381.88 cv
873.319 388.562 873.978 391.906 875.296 398.59 cv
cp
f
921.107 372.271 mo
922.011 379.008 922.461 382.379 923.368 389.116 cv
907.626 390.722 891.899 392.431 876.181 394.239 cv
875.256 388.842 874.791 386.145 873.865 380.743 cv
880.868 379.454 884.371 378.821 891.376 377.574 cv
887.914 362.576 884.443 347.582 880.966 332.588 cv
874.479 334.007 871.237 334.724 864.76 336.174 cv
863.446 329.51 862.791 326.18 861.48 319.517 cv
877.615 317.002 893.761 314.593 909.928 312.291 cv
910.762 317.683 911.184 320.38 912.021 325.767 cv
906.341 326.995 903.507 327.613 897.835 328.865 cv
899.173 344.475 900.53 360.085 901.906 375.695 cv
908.302 374.531 914.704 373.39 921.107 372.271 cv
cp
f
971.916 363.853 mo
977.665 362.815 982.811 361.376 987.025 359.291 cv
991.235 357.205 994.658 354.844 997.301 352.197 cv
999.94 349.555 1001.81 346.779 1002.9 343.865 cv
1003.99 340.955 1004.35 338.186 1003.95 335.558 cv
1003.55 332.967 1002.7 330.414 1001.4 327.904 cv
1000.1 325.398 998.207 323.219 995.733 321.382 cv
993.259 319.546 990.142 318.174 986.385 317.27 cv
982.628 316.367 978.109 316.237 972.875 316.851 cv
971.351 317.026 969.584 317.299 967.606 317.702 cv
965.923 318.043 963.883 318.491 961.507 319.026 cv
959.128 319.562 956.467 320.239 953.53 321.061 cv
955.312 335.897 957.102 350.737 958.9 365.575 cv
960.78 365.405 962.519 365.215 964.11 365.004 cv
965.702 364.795 967.088 364.613 968.255 364.455 cv
969.605 364.27 970.843 364.048 971.916 363.853 cv
cp
1012.64 333.379 mo
1013.32 338.563 1013.41 343.41 1012.61 347.689 cv
1011.81 351.969 1010.41 355.803 1008.43 359.193 cv
1006.44 362.582 1003.95 365.56 1000.94 368.133 cv
997.933 370.707 994.597 372.935 990.938 374.824 cv
987.274 376.713 983.376 378.272 979.248 379.506 cv
975.115 380.739 970.914 381.712 966.642 382.422 cv
962.262 383.15 957.033 383.889 950.967 384.661 cv
944.166 385.526 937.331 386.138 930.498 386.74 cv
930.714 380.003 930.939 373.266 931.174 366.529 cv
933.914 366.737 936.762 366.831 939.723 366.807 cv
942.682 366.783 945.585 366.673 948.436 366.476 cv
944.938 352.967 941.426 339.462 937.901 325.959 cv
935.688 326.779 933.447 327.642 931.174 328.548 cv
928.901 329.457 926.566 330.435 924.169 331.48 cv
921.596 324.931 920.304 321.656 917.715 315.111 cv
921.685 313.161 925.643 311.459 929.592 310.004 cv
933.538 308.551 937.302 307.328 940.876 306.336 cv
944.451 305.343 947.74 304.533 950.747 303.902 cv
953.751 303.272 956.314 302.802 958.376 302.447 cv
964.657 301.359 971.748 300.894 978.135 301.409 cv
984.249 301.903 989.748 303.315 994.522 305.727 cv
999.295 308.139 1003.24 311.668 1006.39 316.139 cv
1009.71 320.852 1011.9 327.786 1012.64 333.379 cv
cp
f
1095.76 282.124 mo
1093.02 291.517 1090.3 300.913 1087.6 310.32 cv
1083.18 308.913 1079 307.947 1075.08 307.415 cv
1071.15 306.885 1067.7 306.573 1064.76 306.496 cv
1061.28 306.401 1058.05 306.54 1055.15 306.955 cv
1050.85 307.563 1047.2 308.417 1044.27 309.383 cv
1041.35 310.347 1039.05 311.43 1037.4 312.624 cv
1035.73 313.818 1034.65 315.07 1034.13 316.374 cv
1033.62 317.68 1033.63 319.004 1034.16 320.344 cv
1034.75 321.854 1035.79 322.972 1037.28 323.686 cv
1038.77 324.403 1040.69 324.82 1043.04 324.952 cv
1045.38 325.079 1048.14 324.998 1051.31 324.713 cv
1054.48 324.425 1058.05 324.019 1061.99 323.549 cv
1064.05 323.302 1066.36 323.079 1068.9 322.857 cv
1071.44 322.636 1074.04 322.581 1076.69 322.694 cv
1079.35 322.809 1081.95 323.159 1084.49 323.744 cv
1087.03 324.331 1089.35 325.312 1091.45 326.68 cv
1093.54 328.052 1095.3 329.884 1096.74 332.168 cv
1098.17 334.453 1099.1 337.366 1099.53 340.897 cv
1099.92 344.108 1099.78 346.949 1099.12 349.416 cv
1098.45 351.885 1097.42 354.048 1096.02 355.903 cv
1094.62 357.759 1092.9 359.349 1090.87 360.672 cv
1088.83 361.993 1086.64 363.11 1084.28 364.028 cv
1081.92 364.942 1079.46 365.673 1076.91 366.222 cv
1074.36 366.771 1071.86 367.205 1069.43 367.526 cv
1066.34 367.934 1063.37 368.195 1060.52 368.308 cv
1057.67 368.42 1054.86 368.415 1052.11 368.284 cv
1049.35 368.157 1046.59 367.934 1043.82 367.615 cv
1041.05 367.296 1038.22 366.908 1035.33 366.449 cv
1034.59 370.391 1034.21 372.36 1033.47 376.301 cv
1030.28 375.867 1028.68 375.654 1025.49 375.229 cv
1026.54 366.102 1027.61 356.977 1028.7 347.857 cv
1032.19 348.769 1035.63 349.548 1039.02 350.192 cv
1042.41 350.84 1045.79 351.319 1049.17 351.634 cv
1052.54 351.947 1055.92 352.079 1059.29 352.022 cv
1062.67 351.966 1066.09 351.708 1069.56 351.255 cv
1072.96 350.806 1075.84 350.236 1078.2 349.536 cv
1080.56 348.831 1082.45 347.994 1083.87 347.018 cv
1085.29 346.043 1086.27 344.923 1086.82 343.659 cv
1087.37 342.393 1087.55 340.979 1087.35 339.409 cv
1087.1 337.45 1086.39 335.964 1085.23 334.949 cv
1084.06 333.94 1082.39 333.262 1080.24 332.919 cv
1078.09 332.578 1075.44 332.499 1072.31 332.689 cv
1069.18 332.876 1065.52 333.187 1061.36 333.635 cv
1058.45 333.947 1055.39 334.254 1052.17 334.549 cv
1048.96 334.841 1045.78 334.971 1042.62 334.938 cv
1039.48 334.906 1036.44 334.643 1033.52 334.149 cv
1030.61 333.66 1027.97 332.787 1025.63 331.526 cv
1023.29 330.267 1021.32 328.558 1019.73 326.393 cv
1018.13 324.23 1017.08 321.461 1016.59 318.084 cv
1016.14 315.062 1016.25 312.26 1016.91 309.676 cv
1017.58 307.091 1018.7 304.729 1020.28 302.593 cv
1021.87 300.457 1023.84 298.537 1026.19 296.842 cv
1028.55 295.145 1031.21 293.658 1034.16 292.394 cv
1037.12 291.126 1040.3 290.078 1043.7 289.252 cv
1047.09 288.422 1050.67 287.741 1054.29 287.381 cv
1057.98 287.017 1061.79 286.945 1065.5 286.993 cv
1067.05 287.012 1068.7 287.077 1070.42 287.202 cv
1072.14 287.324 1073.85 287.52 1075.55 287.794 cv
1077.25 288.07 1078.91 288.422 1080.51 288.856 cv
1082.12 289.287 1083.62 289.815 1085.02 290.436 cv
1085.47 286.147 1085.69 284.001 1086.14 279.709 cv
1089.99 280.668 1091.91 281.153 1095.76 282.124 cv
cp
f
1251.25 290.814 mo
1250.95 289.151 1250.5 287.71 1249.9 286.504 cv
1249.31 285.296 1248.6 284.279 1247.8 283.454 cv
1246.99 282.627 1246.13 281.958 1245.2 281.452 cv
1244.27 280.944 1243.35 280.556 1242.43 280.282 cv
1240.27 279.659 1237.77 279.415 1235.32 279.834 cv
1232.99 280.235 1230.99 281.23 1229.58 282.435 cv
1228.16 283.641 1227.12 285.065 1226.45 286.705 cv
1225.77 288.345 1225.39 290.126 1225.28 292.049 cv
1225.18 293.974 1225.23 295.921 1225.43 297.885 cv
1234.03 295.501 1242.64 293.145 1251.25 290.814 cv
cp
1273.74 306.216 mo
1272.65 309.881 1270.99 313.121 1268.74 315.933 cv
1266.5 318.747 1263.91 321.145 1260.96 323.128 cv
1258.01 325.11 1254.84 326.674 1251.46 327.824 cv
1248.07 328.975 1244.7 329.713 1241.35 330.042 cv
1236.69 330.497 1232.46 330.197 1228.67 329.14 cv
1224.88 328.081 1221.58 326.474 1218.77 324.312 cv
1215.96 322.152 1213.65 319.512 1211.86 316.4 cv
1210.06 313.286 1208.73 309.81 1208.23 306.245 cv
1207.49 300.826 1208.08 295.737 1209.59 291.546 cv
1211.1 287.355 1213.4 283.831 1216.5 280.98 cv
1219.58 278.132 1223.32 275.895 1227.69 274.282 cv
1232.06 272.67 1236.78 271.618 1241.83 271.136 cv
1243.69 270.956 1245.62 270.901 1247.63 270.964 cv
1249.64 271.029 1251.62 271.292 1253.58 271.765 cv
1255.53 272.234 1257.42 272.954 1259.25 273.924 cv
1261.07 274.898 1262.76 276.207 1264.31 277.854 cv
1265.85 279.501 1267.22 281.522 1268.4 283.905 cv
1269.58 286.291 1270.49 289.151 1271.16 292.486 cv
1256.26 296.446 1241.41 300.5 1226.57 304.65 cv
1227.11 307.086 1227.88 309.448 1228.87 311.73 cv
1229.86 314.015 1231.09 315.993 1232.55 317.671 cv
1234.01 319.349 1235.73 320.62 1237.72 321.488 cv
1239.7 322.356 1242.12 322.725 1244.58 322.31 cv
1247.26 321.857 1249.77 320.658 1251.8 319.131 cv
1252.66 318.472 1253.47 317.685 1254.23 316.762 cv
1255 315.847 1255.64 314.765 1256.15 313.528 cv
1256.66 312.289 1256.99 310.872 1257.14 309.268 cv
1257.29 307.669 1257.18 305.856 1256.81 303.833 cv
1263.59 304.768 1266.97 305.245 1273.74 306.216 cv
cp
f
1308.48 274.867 mo
1306.26 274.951 1304.23 275.818 1302.64 277.202 cv
1301.05 278.583 1299.77 280.297 1298.79 282.335 cv
1297.82 284.377 1297.15 286.607 1296.78 289.034 cv
1296.42 291.462 1296.32 293.785 1296.5 296.005 cv
1296.67 298.225 1297.1 300.517 1297.79 302.876 cv
1298.47 305.237 1299.45 307.379 1300.7 309.299 cv
1301.96 311.219 1303.51 312.766 1305.35 313.938 cv
1307.19 315.113 1309.41 315.659 1311.84 315.42 cv
1313.3 315.276 1314.9 314.686 1316.52 313.832 cv
1317.89 313.114 1319.46 312.006 1321.17 310.498 cv
1322.89 308.99 1324.61 306.897 1326.34 304.216 cv
1325.93 296.195 1325.52 288.173 1325.11 280.153 cv
1322.78 278.693 1320.61 277.602 1318.6 276.883 cv
1316.59 276.161 1314.83 275.66 1313.32 275.375 cv
1311.55 275.032 1309.88 274.814 1308.48 274.867 cv
cp
1355.26 321.344 mo
1345.96 321.488 1336.66 321.663 1327.35 321.869 cv
1327.21 319.217 1327.14 317.892 1327 315.247 cv
1324.92 317.083 1322.73 318.536 1320.42 319.603 cv
1318.1 320.67 1315.98 321.471 1314.04 322.013 cv
1311.73 322.65 1309.44 323.13 1307.25 323.336 cv
1305.71 323.475 1303.91 323.42 1301.93 323.231 cv
1299.95 323.041 1297.91 322.627 1295.82 321.984 cv
1293.73 321.339 1291.65 320.416 1289.58 319.217 cv
1287.52 318.016 1285.64 316.458 1283.95 314.545 cv
1282.26 312.631 1280.82 310.306 1279.65 307.575 cv
1278.48 304.847 1277.73 301.637 1277.42 297.95 cv
1277.1 294.19 1277.28 290.832 1277.98 287.868 cv
1278.68 284.907 1279.74 282.311 1281.15 280.081 cv
1282.57 277.856 1284.29 275.948 1286.3 274.356 cv
1288.32 272.769 1290.47 271.458 1292.76 270.429 cv
1295.06 269.4 1297.41 268.609 1299.84 268.06 cv
1302.27 267.516 1304.63 267.132 1306.88 266.989 cv
1308.87 266.857 1310.94 266.931 1313 267.13 cv
1314.76 267.295 1316.67 267.619 1318.7 268.12 cv
1320.74 268.626 1322.69 269.408 1324.55 270.465 cv
1324.22 264.15 1323.9 257.833 1323.57 251.515 cv
1316.7 252.704 1313.26 253.311 1306.4 254.539 cv
1305.94 250.854 1305.71 249.013 1305.25 245.328 cv
1317.55 243.304 1329.85 241.338 1342.17 239.427 cv
1342.3 263.469 1342.45 287.508 1342.64 311.55 cv
1347.44 311.241 1349.83 311.092 1354.62 310.798 cv
1354.88 315.015 1355.01 317.127 1355.26 321.344 cv
cp
f
1434.47 316.156 mo
1424.57 316.513 1414.68 316.906 1404.79 317.335 cv
1404.92 313.787 1404.99 312.015 1405.11 308.474 cv
1402.42 310.749 1399.78 312.526 1397.18 313.797 cv
1394.58 315.072 1392.25 316.026 1390.2 316.671 cv
1387.78 317.429 1385.42 317.954 1383.23 318.1 cv
1379.82 318.332 1376.85 317.995 1374.5 317.24 cv
1372.14 316.489 1370.24 315.353 1368.78 313.832 cv
1367.31 312.315 1366.22 310.452 1365.51 308.242 cv
1364.79 306.036 1364.36 303.55 1364.2 300.786 cv
1364.11 299.316 1364.06 298.024 1364.03 296.909 cv
1364 295.797 1364.01 294.722 1364.04 293.697 cv
1364.07 292.67 1364.12 291.613 1364.19 290.529 cv
1364.26 289.445 1364.35 288.199 1364.48 286.789 cv
1364.6 285.379 1364.73 283.742 1364.87 281.882 cv
1365 280.021 1365.16 277.787 1365.35 275.185 cv
1360.63 275.735 1358.27 276.013 1353.55 276.578 cv
1353.93 271.371 1354.12 268.767 1354.5 263.563 cv
1363.71 263.4 1372.92 263.268 1382.13 263.165 cv
1381.89 267.171 1381.68 270.645 1381.49 273.587 cv
1381.31 276.528 1381.15 279.081 1381.02 281.246 cv
1380.89 283.409 1380.79 285.25 1380.7 286.77 cv
1380.61 288.285 1380.54 289.628 1380.49 290.8 cv
1380.44 291.973 1380.42 293.018 1380.43 293.934 cv
1380.44 294.849 1380.47 295.811 1380.53 296.815 cv
1380.61 298.431 1380.82 299.949 1381.15 301.37 cv
1381.48 302.792 1382 304.025 1382.7 305.07 cv
1383.39 306.113 1384.28 306.911 1385.36 307.47 cv
1386.43 308.028 1387.79 308.306 1389.28 308.191 cv
1391.13 308.047 1393.1 307.369 1395.04 306.345 cv
1396.68 305.478 1398.44 304.154 1400.29 302.38 cv
1402.14 300.603 1403.88 298.098 1405.51 294.862 cv
1405.75 287.259 1405.99 279.662 1406.23 272.062 cv
1401.21 272.455 1398.7 272.654 1393.68 273.064 cv
1393.93 268.413 1394.05 266.087 1394.3 261.434 cv
1407.05 261.278 1419.8 261.211 1432.55 261.213 cv
1432.67 264.682 1432.73 266.416 1432.85 269.885 cv
1427.8 270.299 1425.28 270.511 1420.23 270.942 cv
1420.91 282.658 1421.59 294.375 1422.27 306.086 cv
1427.01 306.29 1429.39 306.398 1434.13 306.621 cv
1434.27 310.433 1434.33 312.341 1434.47 316.156 cv
cp
f
1500.43 303.176 mo
1498.77 305.319 1497 307.132 1495.11 308.616 cv
1493.23 310.102 1491.32 311.337 1489.37 312.322 cv
1487.43 313.308 1485.52 314.079 1483.63 314.636 cv
1481.73 315.194 1479.96 315.604 1478.32 315.876 cv
1476.68 316.144 1475.21 316.309 1473.89 316.374 cv
1472.58 316.439 1471.53 316.482 1470.77 316.501 cv
1467.88 316.568 1465.06 316.321 1462.29 315.765 cv
1459.54 315.209 1456.92 314.372 1454.45 313.255 cv
1451.99 312.14 1449.73 310.735 1447.7 309.033 cv
1445.67 307.336 1443.93 305.396 1442.48 303.212 cv
1441.03 301.03 1439.93 298.597 1439.18 295.907 cv
1438.42 293.217 1438.13 290.302 1438.28 287.173 cv
1438.52 282.102 1439.56 277.7 1441.43 273.992 cv
1443.29 270.283 1445.68 267.207 1448.61 264.764 cv
1451.53 262.321 1454.83 260.494 1458.51 259.278 cv
1462.18 258.068 1466 257.337 1469.72 257.329 cv
1471.4 257.324 1473.27 257.54 1475.16 257.91 cv
1476.76 258.219 1478.59 258.734 1480.61 259.412 cv
1482.64 260.091 1484.69 261.06 1486.76 262.318 cv
1487.47 258.638 1487.83 256.797 1488.55 253.122 cv
1494.01 254.042 1496.73 254.507 1502.18 255.452 cv
1499.16 263.536 1496.15 271.628 1493.17 279.729 cv
1489.39 279.357 1487.5 279.175 1483.72 278.815 cv
1484.3 275.655 1484.59 274.076 1485.18 270.916 cv
1483.79 269.902 1482.47 269.125 1481.21 268.593 cv
1479.96 268.06 1478.84 267.655 1477.87 267.391 cv
1476.76 267.089 1475.67 266.881 1474.74 266.866 cv
1471.74 266.818 1468.89 267.483 1466.56 268.509 cv
1464.22 269.537 1462.27 270.925 1460.7 272.67 cv
1459.13 274.423 1457.97 276.485 1457.22 278.859 cv
1456.47 281.234 1456.14 283.824 1456.22 286.624 cv
1456.3 289.678 1456.74 292.486 1457.53 295.053 cv
1458.32 297.619 1459.51 299.824 1461.1 301.67 cv
1462.69 303.514 1464.69 304.938 1467.08 305.94 cv
1469.47 306.942 1472.43 307.51 1475.61 307.333 cv
1477.64 307.221 1479.71 306.53 1481.63 305.484 cv
1482.43 305.039 1483.27 304.473 1484.13 303.792 cv
1485 303.111 1485.85 302.287 1486.68 301.318 cv
1487.5 300.352 1488.3 299.225 1489.04 297.935 cv
1489.8 296.647 1490.45 295.154 1491.01 293.454 cv
1494.79 297.338 1496.68 299.283 1500.43 303.176 cv
cp
f
1548.76 290.927 mo
1547.91 290.855 1546.99 290.8 1545.99 290.764 cv
1545 290.726 1543.96 290.707 1542.9 290.707 cv
1541.98 290.707 1540.84 290.745 1539.5 290.817 cv
1538.15 290.889 1536.74 291.028 1535.27 291.227 cv
1533.8 291.428 1532.32 291.714 1530.85 292.076 cv
1529.37 292.443 1528.06 292.917 1526.9 293.495 cv
1525.75 294.078 1524.8 294.785 1524.07 295.614 cv
1523.34 296.446 1522.98 297.417 1522.98 298.532 cv
1522.99 299.393 1523.26 300.21 1523.8 300.98 cv
1524.34 301.749 1525.07 302.399 1525.99 302.934 cv
1526.91 303.466 1527.98 303.847 1529.22 304.075 cv
1530.44 304.303 1531.76 304.322 1533.1 304.09 cv
1535.82 303.617 1538.45 302.953 1540.89 302.214 cv
1543.33 301.478 1545.43 300.769 1547.2 300.088 cv
1547.49 298.58 1547.77 297.053 1548.03 295.509 cv
1548.29 293.965 1548.53 292.438 1548.76 290.927 cv
cp
1574.64 306.985 mo
1573.48 310.963 1572.9 312.95 1571.74 316.928 cv
1562.66 316.189 1553.57 315.482 1544.49 314.799 cv
1544.56 314.262 1544.66 313.667 1544.77 313.022 cv
1544.88 312.375 1544.98 311.754 1545.1 311.19 cv
1545.23 310.551 1545.37 309.896 1545.48 309.248 cv
1542.29 310.972 1539.07 312.195 1535.81 312.919 cv
1532.56 313.645 1529.38 314.017 1526.27 314.036 cv
1524 314.048 1521.64 313.864 1519.18 313.487 cv
1516.72 313.114 1514.48 312.438 1512.44 311.474 cv
1510.4 310.505 1508.7 309.213 1507.37 307.592 cv
1506.03 305.972 1505.34 303.924 1505.31 301.445 cv
1505.28 298.82 1505.86 296.549 1507.05 294.629 cv
1508.24 292.714 1509.83 291.071 1511.81 289.705 cv
1513.79 288.336 1516.04 287.228 1518.56 286.382 cv
1521.08 285.536 1523.64 284.864 1526.25 284.363 cv
1528.85 283.867 1531.39 283.533 1533.86 283.363 cv
1536.34 283.196 1538.52 283.109 1540.4 283.109 cv
1542.4 283.104 1544.19 283.155 1545.78 283.244 cv
1547.37 283.337 1548.79 283.473 1550.05 283.654 cv
1550.5 281.035 1550.73 278.537 1550.74 276.166 cv
1550.74 274.442 1550.51 272.877 1550.05 271.474 cv
1549.59 270.074 1548.79 268.902 1547.66 267.967 cv
1546.53 267.032 1545.02 266.327 1543.15 265.859 cv
1541.28 265.392 1538.86 265.14 1536.15 265.329 cv
1534.35 265.457 1532.59 266.022 1531.03 266.855 cv
1530.36 267.216 1529.69 267.667 1529 268.209 cv
1528.32 268.751 1527.67 269.4 1527.06 270.158 cv
1526.45 270.913 1525.91 271.808 1525.43 272.833 cv
1524.96 273.862 1524.59 275.022 1524.34 276.317 cv
1517.17 276.703 1513.58 276.907 1506.41 277.336 cv
1506.64 274.855 1507.26 272.647 1508.28 270.712 cv
1509.3 268.777 1510.55 267.094 1512.05 265.66 cv
1513.54 264.227 1515.19 262.999 1517 261.978 cv
1518.82 260.959 1520.65 260.101 1522.51 259.406 cv
1526.9 257.833 1531.92 256.709 1537.2 256.488 cv
1541.91 256.289 1546.15 256.852 1549.52 257.811 cv
1552.89 258.77 1555.67 260.058 1557.86 261.666 cv
1560.05 263.275 1561.74 265.092 1562.96 267.111 cv
1564.17 269.132 1565.05 271.139 1565.59 273.138 cv
1566.13 275.138 1566.43 277.027 1566.49 278.806 cv
1566.55 280.582 1566.58 282.078 1566.51 283.198 cv
1566.42 284.567 1566.11 286.365 1565.7 288.472 cv
1565.35 290.292 1564.85 292.601 1564.19 295.363 cv
1563.52 298.124 1562.63 301.426 1561.5 305.262 cv
1566.76 305.943 1569.39 306.285 1574.64 306.985 cv
cp
f
1601.04 292.812 mo
1601.01 294.756 1601.26 296.449 1601.8 297.894 cv
1602.35 299.343 1603.11 300.555 1604.07 301.524 cv
1605.05 302.497 1606.2 303.229 1607.53 303.725 cv
1608.86 304.216 1610.3 304.485 1611.84 304.519 cv
1613.38 304.552 1615 304.356 1616.7 303.928 cv
1618.4 303.502 1620.09 302.843 1621.76 301.951 cv
1623.44 301.059 1625.09 299.935 1626.71 298.575 cv
1628.33 297.218 1629.84 295.643 1631.26 293.847 cv
1631.59 295.151 1631.93 296.595 1632.3 298.137 cv
1632.61 299.469 1633 301.025 1633.4 302.781 cv
1633.81 304.535 1634.26 306.41 1634.75 308.4 cv
1632.51 309.951 1630.31 311.219 1628.15 312.2 cv
1626 313.185 1623.93 313.955 1621.91 314.516 cv
1619.9 315.075 1617.98 315.451 1616.15 315.643 cv
1614.32 315.832 1612.61 315.909 1611.04 315.876 cv
1606.94 315.787 1603.49 315.185 1600.67 314.073 cv
1597.85 312.962 1595.52 311.464 1593.66 309.582 cv
1591.81 307.705 1590.37 305.509 1589.36 302.994 cv
1588.36 300.481 1587.61 297.774 1587.14 294.873 cv
1586.66 291.978 1586.39 288.954 1586.32 285.809 cv
1586.26 282.666 1586.25 279.546 1586.29 276.459 cv
1586.3 275.668 1586.33 274.768 1586.38 273.764 cv
1586.43 272.757 1586.5 271.7 1586.59 270.585 cv
1581.27 270.662 1578.61 270.707 1573.29 270.806 cv
1573.77 266.305 1574.02 264.054 1574.51 259.552 cv
1579.92 259.199 1582.63 259.027 1588.04 258.694 cv
1588.46 255.646 1588.9 252.669 1589.38 249.765 cv
1589.85 246.862 1590.26 244.237 1590.64 241.916 cv
1591.09 239.198 1591.53 236.61 1591.94 234.172 cv
1598.01 234.695 1604.09 235.237 1610.15 235.8 cv
1609.66 237.73 1609.19 239.859 1608.68 242.129 cv
1608.24 244.088 1607.72 246.395 1607.16 249.024 cv
1606.6 251.657 1606.03 254.51 1605.45 257.588 cv
1613.54 257.12 1621.65 256.684 1629.75 256.277 cv
1629.46 261.837 1629.32 264.613 1629.04 270.17 cv
1620.43 270.185 1611.84 270.237 1603.24 270.323 cv
1602.61 274.337 1602.1 278.254 1601.72 282.074 cv
1601.33 285.893 1601.1 289.474 1601.04 292.812 cv
cp
f
1674.05 250.53 mo
1674.01 251.391 1673.71 252.194 1673.14 252.945 cv
1672.56 253.695 1671.8 254.337 1670.84 254.874 cv
1669.89 255.411 1668.78 255.824 1667.52 256.116 cv
1666.25 256.409 1664.91 256.528 1663.5 256.473 cv
1662.04 256.418 1660.7 256.193 1659.47 255.81 cv
1658.23 255.421 1657.15 254.922 1656.24 254.316 cv
1655.33 253.709 1654.62 253.009 1654.1 252.218 cv
1653.59 251.427 1653.35 250.6 1653.38 249.739 cv
1653.4 248.84 1653.71 247.996 1654.28 247.21 cv
1654.85 246.419 1655.61 245.754 1656.57 245.212 cv
1657.52 244.673 1658.64 244.253 1659.9 243.961 cv
1661.17 243.664 1662.53 243.546 1663.99 243.601 cv
1665.41 243.657 1666.74 243.877 1667.99 244.268 cv
1669.22 244.659 1670.3 245.162 1671.21 245.773 cv
1672.12 246.385 1672.83 247.104 1673.34 247.936 cv
1673.85 248.766 1674.09 249.631 1674.05 250.53 cv
cp
1682.48 303.924 mo
1681.51 309.405 1681.02 312.145 1680.05 317.625 cv
1666.43 316.662 1652.8 315.77 1639.17 314.95 cv
1638.59 311.006 1638.3 309.035 1637.72 305.094 cv
1644.4 304.888 1647.75 304.792 1654.43 304.624 cv
1654.77 294.37 1655.1 284.119 1655.43 273.865 cv
1648.49 273.4 1645.03 273.177 1638.09 272.75 cv
1638.2 269.305 1638.25 267.578 1638.36 264.133 cv
1650.08 263.764 1661.8 263.448 1673.52 263.184 cv
1671.54 276.876 1669.58 290.568 1667.63 304.262 cv
1673.57 304.111 1676.54 304.044 1682.48 303.924 cv
cp
f
1719.52 268.885 mo
1717.55 268.772 1715.81 269.082 1714.3 269.81 cv
1712.79 270.537 1711.47 271.529 1710.34 272.781 cv
1709.22 274.035 1708.26 275.469 1707.47 277.082 cv
1706.68 278.696 1706.03 280.342 1705.54 282.025 cv
1705.05 283.709 1704.67 285.355 1704.42 286.962 cv
1704.17 288.566 1704.02 289.963 1703.96 291.148 cv
1703.89 292.438 1703.91 293.888 1704.01 295.495 cv
1704.11 297.101 1704.34 298.721 1704.7 300.361 cv
1705.05 301.999 1705.56 303.607 1706.22 305.187 cv
1706.87 306.77 1707.71 308.182 1708.75 309.424 cv
1709.78 310.668 1711.03 311.689 1712.47 312.485 cv
1713.91 313.286 1715.6 313.739 1717.54 313.85 cv
1719.52 313.96 1721.23 313.701 1722.69 313.063 cv
1724.13 312.428 1725.38 311.548 1726.42 310.419 cv
1727.47 309.294 1728.32 307.997 1729 306.525 cv
1729.68 305.053 1730.22 303.545 1730.63 302.004 cv
1731.03 300.467 1731.34 298.961 1731.54 297.499 cv
1731.73 296.036 1731.87 294.727 1731.94 293.581 cv
1732.04 292.04 1732.05 290.366 1731.99 288.564 cv
1731.94 286.761 1731.77 284.955 1731.49 283.16 cv
1731.21 281.362 1730.78 279.624 1730.19 277.95 cv
1729.6 276.279 1728.83 274.793 1727.88 273.495 cv
1726.94 272.198 1725.77 271.132 1724.38 270.294 cv
1723 269.458 1721.38 268.988 1719.52 268.885 cv
cp
1714.22 321.059 mo
1709.15 320.776 1704.82 319.793 1701.22 318.098 cv
1697.62 316.403 1694.7 314.209 1692.46 311.512 cv
1690.23 308.812 1688.62 305.715 1687.64 302.214 cv
1686.66 298.719 1686.26 295.029 1686.44 291.155 cv
1686.68 285.95 1687.82 281.436 1689.87 277.609 cv
1691.93 273.786 1694.62 270.65 1697.96 268.204 cv
1701.31 265.761 1705.13 264.004 1709.44 262.937 cv
1713.75 261.87 1718.27 261.47 1723 261.741 cv
1728.29 262.043 1732.7 263.064 1736.24 264.792 cv
1739.77 266.519 1742.57 268.724 1744.63 271.395 cv
1746.69 274.066 1748.11 277.077 1748.87 280.421 cv
1749.64 283.766 1749.9 287.233 1749.66 290.817 cv
1749.34 295.693 1748.24 300.066 1746.38 303.943 cv
1744.53 307.817 1742.05 311.068 1738.96 313.701 cv
1735.87 316.328 1732.23 318.282 1728.03 319.56 cv
1723.82 320.836 1719.23 321.337 1714.22 321.059 cv
cp
f
1793.34 312.727 mo
1792.57 317.338 1792.19 319.641 1791.42 324.252 cv
1778.89 323.152 1766.35 322.128 1753.81 321.183 cv
1754.08 317.27 1754.21 315.314 1754.48 311.397 cv
1759.04 311.539 1761.32 311.61 1765.89 311.766 cv
1766.44 300.476 1767 289.184 1767.54 277.897 cv
1762.8 277.686 1760.43 277.585 1755.68 277.393 cv
1755.95 273.476 1756.08 271.52 1756.35 267.607 cv
1766.87 267.024 1777.39 266.49 1787.91 266.013 cv
1787.28 270.096 1786.97 272.138 1786.33 276.216 cv
1789.2 274.387 1792.01 273.014 1794.75 272.097 cv
1797.49 271.182 1799.97 270.491 1802.12 270.074 cv
1804.64 269.585 1807.19 269.25 1809.36 269.329 cv
1812.87 269.46 1816.13 270.388 1818.63 271.563 cv
1821.12 272.735 1823.1 274.267 1824.56 276.147 cv
1826.01 278.029 1827 280.22 1827.52 282.718 cv
1828.04 285.219 1828.16 287.954 1827.89 290.925 cv
1827.78 292.179 1827.65 293.284 1827.53 294.245 cv
1827.4 295.209 1827.25 296.147 1827.08 297.048 cv
1826.9 297.952 1826.71 298.892 1826.49 299.863 cv
1826.27 300.836 1826.01 301.994 1825.7 303.336 cv
1825.39 304.679 1825.03 306.261 1824.63 308.083 cv
1824.22 309.905 1823.76 312.09 1823.23 314.638 cv
1827.93 314.806 1830.28 314.895 1834.99 315.077 cv
1833.87 320.167 1833.31 322.715 1832.19 327.805 cv
1822.46 326.527 1812.74 325.283 1803.01 324.072 cv
1803.8 319.92 1804.49 316.352 1805.07 313.375 cv
1805.66 310.394 1806.17 307.851 1806.61 305.741 cv
1807.04 303.634 1807.4 301.86 1807.67 300.424 cv
1807.94 298.985 1808.17 297.727 1808.38 296.643 cv
1808.59 295.559 1808.74 294.574 1808.86 293.682 cv
1808.97 292.79 1809.07 291.824 1809.16 290.786 cv
1809.3 289.175 1809.3 287.65 1809.16 286.214 cv
1809.02 284.78 1808.67 283.495 1808.12 282.368 cv
1807.56 281.239 1806.78 280.316 1805.78 279.602 cv
1804.78 278.885 1803.38 278.288 1801.95 278.228 cv
1800.65 278.173 1798.92 278.587 1797.18 279.134 cv
1795.65 279.611 1793.84 280.371 1791.77 281.376 cv
1789.7 282.383 1787.39 283.869 1784.86 285.835 cv
1783.55 294.67 1782.24 303.507 1780.93 312.344 cv
1785.9 312.488 1788.38 312.564 1793.34 312.727 cv
cp
f
1971.81 291.05 mo
1964.77 290.565 1957.72 290.096 1950.68 289.645 cv
1950.52 290.349 1950.4 291.076 1950.31 291.826 cv
1950.22 292.574 1950.14 293.325 1950.05 294.075 cv
1948.86 304.281 1947.66 314.489 1946.47 324.693 cv
1952.15 325.142 1954.99 325.371 1960.66 325.844 cv
1959.38 330.359 1958.74 332.617 1957.46 337.131 cv
1943.96 335.132 1930.44 333.206 1916.9 331.356 cv
1917 327.853 1917.04 326.101 1917.12 322.595 cv
1922.05 322.955 1924.52 323.135 1929.45 323.511 cv
1930.37 312.099 1931.28 300.687 1932.2 289.273 cv
1932.24 288.93 1932.26 288.758 1932.3 288.415 cv
1925.9 288.01 1922.7 287.813 1916.31 287.441 cv
1916.78 282.915 1917.02 280.654 1917.5 276.133 cv
1923.99 277.101 1927.24 277.59 1933.72 278.597 cv
1934.56 274.783 1935.76 271.431 1937.33 268.533 cv
1938.89 265.634 1941 263.284 1943.66 261.491 cv
1946.32 259.696 1949.62 258.473 1953.55 257.828 cv
1957.48 257.183 1962.28 257.274 1967.74 257.861 cv
1969.03 258 1970.43 258.192 1971.81 258.518 cv
1972.98 258.794 1974.27 259.202 1975.67 259.7 cv
1977.06 260.202 1978.38 260.851 1979.6 261.657 cv
1978.17 266.497 1977.46 268.919 1976.04 273.759 cv
1975.25 272.285 1974.24 271.129 1973.02 270.293 cv
1971.81 269.451 1970.61 268.822 1969.47 268.386 cv
1968.1 267.868 1966.55 267.355 1965.23 267.329 cv
1963.79 267.303 1962.18 267.756 1960.88 268.219 cv
1959.58 268.679 1958.39 269.434 1957.33 270.484 cv
1956.26 271.532 1955.31 272.939 1954.46 274.701 cv
1953.61 276.468 1952.86 278.722 1952.2 281.467 cv
1959 282.524 1965.8 283.596 1972.6 284.684 cv
1972.29 287.228 1972.13 288.501 1971.81 291.05 cv
cp
f
2006.67 292.354 mo
2004.72 292.09 2002.95 292.26 2001.39 292.867 cv
1999.83 293.474 1998.43 294.36 1997.21 295.521 cv
1995.98 296.684 1994.92 298.038 1994 299.585 cv
1993.09 301.131 1992.32 302.725 1991.69 304.363 cv
1991.06 306.002 1990.56 307.613 1990.19 309.193 cv
1989.82 310.778 1989.55 312.157 1989.4 313.332 cv
1989.23 314.614 1989.14 316.062 1989.11 317.671 cv
1989.09 319.28 1989.19 320.912 1989.42 322.574 cv
1989.65 324.235 1990.03 325.88 1990.56 327.505 cv
1991.09 329.135 1991.82 330.61 1992.76 331.929 cv
1993.7 333.25 1994.86 334.365 1996.24 335.273 cv
1997.61 336.182 1999.27 336.767 2001.2 337.028 cv
2003.17 337.294 2004.9 337.167 2006.4 336.647 cv
2007.89 336.127 2009.21 335.348 2010.33 334.307 cv
2011.46 333.264 2012.42 332.037 2013.22 330.622 cv
2014 329.21 2014.66 327.747 2015.19 326.247 cv
2015.72 324.741 2016.14 323.267 2016.45 321.823 cv
2016.76 320.38 2017 319.086 2017.16 317.947 cv
2017.37 316.417 2017.52 314.751 2017.6 312.95 cv
2017.68 311.148 2017.66 309.337 2017.52 307.523 cv
2017.38 305.708 2017.08 303.943 2016.62 302.229 cv
2016.16 300.515 2015.51 298.973 2014.67 297.606 cv
2013.82 296.24 2012.75 295.082 2011.42 294.142 cv
2010.11 293.2 2008.52 292.603 2006.67 292.354 cv
cp
1997.32 343.954 mo
1992.27 343.278 1988.02 341.957 1984.57 339.987 cv
1981.1 338.016 1978.37 335.599 1976.34 332.734 cv
1974.31 329.871 1972.95 326.657 1972.24 323.094 cv
1971.54 319.529 1971.42 315.82 1971.9 311.97 cv
1972.55 306.801 1974.04 302.387 1976.39 298.733 cv
1978.73 295.08 1981.67 292.167 1985.2 289.992 cv
1988.73 287.818 1992.69 286.365 1997.08 285.636 cv
2001.46 284.91 2006.01 284.864 2010.71 285.504 cv
2015.97 286.219 2020.29 287.583 2023.69 289.585 cv
2027.08 291.584 2029.71 293.999 2031.56 296.823 cv
2033.41 299.647 2034.59 302.761 2035.09 306.154 cv
2035.6 309.546 2035.59 313.025 2035.07 316.578 cv
2034.37 321.416 2032.94 325.693 2030.77 329.406 cv
2028.62 333.127 2025.89 336.174 2022.6 338.555 cv
2019.31 340.936 2015.52 342.595 2011.23 343.539 cv
2006.93 344.487 2002.3 344.623 1997.32 343.954 cv
cp
f
2083.26 340.89 mo
2082.68 344.463 2082.39 346.251 2081.81 349.828 cv
2067.58 349.32 2053.34 348.893 2039.1 348.548 cv
2039.28 342.995 2039.37 340.217 2039.53 334.664 cv
2045.14 335.448 2047.94 335.846 2053.54 336.654 cv
2055.26 326.829 2056.98 317.007 2058.71 307.182 cv
2051.92 305.647 2048.53 304.89 2041.73 303.389 cv
2042.26 299.762 2042.53 297.947 2043.06 294.325 cv
2055.16 295.082 2067.25 295.89 2079.35 296.755 cv
2077.86 301.39 2077.12 303.706 2075.65 308.34 cv
2076.58 307.65 2077.8 306.871 2079.29 305.998 cv
2080.79 305.128 2082.43 304.259 2084.21 303.401 cv
2085.99 302.54 2087.89 301.69 2089.9 300.85 cv
2091.9 300.011 2093.91 299.273 2095.91 298.635 cv
2097.9 297.997 2099.86 297.482 2101.76 297.089 cv
2103.67 296.696 2105.4 296.482 2106.96 296.451 cv
2106.38 303.61 2106.08 307.192 2105.49 314.348 cv
2100.21 313.461 2095.59 313.156 2091.65 313.421 cv
2087.7 313.684 2084.37 314.149 2081.67 314.811 cv
2078.54 315.578 2075.84 316.592 2073.58 317.837 cv
2071.19 324.695 2068.8 331.56 2066.41 338.421 cv
2073.15 339.389 2076.52 339.883 2083.26 340.89 cv
cp
f
2206.58 319.725 mo
2203.56 325.345 2200.55 330.972 2197.55 336.604 cv
2195.95 335.333 2194.14 334.041 2192.11 332.725 cv
2190.1 331.416 2187.99 330.196 2185.8 329.073 cv
2183.61 327.951 2181.39 326.964 2179.14 326.11 cv
2176.89 325.259 2174.75 324.633 2172.69 324.247 cv
2169.84 323.703 2167.43 323.679 2165.48 324.17 cv
2163.53 324.664 2162.41 325.705 2162.11 327.297 cv
2161.92 328.32 2162.16 329.27 2162.83 330.145 cv
2163.5 331.017 2164.58 331.926 2166.09 332.869 cv
2167.59 333.811 2169.52 334.818 2171.87 335.882 cv
2174.22 336.956 2176.97 338.215 2180.09 339.606 cv
2182.89 340.855 2185.54 342.137 2187.96 343.473 cv
2190.38 344.808 2192.41 346.299 2194.05 347.944 cv
2195.69 349.586 2196.87 351.437 2197.59 353.487 cv
2198.31 355.537 2198.4 357.884 2197.88 360.526 cv
2197.31 363.345 2196.23 365.599 2194.63 367.296 cv
2193.03 368.991 2191.03 370.228 2188.62 371.017 cv
2186.22 371.803 2183.49 372.173 2180.45 372.124 cv
2177.4 372.079 2174.15 371.722 2170.69 371.055 cv
2166.47 370.242 2162.91 369.238 2160.02 368.032 cv
2157.12 366.829 2154.76 365.661 2152.93 364.539 cv
2151.1 363.412 2149.73 362.437 2148.82 361.609 cv
2147.9 360.782 2147.32 360.346 2147.07 360.3 cv
2146 363.657 2145.47 365.332 2144.4 368.686 cv
2140.12 366.323 2137.97 365.143 2133.66 362.791 cv
2136.76 357.414 2139.87 352.044 2142.98 346.678 cv
2143.98 347.591 2145.21 348.582 2146.66 349.651 cv
2148.12 350.72 2149.68 351.813 2151.35 352.925 cv
2153.02 354.036 2154.78 355.141 2156.62 356.234 cv
2158.45 357.325 2160.29 358.327 2162.1 359.238 cv
2163.91 360.149 2165.66 360.928 2167.34 361.578 cv
2169.01 362.225 2170.54 362.684 2171.91 362.947 cv
2172.56 363.072 2173.3 363.158 2174.11 363.208 cv
2174.93 363.257 2175.72 363.196 2176.48 363.036 cv
2177.24 362.873 2177.92 362.563 2178.5 362.106 cv
2179.07 361.652 2179.45 360.965 2179.63 360.048 cv
2179.85 358.921 2179.62 357.857 2178.95 356.87 cv
2178.28 355.879 2177.4 354.968 2176.32 354.136 cv
2175.24 353.307 2174.06 352.557 2172.77 351.887 cv
2171.49 351.221 2170.33 350.605 2169.3 350.102 cv
2167.68 349.298 2165.82 348.404 2163.83 347.387 cv
2161.84 346.373 2159.83 345.247 2157.8 344.007 cv
2155.77 342.772 2153.84 341.435 2151.99 339.998 cv
2150.15 338.563 2148.55 337.009 2147.2 335.338 cv
2145.84 333.667 2144.84 331.89 2144.17 330.02 cv
2143.51 328.148 2143.37 326.151 2143.76 324.031 cv
2144.15 321.874 2145.05 319.927 2146.46 318.194 cv
2147.87 316.46 2149.73 315.053 2152.04 313.976 cv
2154.34 312.9 2157.07 312.207 2160.23 311.895 cv
2163.38 311.586 2166.87 311.79 2170.7 312.514 cv
2174.3 313.193 2177.54 314.157 2180.4 315.405 cv
2183.27 316.65 2185.73 317.911 2187.76 319.133 cv
2190.14 320.553 2192.26 322.063 2194.07 323.665 cv
2194.65 320.303 2194.93 318.625 2195.5 315.266 cv
2199.94 317.043 2202.15 317.935 2206.58 319.725 cv
cp
f
2229.77 359.665 mo
2229.38 361.564 2229.31 363.278 2229.57 364.8 cv
2229.83 366.325 2230.35 367.655 2231.14 368.794 cv
2231.91 369.933 2232.91 370.87 2234.13 371.609 cv
2235.35 372.345 2236.72 372.88 2238.23 373.206 cv
2239.75 373.527 2241.39 373.645 2243.15 373.546 cv
2244.9 373.45 2246.69 373.119 2248.52 372.565 cv
2250.34 372.005 2252.18 371.214 2254.04 370.187 cv
2255.89 369.159 2257.68 367.898 2259.42 366.407 cv
2259.5 367.749 2259.56 369.231 2259.64 370.815 cv
2259.7 372.184 2259.78 373.784 2259.86 375.587 cv
2259.93 377.387 2260.02 379.312 2260.13 381.36 cv
2257.62 382.458 2255.21 383.287 2252.9 383.841 cv
2250.59 384.402 2248.39 384.764 2246.3 384.934 cv
2244.21 385.102 2242.24 385.107 2240.39 384.946 cv
2238.55 384.785 2236.85 384.538 2235.31 384.207 cv
2231.28 383.342 2227.98 382.1 2225.41 380.475 cv
2222.84 378.849 2220.82 376.936 2219.33 374.738 cv
2217.86 372.542 2216.86 370.11 2216.33 367.452 cv
2215.81 364.795 2215.58 361.995 2215.66 359.058 cv
2215.74 356.121 2216.04 353.101 2216.57 350 cv
2217.09 346.898 2217.67 343.835 2218.29 340.807 cv
2218.45 340.032 2218.65 339.157 2218.89 338.179 cv
2219.13 337.203 2219.4 336.174 2219.69 335.101 cv
2214.42 334.165 2211.79 333.708 2206.52 332.796 cv
2207.85 328.469 2208.52 326.304 2209.85 321.977 cv
2215.25 322.65 2217.96 322.995 2223.37 323.693 cv
2224.35 320.781 2225.35 317.94 2226.36 315.178 cv
2227.38 312.413 2228.28 309.915 2229.09 307.705 cv
2230.04 305.123 2230.96 302.663 2231.83 300.349 cv
2237.72 302.011 2243.62 303.696 2249.5 305.396 cv
2248.66 307.199 2247.78 309.198 2246.85 311.332 cv
2246.05 313.171 2245.1 315.341 2244.05 317.817 cv
2243.01 320.294 2241.9 322.991 2240.75 325.904 cv
2248.84 326.976 2256.92 328.083 2265 329.222 cv
2263.67 334.623 2263 337.325 2261.68 342.727 cv
2253.18 341.116 2244.69 339.536 2236.18 337.992 cv
2234.8 341.814 2233.56 345.563 2232.46 349.243 cv
2231.36 352.921 2230.46 356.397 2229.77 359.665 cv
cp
f
2335.55 406.588 mo
2325.87 404.186 2316.2 401.82 2306.51 399.484 cv
2307.61 396.113 2308.16 394.428 2309.26 391.057 cv
2306.03 392.498 2302.98 393.474 2300.11 393.973 cv
2297.25 394.478 2294.73 394.747 2292.57 394.8 cv
2290.02 394.857 2287.6 394.706 2285.44 394.244 cv
2282.07 393.519 2279.3 392.371 2277.23 390.995 cv
2275.16 389.621 2273.63 387.998 2272.64 386.133 cv
2271.64 384.27 2271.11 382.177 2271.02 379.854 cv
2270.94 377.536 2271.21 375.025 2271.81 372.326 cv
2272.14 370.89 2272.44 369.631 2272.73 368.552 cv
2273 367.473 2273.31 366.445 2273.62 365.467 cv
2273.94 364.488 2274.28 363.486 2274.64 362.465 cv
2275.01 361.444 2275.44 360.269 2275.95 358.95 cv
2276.46 357.63 2277.04 356.09 2277.68 354.337 cv
2278.33 352.59 2279.1 350.49 2280 348.039 cv
2275.29 347.258 2272.93 346.872 2268.21 346.11 cv
2270.01 341.209 2270.91 338.762 2272.72 333.861 cv
2281.67 336.256 2290.61 338.682 2299.54 341.137 cv
2298.21 344.918 2297.04 348.2 2296.05 350.977 cv
2295.06 353.753 2294.2 356.162 2293.48 358.207 cv
2292.76 360.255 2292.15 361.995 2291.64 363.426 cv
2291.14 364.858 2290.7 366.131 2290.33 367.243 cv
2289.95 368.356 2289.65 369.355 2289.4 370.24 cv
2289.16 371.122 2288.93 372.055 2288.7 373.036 cv
2288.34 374.608 2288.12 376.128 2288.05 377.586 cv
2287.97 379.044 2288.13 380.372 2288.52 381.568 cv
2288.9 382.764 2289.54 383.778 2290.43 384.613 cv
2291.32 385.447 2292.55 386.092 2294.03 386.392 cv
2295.86 386.768 2297.95 386.665 2300.1 386.219 cv
2301.94 385.838 2304 385.052 2306.28 383.858 cv
2308.56 382.669 2310.93 380.743 2313.4 378.085 cv
2315.73 370.842 2318.06 363.606 2320.4 356.371 cv
2315.43 355.354 2312.95 354.849 2307.98 353.853 cv
2309.5 349.449 2310.27 347.248 2311.79 342.847 cv
2324.17 346.235 2336.53 349.706 2348.86 353.249 cv
2348.02 356.618 2347.6 358.301 2346.76 361.664 cv
2341.76 360.662 2339.26 360.168 2334.26 359.183 cv
2331.68 370.631 2329.1 382.079 2326.52 393.524 cv
2331.06 395.039 2333.32 395.799 2337.86 397.331 cv
2336.93 401.033 2336.47 402.884 2335.55 406.588 cv
cp
f
2384.26 369.379 mo
2382.12 368.732 2379.9 368.888 2377.94 369.677 cv
2375.97 370.463 2374.19 371.664 2372.6 373.27 cv
2371 374.881 2369.64 376.776 2368.5 378.948 cv
2367.36 381.125 2366.51 383.287 2365.96 385.445 cv
2365.4 387.602 2365.07 389.907 2364.95 392.366 cv
2364.83 394.821 2365.06 397.164 2365.63 399.388 cv
2366.2 401.616 2367.18 403.584 2368.54 405.296 cv
2369.91 407.01 2371.86 408.252 2374.24 408.82 cv
2375.68 409.163 2377.4 409.129 2379.23 408.851 cv
2380.76 408.619 2382.62 408.086 2384.74 407.221 cv
2386.87 406.355 2389.19 404.938 2391.72 402.975 cv
2393.94 395.257 2396.16 387.538 2398.39 379.818 cv
2396.64 377.677 2394.92 375.937 2393.25 374.596 cv
2391.57 373.261 2390.06 372.208 2388.71 371.443 cv
2387.12 370.542 2385.61 369.787 2384.26 369.379 cv
cp
2413.71 428.64 mo
2404.79 425.727 2395.86 422.843 2386.93 419.992 cv
2387.66 417.441 2388.02 416.168 2388.75 413.617 cv
2386.17 414.677 2383.6 415.331 2381.06 415.583 cv
2378.51 415.833 2376.22 415.897 2374.19 415.773 cv
2371.79 415.627 2369.45 415.327 2367.3 414.802 cv
2365.78 414.432 2364.08 413.79 2362.26 412.965 cv
2360.43 412.138 2358.63 411.078 2356.85 409.786 cv
2355.06 408.494 2353.39 406.943 2351.81 405.133 cv
2350.24 403.32 2348.95 401.232 2347.97 398.871 cv
2346.98 396.509 2346.38 393.845 2346.15 390.88 cv
2345.92 387.914 2346.25 384.635 2347.16 381.048 cv
2348.07 377.389 2349.35 374.27 2350.98 371.695 cv
2352.6 369.128 2354.46 367.018 2356.53 365.373 cv
2358.61 363.731 2360.86 362.489 2363.3 361.645 cv
2365.74 360.802 2368.22 360.267 2370.73 360.044 cv
2373.25 359.82 2375.76 359.845 2378.24 360.118 cv
2380.73 360.396 2383.11 360.811 2385.3 361.405 cv
2387.24 361.933 2389.18 362.681 2391.09 363.542 cv
2392.71 364.278 2394.42 365.205 2396.2 366.349 cv
2397.97 367.49 2399.58 368.866 2401.01 370.48 cv
2402.75 364.398 2404.5 358.322 2406.25 352.242 cv
2399.31 351.116 2395.84 350.564 2388.9 349.478 cv
2389.66 345.844 2390.05 344.028 2390.81 340.397 cv
2403.19 342.487 2415.56 344.659 2427.91 346.901 cv
2420.21 369.674 2412.52 392.455 2404.86 415.243 cv
2409.53 416.523 2411.87 417.168 2416.54 418.46 cv
2415.41 422.533 2414.84 424.569 2413.71 428.64 cv
cp
f
2469.71 404.68 mo
2470.04 403.018 2470.15 401.515 2470.04 400.17 cv
2469.92 398.83 2469.64 397.622 2469.19 396.555 cv
2468.75 395.485 2468.18 394.543 2467.5 393.728 cv
2466.82 392.91 2466.1 392.205 2465.34 391.609 cv
2463.55 390.228 2461.3 389.067 2458.84 388.544 cv
2456.51 388.049 2454.26 388.226 2452.49 388.82 cv
2450.72 389.415 2449.22 390.347 2447.98 391.621 cv
2446.74 392.891 2445.71 394.404 2444.9 396.152 cv
2444.1 397.902 2443.42 399.727 2442.88 401.628 cv
2451.83 402.616 2460.76 403.634 2469.71 404.68 cv
cp
2485.08 427.367 mo
2482.7 430.366 2479.93 432.749 2476.79 434.528 cv
2473.64 436.305 2470.32 437.565 2466.82 438.306 cv
2463.31 439.047 2459.77 439.321 2456.17 439.129 cv
2452.56 438.934 2449.13 438.366 2445.87 437.422 cv
2441.33 436.108 2437.48 434.255 2434.32 431.862 cv
2431.16 429.469 2428.67 426.746 2426.83 423.691 cv
2425 420.64 2423.82 417.331 2423.3 413.771 cv
2422.77 410.21 2422.81 406.483 2423.67 402.992 cv
2424.98 397.682 2427.42 393.174 2430.39 389.844 cv
2433.37 386.514 2436.82 384.098 2440.78 382.601 cv
2444.73 381.103 2449.05 380.417 2453.75 380.547 cv
2458.44 380.679 2463.26 381.458 2468.17 382.892 cv
2469.97 383.416 2471.81 384.085 2473.67 384.893 cv
2475.53 385.699 2477.29 386.687 2478.95 387.852 cv
2480.61 389.014 2482.11 390.391 2483.46 391.973 cv
2484.81 393.556 2485.91 395.401 2486.75 397.509 cv
2487.6 399.616 2488.12 401.999 2488.34 404.653 cv
2488.56 407.307 2488.36 410.307 2487.75 413.648 cv
2472.32 411.779 2456.88 410.007 2441.43 408.333 cv
2441.04 410.801 2440.88 413.279 2440.97 415.768 cv
2441.05 418.254 2441.46 420.553 2442.21 422.653 cv
2442.96 424.754 2444.1 426.578 2445.64 428.127 cv
2447.18 429.671 2449.3 430.91 2451.76 431.443 cv
2454.44 432.02 2457.24 431.84 2459.71 431.181 cv
2460.76 430.889 2461.81 430.46 2462.87 429.889 cv
2463.93 429.323 2464.93 428.559 2465.87 427.597 cv
2466.81 426.64 2467.64 425.447 2468.38 424.013 cv
2469.11 422.582 2469.68 420.858 2470.08 418.842 cv
2476.09 422.234 2479.09 423.941 2485.08 427.367 cv
cp
f
2524.8 448.055 mo
2523.01 452.374 2522.11 454.532 2520.33 458.85 cv
2508.24 454.928 2496.13 451.078 2483.99 447.309 cv
2485.13 443.555 2485.7 441.675 2486.84 437.92 cv
2491.3 439.093 2493.52 439.68 2497.98 440.872 cv
2501.05 429.992 2504.12 419.112 2507.18 408.233 cv
2502.56 406.95 2500.25 406.312 2495.62 405.047 cv
2496.76 401.292 2497.33 399.415 2498.47 395.658 cv
2508.95 397.485 2519.43 399.352 2529.89 401.287 cv
2528.36 405.121 2527.6 407.037 2526.06 410.872 cv
2529.29 409.738 2532.36 409.038 2535.27 408.772 cv
2538.17 408.501 2540.76 408.391 2542.98 408.477 cv
2545.57 408.575 2548.15 408.825 2550.28 409.4 cv
2553.71 410.328 2556.71 411.973 2558.91 413.687 cv
2561.1 415.399 2562.71 417.343 2563.73 419.508 cv
2564.74 421.675 2565.22 424.034 2565.17 426.59 cv
2565.13 429.148 2564.64 431.838 2563.7 434.672 cv
2563.31 435.871 2562.94 436.921 2562.61 437.829 cv
2562.27 438.74 2561.91 439.618 2561.54 440.457 cv
2561.16 441.299 2560.76 442.171 2560.33 443.068 cv
2559.89 443.967 2559.38 445.031 2558.77 446.273 cv
2558.17 447.513 2557.46 448.975 2556.66 450.655 cv
2555.85 452.339 2554.9 454.362 2553.81 456.729 cv
2558.41 457.963 2560.71 458.584 2565.3 459.838 cv
2563.06 464.542 2561.94 466.899 2559.7 471.604 cv
2550.4 468.143 2541.1 464.712 2531.79 461.315 cv
2533.49 457.448 2534.97 454.127 2536.21 451.356 cv
2537.45 448.584 2538.52 446.223 2539.42 444.267 cv
2540.33 442.312 2541.07 440.663 2541.66 439.323 cv
2542.25 437.983 2542.77 436.808 2543.21 435.801 cv
2543.65 434.789 2544.03 433.864 2544.34 433.022 cv
2544.65 432.181 2544.96 431.26 2545.28 430.268 cv
2545.78 428.728 2546.12 427.245 2546.3 425.813 cv
2546.49 424.382 2546.43 423.051 2546.14 421.822 cv
2545.84 420.599 2545.28 419.52 2544.45 418.595 cv
2543.62 417.669 2542.38 416.768 2540.99 416.384 cv
2539.72 416.034 2537.92 416.043 2536.08 416.18 cv
2534.48 416.3 2532.52 416.626 2530.26 417.137 cv
2527.99 417.645 2525.39 418.571 2522.46 419.911 cv
2519.19 428.225 2515.92 436.539 2512.66 444.856 cv
2517.52 446.125 2519.95 446.765 2524.8 448.055 cv
cp
f
2594.32 460.056 mo
2593.69 461.893 2593.42 463.585 2593.5 465.132 cv
2593.58 466.678 2593.94 468.066 2594.58 469.291 cv
2595.23 470.519 2596.11 471.574 2597.25 472.458 cv
2598.38 473.341 2599.69 474.038 2601.16 474.551 cv
2602.64 475.062 2604.27 475.376 2606.04 475.498 cv
2607.8 475.62 2609.64 475.515 2611.53 475.184 cv
2613.42 474.856 2615.35 474.295 2617.33 473.506 cv
2619.31 472.717 2621.25 471.688 2623.17 470.418 cv
2623.09 471.766 2622.98 473.242 2622.86 474.827 cv
2622.76 476.196 2622.65 477.793 2622.51 479.588 cv
2622.37 481.389 2622.23 483.314 2622.1 485.361 cv
2619.46 486.141 2616.94 486.665 2614.57 486.932 cv
2612.19 487.2 2609.94 487.289 2607.83 487.198 cv
2605.72 487.104 2603.75 486.867 2601.92 486.478 cv
2600.09 486.092 2598.43 485.637 2596.92 485.114 cv
2593 483.757 2589.84 482.118 2587.47 480.185 cv
2585.09 478.253 2583.29 476.103 2582.08 473.736 cv
2580.86 471.372 2580.15 468.836 2579.94 466.129 cv
2579.74 463.424 2579.85 460.617 2580.27 457.712 cv
2580.7 454.806 2581.37 451.842 2582.26 448.824 cv
2583.16 445.808 2584.1 442.838 2585.08 439.908 cv
2585.34 439.16 2585.64 438.314 2586 437.374 cv
2586.35 436.429 2586.74 435.444 2587.17 434.411 cv
2582.01 432.836 2579.43 432.054 2574.27 430.498 cv
2576.11 426.367 2577.04 424.298 2578.89 420.162 cv
2584.21 421.502 2586.88 422.177 2592.2 423.538 cv
2593.54 420.764 2594.87 418.067 2596.22 415.451 cv
2597.56 412.831 2598.76 410.46 2599.84 408.367 cv
2601.09 405.917 2602.31 403.589 2603.45 401.395 cv
2609.15 403.778 2614.84 406.176 2620.53 408.594 cv
2619.47 410.28 2618.35 412.157 2617.16 414.161 cv
2616.14 415.89 2614.94 417.928 2613.6 420.258 cv
2612.25 422.588 2610.83 425.13 2609.33 427.882 cv
2617.29 429.949 2625.24 432.044 2633.19 434.178 cv
2631.21 439.378 2630.23 441.98 2628.25 447.182 cv
2619.95 444.528 2611.64 441.907 2603.31 439.323 cv
2601.48 442.948 2599.79 446.52 2598.25 450.037 cv
2596.71 453.554 2595.4 456.894 2594.32 460.056 cv
cp
f
2700.23 461.564 mo
2696.32 466.613 2692.42 471.669 2688.53 476.735 cv
2687.13 475.208 2685.53 473.633 2683.73 472 cv
2681.92 470.368 2680.02 468.814 2678.01 467.345 cv
2676.01 465.87 2673.95 464.525 2671.85 463.31 cv
2669.75 462.096 2667.7 461.123 2665.72 460.399 cv
2662.96 459.39 2660.56 458.965 2658.54 459.128 cv
2656.52 459.291 2655.23 460.135 2654.68 461.655 cv
2654.32 462.636 2654.41 463.612 2654.94 464.585 cv
2655.46 465.561 2656.4 466.637 2657.75 467.819 cv
2659.1 468.996 2660.87 470.31 2663.03 471.753 cv
2665.2 473.201 2667.74 474.901 2670.63 476.795 cv
2673.23 478.493 2675.66 480.197 2677.86 481.921 cv
2680.06 483.64 2681.84 485.453 2683.21 487.349 cv
2684.59 489.243 2685.47 491.266 2685.86 493.41 cv
2686.25 495.555 2685.97 497.888 2685.02 500.41 cv
2684 503.098 2682.56 505.145 2680.69 506.555 cv
2678.83 507.962 2676.63 508.854 2674.11 509.23 cv
2671.58 509.607 2668.81 509.518 2665.78 508.964 cv
2662.75 508.415 2659.57 507.524 2656.22 506.289 cv
2652.14 504.786 2648.75 503.201 2646.06 501.532 cv
2643.37 499.864 2641.2 498.32 2639.56 496.908 cv
2637.92 495.491 2636.71 494.301 2635.93 493.333 cv
2635.15 492.364 2634.64 491.839 2634.39 491.753 cv
2632.79 494.886 2631.99 496.457 2630.39 499.592 cv
2626.5 496.543 2624.55 495.023 2620.64 491.99 cv
2624.58 487.193 2628.54 482.403 2632.51 477.62 cv
2633.35 478.687 2634.42 479.869 2635.7 481.168 cv
2636.98 482.465 2638.36 483.8 2639.84 485.179 cv
2641.33 486.553 2642.9 487.934 2644.56 489.32 cv
2646.22 490.7 2647.89 491.995 2649.55 493.196 cv
2651.21 494.393 2652.83 495.455 2654.4 496.371 cv
2655.96 497.294 2657.41 497.998 2658.74 498.487 cv
2659.37 498.718 2660.08 498.924 2660.89 499.106 cv
2661.7 499.291 2662.5 499.365 2663.28 499.331 cv
2664.07 499.298 2664.79 499.103 2665.43 498.749 cv
2666.08 498.394 2666.57 497.78 2666.9 496.905 cv
2667.3 495.827 2667.24 494.74 2666.72 493.654 cv
2666.22 492.561 2665.49 491.516 2664.54 490.516 cv
2663.6 489.516 2662.54 488.579 2661.36 487.708 cv
2660.19 486.836 2659.13 486.033 2658.19 485.366 cv
2656.7 484.302 2655 483.115 2653.17 481.78 cv
2651.35 480.446 2649.53 479.001 2647.7 477.443 cv
2645.88 475.884 2644.16 474.242 2642.55 472.521 cv
2640.95 470.797 2639.6 468.996 2638.52 467.122 cv
2637.44 465.247 2636.72 463.329 2636.36 461.373 cv
2636 459.413 2636.18 457.419 2636.91 455.386 cv
2637.64 453.324 2638.85 451.55 2640.53 450.071 cv
2642.22 448.594 2644.3 447.513 2646.77 446.832 cv
2649.24 446.151 2652.07 445.916 2655.27 446.136 cv
2658.46 446.352 2661.91 447.134 2665.61 448.481 cv
2669.09 449.75 2672.16 451.241 2674.82 452.947 cv
2677.48 454.652 2679.73 456.306 2681.57 457.853 cv
2683.7 459.649 2685.57 461.49 2687.13 463.377 cv
2688.23 460.152 2688.79 458.539 2689.9 455.319 cv
2694.04 457.81 2696.11 459.059 2700.23 461.564 cv
cp
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.1.1
%%For: (awesta) ()
%%Title: (2003.i507.009.S.m009.c12.HIV AIDS education flat.eps)
%%CreationDate: 4/30/2020 1:27 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9?5de<Q`Y&"#hZ]L7ON:mEGK!@$R0nB>X(F!Yr%c61k1H?PKhu;24/]l^_M`Jnqp@uiL#"l"(Wb_(gdaHQeHdJeC>8Q&]
%^XmP-Z>@VS;mN3hCs,`%ZLgB]=B^#O5B;+-Q;ZR=//ui.4)aAP7INcj?8`7^?I\POVCQo'e?0:MDQA9>D-,P"YLma"]=mlBnYajY
%m5l-V`6#]:)iaPu\a>,M]qT]XHhqHehJg[*DU[k5N4d(ooorg4h4qHX"8pG`o5q0-TOYIgV[68YBYII$J,^]T-@tcc/h&RSf._'Z
%;Y_,#;&&lGQ=NA+/Uom'0C$6"fBLoAXj7O):LVQ\iuYfQ7m*H,eoNVFZV1mN-26142#:ZJ\R@#b[JqA)/fs*a3e6kt/L)Y5b;9h"
%+7Y\6"T\Rp<GY1(=n4NLY2n*&-H8&./7ArU1bb_qVUK%oHU1C8!6?ok''MJuS"5;_GBo6L;p1Z-9J`oT]ScY^5lB5IX8!E6bo;h3
%>Lb#EYFG0=U!js<Q;_?T02"tLG[X,UmZ4sVf6ZkQldX^m\+>;ks1&%Mg0mu:Ct]`^,g%l!n*/5miHAS;l?u!r_(])0c[NLg2JDWu
%?HN_4W?JWlropgMEOls(T1HTM(gqR=F-blOHT>b?S=_D><V?VWkd[aYp)BUlWhRUYcF.ki*(A2qR\]+g<UmOp0knam);8<0?Z^lP
%r6A#QgE@0t6+;;?Dlm5%U!L.VO03]=p"GM/9dOG/+2!QF(&HPUs7KtsC[_#RQ9Te#3A'ZS(duO8+(ON*<it"l@P<'&F.9,C7820D
%?[,A%J+,8Z@aOYr_LU+%D0ho46H=TTnPVKU:(J9GHFV^H%m#'>oCef+//N'g1H5'JXnLLTg>,s#i9VE]nK><bbaU]Y3`YHtrXRZC
%SU0J8KFV^e>rO.&d_#FTs5,Br'D%BK)0R-q409TBUYQ6!/D=\"nZ^uZS8O?/"<CP.5NmqkGT(a^L2R#sVETi=3eS::L"jQB+4DA)
%.*GGPH7RAH_jkWEYBKXI)ch$NTm4l2l1(%nY?o5\oq;=Za+mFiP156@Wq?EuLd-Z>#4;XG992N>dAUDoS^(f[RbR6?HC)1+G.S@Y
%T(4u\.K#,HiQ[>)ke#[%5te:,3NC[R4s1.ln]hi0(;,nj&j;b];1-=KeES<R7^1n)2TL;-7.Z]?=XIT?rn0DL2sS(gd!HUM8=WV^
%2Vd>b]tTt-2B>kEEbRLj4ppf?JZjd(h`V=TmC_:"M]m:,W;#*kDml,UR&RXV9;gf*LA[@X__1U\dVE:)[CSCrUWJ[DGl20?"B6JO
%b$+:]DOpcQ[pODP('sqHW`NV*38L2?*c9u(s)'_uoPg',d&ioLqCW)['l$k7G+ElIl=IY+laeZcU#aeu8=]konY?*tbGL'<Z6V"b
%aK6I]VlbkjUE<6@i3g.<lPGod&a`as;`(6ep^L<%H9$K*C]2EbX7=p"e7.-Jq1K`faX]Gc6=[>\_tkRZDebPk^!f<CF6T4;PF#@S
%AQTZch:,o>:uBS-C\TpG9,L*Si?eCBr%_uXdj>b*KC0V&O0,ED)&)#3M9#r`^R6[u9D[_GS2iaAgi^@BB]WB11tMZ'(8ji4=_lAH
%W:lc(DAJo_DL>Au!X2>*<nH^J)HjGQhsdM/dqU!!lX\:9?;cj=+]+D7X!4Z%$CamCON4J2ZJK_"-4,[Y`5h>aNGK3NlUd"NGMK>g
%^.O-N))f/WRQGBt\lErU38#0#Mc&f$=;J#Q(CBcc-ug)0LN;GQ_EM(_]s8(5nsa7-p@%&KXHhT4gr@3rS&48<>e+Qjjg9^l[rCH+
%5pi1I*O=cG0AH0Vr&Aa8![TYfb@QbS$X[f1b:S+PKeKq)jVGSc*;ad1I/.fNQ89c"*-jR!mLQdHI-K/7J'Gs;eZ(A0hG1LJbdY?N
%_1:tHCF/^FSPr<?fk'.)2erG5E+'7Ks&ihc8lP\T0#:7c!P?XMf;h!8mEqu(DS%n2o@1(%O4rL?:0LTB+mnmmT%b>S8[IVAB;)L[
%3k"bR`d.N5pLbh`4@:G`DpUXkWpXlWBk3&*7[r9LFZ!Rd,>5;a[oiX@*:8eUXF["segT6(`7f^K$maII$qBd3/BY=.h@CAbBK4gW
%]@H4/XXpMF^2d`LPHli\kO20Xj^)_R_cLI"i?5%Vr\k]bs2feUs4j:9-tcc([(F,"VH*Ot+8C'5(l.L)X'`saiEH&*dl@&'[GpH&
%R5B6PmRSJ,-=,7,s76t21KZH*V]=/4!AYL,=)*J\5bjem/>l_@?T-_hQ:&HUP%GSRp=6)NN,4N%dp,+%LU<%eT.a["O^PnXd_(T:
%Sm%Et'l])8N&K53o2V*9\=+Z(3/^Q$Fe[F<OaB$tU&/a%_?D9!db;eq]]X?#Id8O#=[%`pT@DuDF-PeXYIUo8CptA<?.]$NL=;m]
%:LqVd;,\RUc*2ruc=<%/)6S++SQ^H'L"6*U2mo?e3i_;d=j1?h;R/'Z@:n<m/GjDr6%5S0DnFc76tO1C,'s[QOG+O@H8.;g_J>b2
%QY!]EZOgHlZ4g0_)&YcB1W(-3^GpddC3O2h(jq(E@-@)iHj4(r7PDbo86VUqMt*2\_:1!&/-c*T.%(%bh>XD0WEE(\1L?_^4ue$k
%[aZjKIO=3ErhPW,HSY8,(`CoObBbu/B!3I#AN7[X?953SgGj?qr&KfhV](CnDJFTR$qF%D?XNAh)qHpDHEYe:W\-L8ZL;mI;WT_U
%l7TslmVI,/_0;;fM-oAcYEKdH^Lf4[r.\-%gS`nAa:Q4V*M_R0Q[-58)(.TW2GQe:[sZA>%s&KoIq5:YWTX*diLANZq@&;XeQb=U
%gif8D?g>;\BOja>CYYR?0hV=u_kuij-8+oDh:,?p$qmR2WD4[Ah:+3M`a@$;$qha@d!*&=Kna8d;bQDelp=BPP>eO4nI<>DM]+Le
%WE!NV]'%mm1Q)OsAiI,X<kFW.CT>oNF"epG,dKG(`](<,$l2W`H2c_TGo;fI(i=b41,"8YgWng,[Vp$mNI&cj10gEM3fPW'hj\%7
%_koBX=ZEO01D@[-r2pp]6".3Ia@*#Q<@3S\#FQuCG%=Xj(Q1tOWJ]$IoCqsa<5b69>a.pf@-Ub9+r=f[E`'./e?#U?):(a>&'gfF
%>a.q+1&\X2=nZCkF&=^Fq28LB74u_,(M/_eP+I1ZT=HA<AGajq%J,gBP%?AS@Sne!;%g=T<90caU9U]\qK^4Pag.::iVHo,8i)Ac
%24=1/)VfJ!HTBj"o.jm%/TtUsMGqaE7f:h?guJn+Wd\Abn$L"j@8;;lXD8UE=-aEaU=.AI(G,G8"j1a_Y[4NUbX/I<8$3^;\X!7"
%$b<^-CC@[2'67rf99=k<2IGU8MbRJJ[=qTWG>#>tYr5\'g-VekUtWReWeF6%:2f'<HeM;Z!<rMj\aiE7!%upfqJ9[pfI-h/(2U?c
%UBo-BCVGOF=T@,m*&a=ZVn`"Mi6C$dQZ@D,]M!hRUJ.YRTsca,s13*S4gMf?X;,Z9F7P&0j^ap28ic`lK79`uDU=$k*+dpN;3;bW
%b?>Z]C)0fa(=c^10!!j/\``Y:k\gr$BX$MXrDFu>$FRRHV+jk/ZX:,;f0RZJaig1BMD*Fj)Z:1O_]'#rcHE[(cSBo^HtJQ:ZRt@t
%R)XVCC3@hI>VaaZZu^Z'h<_LqAF1?F147Z%B"7lp-Xt]<pj\KZT]kjr9M0jEdBBTJ.5^"S5bf9>:qQE"A^g$ZTrXTEBGj-_=/.Z-
%Z8qKWLpNM4cLY$"n!]R6e5p5'_E+I;R3Sf.h:rpSaQ>#mEA^6YEY]00Xsl/=-5gK:dr07*48\3U^UQ\hir""(BR-c+IsHfh!j"p3
%)0^FIk'I1WgZ$G$["G\EoDS?_>+GC@c?tC/2]ZPFMm%M%5lK]dGB)b,@Ps'"h[0;4ilq/3nKKa0J3iq"bbX:#eXe#1Vjtu.Sb['o
%oCG86YG9;Ms(>Zce;%-]+807,S4Mt8>1HEXd:iP;H"i97`FYY[XB&3)2T+h>021oEGr/]@\&^pRA`9Z-)]A=s[&J\gMNA-BhRMd\
%DJOk=K"F<DAGr79nY=rY\G_Di>MEh8S^tm2JjnniAj^3hO8:IqB8b-i,'5^qY`us2=iAW%n[%,IT<&H6DU*asbs?j/a6Y"Wk-quP
%.Pih2a)011)5DbV[Po2'.Fm*&Y<Z:HBPpF6p^%[2Cs=<[04ICL*Acu'gaZGHh>+W65gJ(G#:2-]?@Q=c&XGu%Ec\s"p''m^h'#/`
%=pl=aZ3\+uI,MsOZ\ZDT(PUiCb9HG]#eV\i08mWh,4MlD]IX+;MnmMc6[\KEK"M@3/HSJpS&hktnB>tWC$l=&>V"m@#U%AY<p6:1
%`3`dl?5/m=.J"h&k"L-,M;S*]Kc;dqqhIppA8H?'"`sBrcpa(RBj&?gXiSH1b27nnS74+=G3,)sREUUrS>Q]ffCUO/b&L$ao"RmZ
%cJj-H2<;`NqU2,7dS5kg^S^kUnYK0"s7NEW]ebS0.7<d-`NB%W[l8foXo+Yf+Z"V=4i<%!CSPER,]2f7Bd^$^kE,E5H-bl1P.GN_
%,MUP'CR0\"140\#)r33o+7MJm)h!6d6D=#8$r#F$bj3<T(EV;cH"aK5/PW+h9/g);:se^/'Uu18=jCCI>,I68YMG2++TF4cGod;/
%YKD.q!mG+XrLERMA8t$:T%Q)XZ%uo6J=!^#@n`^"Cb=W`e&!8L*QQ5fB8\ahP\\uA*+N0kp`ba'Lh"Y"*95r:/,,T.fnf6Kc@"Jk
%WdUf8Z<be>HS+*DLl\5+Rn5<WB;dS+k4IGLfDRmP>Lb:%9s":fXY!2"R+@pU5^W>P;n\-/j-s4OobXN5h97&uK\^7[+_\9Eqt5D\
%<,ac/]Ks/nH6X*279WLY:<gE'T;t:GM`N_j`Q4cKbmbO-kM:;;$g2K8S!3H%MEA.EE@6\#3r9))UjRp#;YAdI>`na)X^Y-ckVn6%
%glk%uCsX:_R*D;^gf6S\A6)L<(Uke'o(tCiXobH*1g^PrR?k0Mp^5g4W<crD<T*,?$37DsoTb+5V`a&kb7`r!iN#2b/=X?5"DN>2
%'/F*IbhR1>-u]cV^NM1--LK990/m1N>W*@$G]Pg]/IQK7iQWse\U!o21)QMhDf.V%0]1aB>c*9f\@+VsmTbL3/_mmj41B1l(@Ktp
%SQiUFF6h-9oB"8/>0b!URkApQD7a)ckW2k2ajg3.X7@6TF4h<`hu6jb#@WA11!IrK5(6j)L+-HSYJ,,K]*u-9Y:HlVO#](V51ap'
%IW9e[)r.+^&RN5L5fV%OUDm`AMbaecT/E/(eOE;ag)[(pn,HY='\_sIIl=T#WP*I67<]WaW&ulA+QIc[KoO4t]U@iT\Vk?;V6#A"
%E.dNWc`.XQrPskC>]R/1?a=OW^R(91GG7%[Si]sH\E[V2"<u),%aTX4N6L2TS/K_?rQD%d*p1`Fft=DV'5;knX8;-;dm`a1%XG"h
%l8X,7]X[_E;nQleM&+jJ?JcXrV8nD8*If</:7=(X^md.k'sV=-K48p$;f<.$SH9!IDe_F)L.YKaKDs#<%M<H&_ramsc7Do9G.P?W
%4"%m->k-n)_O=\2F2-N1\^&60B?$ZM=:E$c?Gg;E^2d`LbFi);g$\doBt)l5/TCL-//q"cRqQ4DrVLE*@ulCXg*iE%&H4Q%EPF2b
%(>7;t?oR5?6"+#X.Ld'J#rK4B_K*6\rajR'</uC(UfmsYqeB*"aQCQ&c1U[l=P9YI&"WPfF+4r/F8#3\ks%tg,0ra?pdA4RS*i.E
%fnc\_Er>n,GG-"SQqO;^3G)>>$b\O]DV.97:5qgD\*:n8N$'c;2E7g.cgT7QZa1agFVZc)&T_'lB:_c%cK-G1k3I*Q'C4DsU:Iob
%9JlF*]]i7:)%(!"KFF2gP4qc+DZOD>CAHI4Pit&r"gKfT12rT:mYsfKq_(Crc$FPmG'AEUY>)KnR-u4@o3t,crel4aa[7jk,@bj;
%MIcY!!6pKSk?sm"aKB,oBs1Gej!M<dL5SaL?#JIU%(3&N!/S1<rD2RV-La6^CPrV5s,ie>j^ZUmBhi#rR:]&LA@V->0W5e6keEk"
%GNWkQ>jpNWr+"H(\F5r!g"i'P:+Ed_a"Y0a2d+%ZOk)HB:!/)hok5\ka?1&;hTSR%GpfrS"e"1'RE>%RbdMFH3J:ZX>R<UY3j%7a
%Q7j[\+jJ>=ki6u$g.YV>iXFoBfq#Hha_2:_pg7hFVn<`_NJ3/Z:H<BV@ek@K/:Z+WY5&[*V8AfTSaNk"_8hWSV?:r:ZJ@R;?F\e6
%WX%F)0C#\/P<](lg#6S0G]q^Vd*Dgn6k2qi:hu]6\aAgXGF@30>0_iVboLnA1ri/uF5go]Bf,)k6EYW/:YP3U)Z:XT02ipq4il`u
%$.0rke+jGG)_jRY@+5T,E9`OdnGaekrsequlfW2EB8(7'(_sl6`/cQTmCuj&(RT7=,LM-2@dPt6c:]>pk1Sd@ZdWlG7T/XS5Q!>c
%r:A27jG89G9hCXE,:DR^h3MUe^M&LuC,nC3C]f`/c'B(CY:Q0_n<\>&FQ7"/^&*Z$T$qW8#kf(.-b#`FpfYbirhP<>?kF<f7MFi6
%EKG1-So#Su[+*2W4*2BY^[I'!*M2e9F@hV"#1GI]?Ap<^$Kc5!ZCuP"?2f(:n+ZZa%YGG_Y_[N'!C!7hrqtf\RYJH9UW87pkB?[a
%2L]sH&%@<-&#OQa?*;QLOe#3U7l:$s6q)-K+!1GuT!]O$lMlS"8IRXp"E2_bG'2.WkG.,1#q\fJCH_`OLHd$;OT6QTRIYU0,,3).
%.f*Lpo8?'UV(n92a(kOKe)bqYhWYQKgY8*om\qo^9QZnZg%;"gc9/+1j9'&2;PRO2E[MWhigKR9=/KGXBD!%S=uSGjQ.ckq*4u09
%]UB6:%6+<P7.K.ZAZSb:FIEXRFi91nECQ7b^2ZKL^/.r3O^0N2m;rn%ela$cqX*DZLqhh>U?arI"rhY4nR6T5rEo'=n`3rTs7Ld%
%Mj8YPIn]rlc[[;02<r`f&`\`u96j/cF)+:KdhoFXCnD'sR=ma>I.I_F/PXPq[Ui6>@A^45o1Xnr&&.l4XidXikB2L6i(4<HQoW@=
%pc12>1DD&e=m"e9S!\g\VD0A),8%<=DNA#J=h@Jl7`@OZ+*?fbP9["gRH.">@p-%W'L?7.lLcfoT(Cr!*kpE0ZuWe5F=%eUT]YG1
%L-)hdPVU,#Vh,#HPfJmip7:W*gF!pJOe1E9.FU&90?mF+6(02ZqD``g38H-0r<:%^02)ab9NYl,]h_#-j1[Gf?"NY^WEA9QSML3u
%$a2Lm\(]uOX`a2pMDM/h_6@A.)-L7Y7It@UeVrf%2kM#e4]srHDk6BrUn<Mn[6+>5Zi2%1YF2DIO^C<fo4Y^`VrmVA?0f&HAF0>B
%13[KinPCR(%(0]/mQ2]+NV8dh3-%*57aJii_D4D>hJTi@mA/Q`',iq.n-G'Fkf5C>_bXjg>BsXQQ?0kS(X_!1PH-[FMh,s.jpp.:
%6-#<'EJ^Vd^@>4heFQus^Y<M8iN!DFE$m_BXYu]?OEO?rG85lnNI#M6/HXMh[/33Q(A;d&6,/sPEdB"llMkj6`)YHrF&'2oeonX4
%>W&=pF@B-0Oc=BRmOWrU0fJ(5hmm"*f5<QrQWgtJIPJS0<NBE=C(L0OMf(VlAZ2`%lSoooS*SUoK?!Bjdnj>C8_C\MNp8K:*j"&A
%F]BNs,ahtX"+m/tGc20$2@Z?p,$KcX:2Ci?Y&(&&)Dq00[-4lG35+@n[YJgOfQDOYpP55"EW>IiG&$]aF&m5/q`g:HO3;H_`C@P)
%4)*jbhF*NRKN@kA9t-1,`T,uU/<KqRL2!*64@CF*H?QT$a_a,i/!*0"Q4)GLo&Q+Ij1`u<U!_ePf0)(%f*)*hHD.e]1+dn_n`HMY
%KV^Rr[2^ZoFDRbtc$ot^*.u?-(:?4gP:N'n(2&[Nais#4?FT3LVf.'pe_>DNf)D_:Nn\NjIA\"(:?Z[\6>j&Gp0-"dJBZ5]qhODL
%)K+I&i9\,45SB5u!<O6!#.uR`X`L1WcNK9p#_=!X5L<2oh"ot23;:"N4&-Hij'Ts"OR>Nj:eZIPGt[\JauVo[Rd(D1?0aB$(NS,R
%9CiD;Y4\7_cX&F,fk[Jbg@arR`<gi!D2][A(cDu,Rn-cReW"lHbjprCkp$IFif!Ah+g\rX:M6[+dh`*)Z`a+uP1[R4peO=HC!`Oi
%@+brqflf$*$3KT/FNlC"!f<lW/ZHPfTmti@GI6+Oj*(;V;Bu&Xce;pj[9NUfSJ44)]Q6tsMc5mRiNjbCneaI5:B+tSD);m6BA-"M
%(akh3UDP$Mb&4ghs5Ef(U>_u,ak/#'m/'PUd]S=A_f;aI?TC[^8Q-GO\VZH9mRCs7pqs>^&8i%[:.a'3gd"i<77rH>[!l+Y"We&q
%_L8n;)4:02p=td'QM7&EiZ@'4K0d7>B(k:e!_ZD5SHlL#_?d6OOgOU:)64SG7ZpCgDfg8teK8\::Gs(ND[r,.9A$#uG<3HLgA^&S
%4%MRU.8"(NR:E_rbiocrpCPm./+r[WHLN7p$`[n@_3*=-(+2X<^sK&Uj#3M37GPo0_MljYS6!Cr,Iboh6(2h?9YQuE"4s[Z*eP2d
%F\'a.+Z'gQm#l:.$=@r=ms`>N*o3.<hFM-.jBHlY#&8NCE+"mk.ddhV0nC1_?#.qoDQ_U[[]b8ofs5GWja9$lmAdBl*]+d!M3D%o
%mnQY7p>77t,hNf7@("gm\[<-'aK<-lpS6&W?e8>7%XlqT32sF%Hb]JuhlYE6bn/'GNYn4jOs@/W!rn"2""lX5U&_21]#e@fiZ?eO
%.XIV/']H\mgB.t+a,u@D7Q!7Fin)[I"Go$':9;,@m(49NhalLS34Hn<gs4mK=N&9hGJDZLEdt7K@\Mi<C._nhFIe0+BX@fB`o&T)
%GVUJ<m6[2)_N]a4j"NKMMMI!m)ht0?^9u;XITW79`#@6;n[?tkUChL&;d4C$o=I/ph&SOUnqa0VX*Wrfeo<R@*H.\$BI(YCd1@*d
%67\JRTtgG[f&b6_W9/C&Cp/!<c@lDq,Xb/*<M[kP3-;]h.,cMMg$:Tf2:35d2F(l#^M*&C$\^pf[-cA3Ua6q]m'Gn$6Q>Qm,3s:%
%16"aaSZ^R^bd_?INU&)B>L0@-YFjfk_tcH]-KjcY/L.5iZC.&d;(Xd8ODg5HoNRCC<&F!OI4;@h<aI](\*f"5@4?BVYf=-gfcn-K
%+Yk9n;9PO/ba#c8V7Ru9%I^c(Cqg6M`\BHaeRctW+4XNKX/.bS]6Lpj+`K5tb>&U127HZ%BVe.@;jm[0bA%pL-b!n:)'_dAVfu21
%2kA5^.2C["jH:J<Huiu;NG;@.[qOOn#hY2B#FYjSOG%KDC0]e:/PduAfe@,X:qYmMWPZi%pHLjhO(cOJ2oV7W%XaB\:Ougs5LCI[
%kXIDhRS?(d'-$q<YgQjce#<6c,HjM1C9':ZQDm`rhM>8M,?FUB8'7A2kjTLN><qAGH'NSXE'_LdAMi_h9cZmBge>fX&7^Z59,-9e
%pP1;a=7fHXLUJK!@0ab^;>O8<i&XSI<:.+UPM3fcW0<gFe?0b%i&>X\\7'#F[l81,LW^ep(fiI2>5,r#Raa<uC=9L&RQ$f*<A-7o
%%'>:@aj<"0P;GHaDtW_0`WYNR)KiXSm:;/-hQAds$[>QDgT;MKGNc'(g*46.=WJ:8\4uGR>OI1IIsHDl\09qCoHqor)NsB":$A]&
%=#nLd0/-\W;8_7e6ftm?%U3W.p>J0DBRW<rV"PU?Au<]L^H;7)\7TuK*Ga6n`oBRp5,.:1U?RJgSpCh@rb6^@CaalH':P*$)a>eR
%1etoA9P`>L<6%QMDUBE4rS4,*a;.j5]f<h0+a:/W6"=l?o0KE<N`\[ocYMtq4o7WOVpu,P&B6PrkX&7<@4Q*'fI#4XQ7F'D*YhX9
%pM"pAp`Lq7L1[S<l\Zs%T,rr3fpZI/Krr-I_ibqSq5UpD;&f6T6Bfs^c`r5WY[tFrl#t*(KgdF!cSX4?U`(F`70Wc6BqHk,,M`lV
%DQ-q'-tg,P?1?_[HeG+.O;B!q7u"l('R^gC408JL2@eR2\NB.N%u%2US8#Iue6q>!S6!lBJB'A\P,/(]'a/1W?1A].4=&c=Q-`05
%jr)02Gq6d7P9LTQUf),:20s\6G_9$][MsRqWuUQqVf.2.O)9'1<`j!l]ncoQO'@/k['j97B3I8Imd4/'M.TuPWY8%Zdt;uh+)S`?
%I"0%Z\+3e;GHeZle_P(KY$\PR4YP\r=h\7E48I`=j7T`!j3IMPleNrcg=,`;Vu-?qh*KRBmjS(aP,rAA,cOlA<k;CqmVZlhaZnS7
%>j:mhH7tL?)J3c[Ei\N8HJ[PnGkS/C[Ag^W`VSUBeP\S\rus0uV=pJb1eZr,Fn<Lg^\$pb[e=-PV9j$[HA0&mroKn&`goE+UtpI2
%rN1)>/IbW>Q_'hGp3,&pccnDP5(4uO'_?64NuDoFrcr;NWr.-X]pEY$.]k62b0.E)EuKf'<W7;j0IWKAIVWg[[MnVccaPS)`CofT
%*5T_JH_m`Iq7a94o_r(B&P]i<r,V>(9u#N]?J;IIh:c2C^>1@\YMNuM8\B+Z!uf2Y[f!)8;q55,(GE2FNQo>'HLK8TbE]8l[Yjfd
%Q](:iiKH4Hmp'a0X3MH/X$>;uY?ZsYASKCD]CidCfBZe8f<uVk:[bK1++5%A.`_:t@f[+K2P+9U1lS^0k4;WI<P@:;oQYjqc"qiT
%>W9p8hRQhR<qkZF=6jnRA[V0CpP(A7hKR5RW`33+(Y9Y\A9n4Fo'2+Eh(TA/@L_cV93]BKbr]if<bre15tZJGNB9q[@f+?Dbr<%k
%lcRnOceRuQee0S!M=L'F[cO:Sep,^HWh+$64YTo"!e""J8Fkq*qkZ/_o3V7DUCUW=A)P0>mY..W0[eYA4cTJdoVB.arO2NFkCmSV
%>hSp&H;iZNHUP^=Udn4Pm&VV3V\bE-NnutVgo,XJq1X#KQne8XYc[f?:oj!H_%]'DV][WW5!gc$A!h^\]6)3Z0"JZnRdn5h<\9i+
%^-*s:YJ'_Fj#Hf%DB!5l?YqtWSN\Km>ZU`U_n4It_MP"=":F;SpNPhtg4u5C?_7f0/.(<q;!XIK@;f0khgOX*gA?'Xr-5-Z.&DB`
%#EPJ3fm##j#sH`k4/_YE2r!&ukN/g`p[Y`#^AmmUmujO!]*@Z\_j*aHD>QsGS'e'f;=C8PCbE;n@5]/i*\<XN%=)0(Y-6<8?)]G;
%H=EDP[l."X[gOS0qh$.PA%NUF]taI5]!hZ$JP>s4Y8?2s)B@FJH21e061NA_qQP#fD*BM]h<p0]*^8EdAg/oATVJes3.3D8c#'V4
%/V@VAj@ajW9ZN=u@TT\ln')Z&K.l!Vjl6)W99NYPe]Pj7o0#apP^V3?DA\Gl%QcWGQ,auTT:Ob_*1I'?6h>7-9"S.t/rfO='>d5(
%cI^s^POjdCX3to:rS>cd1Y[AcTtQEDA7L\EMIO8#2ct1)IQURNgt@$4>h=_BI]l=*IImM-[f>R]o+01G;(k+q9N13?;WZkTs0U?.
%*.NBC>,sko/rL4bmlrT8-i<:hXZ%VS:3jm+oo=d[HmJ*,$8Bo]=_YWMb4gkfGI6lBH`)2_rLQ4T1J5Os@f"s%q\>9ZO7*mF)P)ZB
%G-@EK,RX!Uk0`;.I,W'Ait`(;P3@@Ie#a;ThEeF;rBu[EOGER&kCre?+tDQM>X!RTl]N&N!k@>)C[#K:V`kE[_,WnpKO0.!C3@#!
%ZZ8rl9Se)hQ<=(@h+(6^)_+'(*3X1dMY6hH)A[N)9hn;6?9DFDDslg"paNE/iaGKe5M=ptg29$>o%:.,6Uir8VtGi!ef.[Goae1V
%dYm5L%fN>C9/#@062^HSrF;=GHhW2$c;kc/?_@HukU!F3j1Y7tq4d)fq2KiM?m"r4rp0Oh$kkjk4(W1$oS@tn<YA-RR"pec45gL?
%<Oa7pVHJfN&Xn1<`q-67ad\<X'4sbJLgbN`]Me/1Im2LK(,2pN?5F-)fAg!(-Cl-aZH:bX@CXMBO&&-H5OT\1;QJDFl,Uh2(n78i
%QRs;AS$,.L&1IKrs/"VrQbm]!Okgq^^Xq+sfM77Q"Il+?g@au);t\joI,^nNJe?CJpno5Q-6EX:R=n[:YbBIpAD%`)KD<\uQhN?7
%-\`L-*g:9t_lZOU>sip0;D&J9&mk_'N!pdQTiIk-.UJN.6EBO="+j9NWHcN(0^'`BSaa8(i/^YXUS9sk<U<G1&MZt$CBaR]V3iPP
%,E67seDiFU6'tWbeaPJ;K57,A)pp@jh`VPS:$_CW$?gpoP2OB=i]eVV->gSjTb2PA#KD>p)_VL*&Si]\IaRSr,'!TVob=**BGHQQ
%04'aVq4\PO+,,n;03[Hh=h^V=G*dAJa]QrWNKD+7GdXn]54+t)gtIi"D`ug"oBr$MgK*ctClFIP&9jndm:[@1)h_'U>5;%:H'<)c
%BO5KopW4b0n8Y89ASumoPRHd,h<4,N7$mP%h$4k<C-S'/S^j!HXn:W;G:br$p8M7UC)t&A*;B2r4-(k,bL*5Ins6u=nU6Fm#=J5Z
%N3N'HjEojY\:)GaNG!Ak,IemU("QN0XW\(jgo.qN.[Zj"+-iFA++?rMTV+OH]N9@Jp(_CWDf2bFY',-sDV)3$/&jKHnk](s[E+DQ
%/]RZ&Ci]<R"aVuLf:Uk8V=Rd%j0eaB8#"4ummUZDX30gjj1V:OXqD0Wp6LGdMT#llr*A9S>l+0fZrm??XDOIdQS-AOI4,b4SpWE?
%UKSVC>90/,SqVOHpcRmM"RYk??]Kp30F/X\.:'#=GUc1-V*=]I#2I&nioQs0`O5Q+a6VT278Xe><N_/SoAu[T$t0h+LVmc;"Z36*
%#>p55TRDkj6SfVAF52*daF2,7LX-lX4GN8ie2IY-e\6'2'PU.H8*-qP:[HNtHh3c?p)QS"G.%9n^TVN<p_<=.4A+Au#QFS"FT2-a
%Y2l1>9?Mn@NaP;!BB>E?U+M&NQd'kYU\N"`J,0$3:3i`ppo5mu:!4o8c'>nV+"ag&H+s7BE/Rcg^A61b":X-?'jeR9IT%j^W;-sY
%1uH"pR9,$I6`KY9X>BLEj1u&`_\MmBGkpUTqP,FMVl)_,IEp;"k$Mq3m6;f4s6tEW]^(BrI+c53*o@l"#Qb4YHEGk^LfEK&5kp+C
%>Qdf1b36TdBNAp*kWTZ(nuj)tIH,_L7lW642I=&29ePSiX_?l&L#_"C2qjbA?"N?p/XuKc2rX;t5]K)7kPP<8mHJ2#^cQDJ+q[Jc
%HuZ*GPMXT!7m>\]G^Vdu$E>P$j7^Lgi:'t0jL+TN7TaS"j\K)1:$:2E+KOOr%`Hg7jnAKu\rhWB-U&K)HcsLMC*X'FSs(J>.,6>D
%C$tLZ2@dt7CjZ88/jD=3Cm7Th#Na?spR`NS]?Cfq#k_C.Z13#!oTE(/]m4'L+-c=d[FMDPQf"qISTSDs0"6^E1m(=J[I_(;0<MqB
%f^_mchd*j9^O-2WHf"+49925UqY%0(c*(qB&"Z%g7Egm\g@i?JrBTR1lKp][BUjiWfT>qp:r_<QhlX$R\)6KjkKhF+[as?$_d*TE
%/R3]#$uoron]d?n`\[$FUsH`OdPAB)r@73nLQ.JO3N00A@GIhqG5tQ602D4Z&'$Wd1b'lKq4?I!3L*d?9BRZK"Gh8&gA?MS^/as<
%;a"qZLfmS]2"P2@MPR;$g[)&UHrE#(Ck3\qe`??]QaaQ,p7QAL[.\dYrl$pr?%;__HP<]2KRS6[7W_RS87p&CfB(J@bI.,Db*29g
%g?FN">Ml&Rh;JJ&f:ZNBFY<7UZSsBUN4'UIg<&1>X6&HOr?1f-5-+$!_`e-eMb1Zgh/5'GF!@'R&&sh+KD/Rh*Eu8kc>1II6VU;@
%<Vtar<nq6!<]g2MD";#B,hX:-Q]&"d<B)Efnohp^@nFhcp\NJ;_5dcY>$0E&BSfMD*`q6I,j$QC(QM8!^*a6J:9RcL]\hII0/#?*
%;rc\OnR_78e%fcVI!oLBeuKlcHe"n/D=+IR:[J(I41@bK8?^1Zc_"8)B:m=pcTq1^1/I!)_Us*Q[r>Zb\FWiZf/rdP)+jLV_leYQ
%Lu-G52JDR>k(C9=V]bQTS[5^7SZ#[Dk%:1>]6ddH]lWY0<qtn-cBiJJ.YfU>.,F:ZS8CJqVIA'M+/p=i-R\Y+77cS*?I3W0$Yjso
%;%Y#*s7=\F.X?38>V(7LgMq!>dD9j;j[9WrN+0Np<FP'd@+n*e[e=jU8^#nT7Q,g(E8XAP=Db11"D6CuQ/&=9='M.i3]JJ?DR?3d
%.=J_\=82U<\$bt>?U&o88\:U/Xe,J-l")mTM2/XqHV*YI:-6[M``=&TnMpZHZs[1Q6QX/NHe?BMCu'D?Idm?@?[2*IY(]>nr8M:i
%<,:2<OV87ogG0*6K<'p(1_q:GrUj&!Z#"CQ+iNiEQgJ^fF8L6XFS;rQA66Kg2p6nElScd[@mgD3^k(G?bMq6RdYep2CVkg)?6-58
%GNAAWnp99Y[_Jk]QUqdZX;R)BKdYWp;F`D-3K9kg-u'_c+RFJ>Jmcii?L6K#6?G[WBldj)pqFBeohT;^>A*&%%p*<4F'mrR>9OJS
%^Ciap[6jhl&!n@D#Lkjj^\GiV>>)4G4:_rAjlO0f_7oj>nkQ`;\:7ail=_GUhRXM-lLkI"aHW9=7)'2u/j9OlR)aE."o@uHf&g`H
%62E9KF`/'^k"jKA7nkbnSZ@@N]`!.h\Td`b1.@5`9BrX,i(Y=(?@>%aR,c>to&0Ek[1E*4o,8V7(PVSE_8EKm23)79q?*X7/-?#p
%qi?,VJGiA<cLL>#h5/rR((ngA+Omo..=WZWfXf9"#p4;q%;fqKQgtBJRj$d>@]Zr[%j.kiA0#AWjCrEfprmcr[B"5YF$/LYlgS)q
%Z&5GOH"5t0d*GKc>$.&6C?O^?(V=j8VjV(&ICb%9NPb3gk?L!2MK/N&]6W0-(,DPkSoqaPloEQS4Nq#PdkNdf*?5iT#HsDgK$h3,
%]k4rJH>L2b;f!<4YPUudBWL'!I1nofidS"M-[j<h6c64aCXnu^p9W9Um8!)_rOh0<h7LAVHuq$;ZNEf-fd'@#^8((uL[kFS]nI:W
%YuW9?o2FAaB+Mb@3PP5C:spmg^NK"[/)M:fghgo49s,$fj<<-GRl$H`&uYPr`qHl[LKgUgg8f\eq=8PDkG`gfjJgLFRVX_Go^D2'
%nqV[Sj4+jU[ZY7XH5:Dm:(>^^;L%m(P]UNF.>NWKo0Ha;qma6U@gdcDA@>H5emEkd)jJ*d;4=.72)q**&14?rmWM,?JE$e[QDCRB
%Uat:RQd5&BmMPm=rQ"$K7XcpM9`</W"mnkLTt10ad4nC\*l[kCIF(m68C3lYG5m$GQJ]DY.p0Es54T9+d+`WuD=ns_]3TaQr:BZG
%]D:R^E79J1n5U^@IGQ,=nnH?N5<HBAol[o_PP=b:=o#H)H*t;-h`ZgfkS_StT!7b`L-sD?>H=)+%Ci^UqnY>hZu^CgG[%c+n'tp2
%/.c:)r!F.I&6[kum-o0@qZ03T`QO=3hog_kXj6clDpXM6'+O!6C`eqB7H^]CYeF-q2q8pmkJR,P:(Yk7-HF(%a(=HaVdQXhD^0#&
%b7[JkmI5aRo(C[>\MP`(n`D>W6gh.Db,rNEC"/=OgK,>`X.IuWlgfX\h=9F!2G=;eP0rUfea75P5oFr+414b077_NH%8Q>9R.eo$
%\o?0%Ho7LCIrH-GXF]O$qjWkAQ-\3okZt#F%-]O]8/m&Y")1QF5C?cuHflF^gHBhjqu3toPm(d87O,,ZClfH9Hq`OI[=$$Y^3]L;
%%&0XFY[;e8juESg<TVbO+&oX^]KWF!&^.mp.5/fdjB]M]=t)VLFY8C"+<#H7j3@>i!c*V_;T2n%FWN@DV3ULt\7h/QgRfR-TIDbf
%m7I:o$W6#Lh*JdHV=<K^")CF/81D'`;]XZm@N@R0:Mb18q*t1%jir+!2*j_[47/CbO*:0'G]?m#O#(l.1?kHaNj2f%J+'K_A`TNV
%\c2S'jQLq=$J(h2Dt\r7LcF.ma>Vm.hqq]h5ALIP'7!Dmn)d9h+5P>^6T=jcGH,:+2,6ehX$$'jc.husqkl./2BssIcfWfuQdnC\
%UhH?_B3HNMHu7C_ZjUbs3'5NG\m3n?gA(SlgMH8JaJI3!T,#9JNZ22<IW$Jm%Vs"=ohAV2`(Ji7hqP8TL8drD>PIJCL@Mp*@@XF5
%s.J`6>2<MsCt5&fp;Pc=:%fI-IrENLqQ5hQ_)IDr<kjus];mMaq>.5Q6^_26k&#,C?D$U/gq"c3s7^&k[\r&@@d]nA4MY:+`3n;S
%?;oWp1^8>qU#!ulW[iuu,WmWC:]8.,TeT@aME3@N*Dn&]*i,O.-\_G'mC-<el=IH\FA)#9>2j<&aTTbnm.9P.&P.7S_$!0:"&oA9
%oaaJ,0X,NKDUb`I/d1qWi;<<(_i#Ytn.oQFNpi=tFjbCnSKL"@7'@M4qY@V\Ee=6-"?#O$XR)`eDsei%3!0qWq[V#%2u=T'-`%[k
%nLO$+'Y=:6QVT5jr,PQac1NaGS9KlJfCLM4r,q84E]m8u`G+F!U_!5`T,k/V3N%Xfie)/+:/GUVcZQ#Z4@DuX([:^-H][P)ETPoV
%S1BDeV]e+7E9aQ1]d;OYL%o.(7fru:Zj6cEIN';-h-?N>Y<0:L,Mr<S13^,&>X\kI2gY8_S:auo-,'LBlqEB)NCO6rd&c!b_[4k?
%\O#Ng+,7t"@"*S1WTS$*hO0U5*neK,Peo+gNK;kQ0HlEk=sc.Vl^keh]74C``lZj`@"H[F0&4/!/[04O-b,s9p=d+8Fr/TIl+8=0
%KB?=[WAc0*P*&Ha`nBl0Z-.`od3@Z,8[:Ic&eqQ@SR'kC8V=OH3`.,V)-_e_*\5-h#A:u&j`[\S"FA=E1n)ulhS6"u`n`tL>kB9.
%hH*g.`%/rh`u.PB(t-DU-;B2JQ8IUH<q]EQkuX]*ZQ5f&;m1QO$Ai\6QYGk5?N4baY;2#IlsOgXe]k-%1]GA8V.%BC(f*/5]dO:,
%dEpobgB\i"O"`C)2Ms9,/4nS4XsR..C]Co)I9!4hgLj9rir!m#qa/IoM4q$XOlH-R8"&pO'B[8o,_mq?;f&pXI#36S7[m@AY6S.'
%Y.$Q&Pr,(PU<?8Oh..EF;sS1mHqE4gCL$FgBa/l9lK*[nG^ZCKa]K9o%#&^J&npr7I5Gdl_EjaEV_9?L1>Ln`Yl==Z,@p\3-VNoD
%Y<OhS6nriqmHM-'OjQT%,ienCi[j`Qb=SO<7W@%6]D?L`i2ms3@%L@MK[;so/N"(r=puCrjDDYAkD-ZFp3`F8=GTuG=WX$tU*J//
%BFF8g?=PMP3/=_KRWc3:>,5;I+lq,Z'cN'A(McRsT8h`j/+B`tj=qp\#j,YlPafOT5]R+"B]\<7'ZWE060-Z'G*h]T?JOB61\@)B
%<ZU2kb-Lb!AiXMbn82Y4CYAp<!Nhmjq8`%Q2h1B@=(uZ9JX2f!c'?n-V;-B7q=JU5GfjsOD`aj-E[#*=S^M;WLDA<:b<PT6d3?rt
%)SW3F;!9Y1!`3lo:GDC<VVh@Fk9&TddR*,C?_4\P4"m(8DH2ur4)aAPQ#$Bpa/U[0;VkA(48b`aH!jcY?:GOp8uS4Y@'kj85Q?!*
%k9$Hr4:r-\Ff2sf:@pitpI2u*?SAk"UmI)];B`aHFh_ss-CI>0QVd]Dr@Jh[r12/DH`\Bc]YgA]80%kCIlKp+)9MENNjm#PFoSHH
%\)Jd]jTnk8k^f+\ndjXL=.r6@S[Tp$)R5a?Ts>u%@VC$ePK%,*rBHg7HnE!''3Z4AT7=5_Ia>``'l1D4WhUO8R<tkcfDe?.r6nB0
%[-/oqZB#Wi><oF$U#p4He45H4.?V4c*hu3lnYLkU%\9cO%$XlTh:OhV00OA[[>*FqIX=*'`pZaH9DlP$?ea=h.VX[5G,3EI-SYl*
%s/"KOrQ%Wd-'92jOkd66:'et0[hW0nofuDJZ7YP*p55[2GtHBtP%_-Fk7*E()b\B4_gnEcQ,j'NQLgt^"$5cq'c?>tr-p(A;--NC
%7WJGp:'Pae0]]l/XHkeO9U^6"[cN41S:<8m8@"]9AAaoF1&2^hP)R?5T77]gjTi>?Dpr,G8;5T>+<CnH>P<a4W[96AbHQtr@I&3V
%dM3Oc!S!@1]WRDT:*:dbQkk5e/[&Be7Nb.AX1E'.9\%A1P!KQ[hBf*EgOPH$B;rIU.%-7C+Hkps,'g%'$A%i^Y,O1kX4qCGeE%jX
%iW0KWp"hSQ)AsYl2"\fg8Cceb>]e`?Sh$L+)\O_s+n7^#=o\nK:o/Ak:t*SAZ=72MMh]c&#&.=FL\\(,UkE,Q)]F]HabGQPNDu*X
%&"s_-WgQp&<=QW*`-sC0E^Qk.B-d=@-=K>HO0Bjs.fH(Z.dP$cC8r1&7)d_f)%]6el$#66%7qr]S"2fje(_+Fm\K8ZFL-NDl6@s_
%(A2@h0:IOtk]YgUooK92odY3QQ6OH3:m*H/\LJYdI&O1"6s;EOhJEEH<C]?-*Z1p+KG?R*P"m'YY1oZ7,j:ufO]2\dUek3I)N1RS
%XEaUe!FsataeUAa^8XH-!mLg*Ml`+"+o"g-AXFrZ9WF!HJW8+u8NB?lA+N-S/R"<OTG&'ZA1]]?deX`#,RImL,XYfV&BZi`GeudL
%*"8MAcO^B>!@O<D3/aADjEm&H&nXFa=uneW:e`'K4RHQBE"&HuW"E:X`%?77e[5[c)+m:4IN9P`Cp_P3!1@S<1((:ZTZplqMG.g7
%M6_kO$UA,9$pf;J-'1R5dKTgo9uE-],T_mM"Bll:P:Gm\%4!@th'?T!Y7L.F%$KD/?R?=^d,+DfM>^$!`V=TY9<+g%Hg'aV"(bIk
%8I4YEOA0:$,0(hEKa#=))J4D#Z&LkCRlg`j('la03A1u!L*J.IP1T6YE'=TNW-Ujs6:!&B(+%%2.Mi&@85Q6:=eeAG;40+iG`m^a
%egCViStI*f#cV+-MM-`eKW.RXZGDdH=B6t5Vbms_<l<4J"`[(sdtg-q9bO%_6IJ.Y23OXg:#8d%[q$-GaVn"b]qlBR8j)9I^E3)&
%%:(4)O*3CYdW/<@FDhgXKf4ZD:*H`I)6,%oBd+23AHdgGU^J$ENb[eM2UT4\\4H<AL81<)TK-$^ib<3U<_#-XU"oe..X;F,,>p8$
%O4k-Hi`.;NG48ld_%_M;lutk]c^U(aZh/t[!;)]d(l6aud3]Ka+VsA9'*(@O"gDB,IQtZM'5J6o6m7l#BN$*j-<_Q8P_p!i(+Vep
%_Z9g0GT&ciT52g$E6\B,iC0e\B'@eWW#EU[A-N3#"b=s=!A'U;d*ZgcM=l^J$Y.'',3pSAb`d\hmBrgCJL,Fu6i[Nf,_5]s%6=h3
%'T<i7[uP'$#Y"qa"r9V.f22MRN>B<]3ViUVdn[&@XSO+<"/:%p18--rP:S@1O%dfqhSHH:<q4+jWRJLrg..&jdLAJ^1mkG0WMl0g
%@O"4Nd*A,dV*olkf*.YCW_0,sfT`tQ/;$;HWiD0i#7giK&d],b,2!n:OMIOR%::XF2&"!$0a&,MkB4\JGjAp.1NI%&OegB9L<qJo
%-6>n+1\hZ`l!K]ZBr!gRLs8(sUhjT]1Jje@"OUqj5gr%U%42k89-[3`GjSV:BbSF:Zkg_:rV%iU^FCY[KR$))LP.SM*WeUOX'pNQ
%ql6[U2%N.^Q6am\kf6^q`[VadKP&C9+`0XJZ61FH=`6.,)%*,:A2K&g8R`L)1P^ZdU(,4L>PElin"_ZPbCE^F(bN0i`WA%q-W\@j
%F1SNK.stlXnA?n/H.b(a"qiY!U-pB)p^(Em--LnIV2<?*LBA`iK^,Si5[2'J!GG\(.$H2\_@TW;QDMN+e4H^>V>rr`"!VHVBI;Ch
%1!gJ7BSM&Q)QF/8UMb4GWXURXaZtps8PJ!H=Y[uOIq5f(T@>.]D?c;eUt`!1!OO^"2"Z]C/,UkoN;sfYc+PX-.EL=GD1Q@%>.SSX
%+O4@K/_--iH/"LP9<sDp`4g[qlG2Nfh3Oo@e!+FD<qZ,>fu84GWZ0$Tq=AP*P,1Q;Z!gZG3RJpoPo,i1i'0OlN'GEB"G@1eJH,aT
%&d+E3T`Y>,KqKp,;Mec.'7#]IA3L%H%;2A1A7^tO,>0pj'3**/1J$*ehlmN_'eGUNTQF*GDeZSNTNM=/:2)OPca+Cp_6aj31E\Vm
%L0,?3bkrO,Ot77N'$]>t)g6<5`hrr^Y!Vo`?k>S6=j5<)k1%=rACXL4=H],?QA+]`+l=EQ#bZN2M'RnSfO>=O2kiK=mG[@U[]2-:
%N.*L$P1>.#8>`=@ThMPULP*[%_BlSAQo@SSh:,GU-c>SrUW#Ku!2uCB4^!W).F:Z#5#&kfN<T1\6D@!Z83kp?]Ke;?=H\2dLo%k#
%(h.uN-csfTDF1LXKa;?B)V,=H5hPTVM&K)+U9>cp8NQIF%V+6/5Z1`'[Z"OSWGc+,c)lL0#RXbC-=e8j:)/p.3(/Q&5Rj_(W&I$5
%J=&6NQ?L<1'i.hlbk<tmAaD\/feTd!SBj;i&6a_1jBrpm0n_72=S/?M!=__]Ls*)@Y:C'&Q0?QD/28ZFAb]f9$dh?UPDG&pEXN?#
%LF3UF)t]+Yn.Hm(4\LUP7M_?kQ%:M<78k(u+JB>Xh-e3QOX78#"00c")+^k\DPkcI=ET^`,TnRa'NQP+[/:__liFJRXu"t_Lak<G
%+N2nncP1^29k?r8X56N%9,0],>_X!YQ2jIO5'&u@`f*G6AV'">4X("LN51_`1EspYQ7<"lQlOc>ejLH?=J5oO+e!+)kQ/R6YDE08
%E1k?sJ_-0aH@%ri%tY!VJ\!`_T+-u-jGt``7]OS1OW`:LO+gU/A.4])5Su2c(dNC;@4G7lb>[\tTHR2[JWI>dcD)l5M6QaT+@""V
%7T?$E!9)!=1EpsV@ctS;L+WkR'8?^6@$&nB#^'O[V*Rd*&8EBd-*.X*c<t#mO\?iR4bXK%5ajC\Yl\'E+9?>=N>q5?Np]L$(_DNN
%)]M6`66jsFL_g.92?Nc0Y"V2r4@66f&=NZ[88L^6@JM,t.[YgrP(b)SSK(9&BZ"\c%[]GUCDaqZZ7:N`#'>Dm9^!.O%NEk$Pa6/A
%9$+Tj)57_rqm&pO$iuS<(`%crfeDq?c-NVJ1aU2uAr&qOnYNJ,Wh4es`!!N?fKj))`*sTB/@GTb[Nt[eHaH%*'0o42<YMSad.e$#
%%09</A((\PCUEaA1nie4ZH/9Lhs:i(p;'Wh)GFd>V6Pa"F#$I\3Q\L6fGME2XKZY!1iM6enlRl&Z@N0[TdiALU(n+c1WRE,"6RCT
%StOGP`>kTh)P"lNAr$aj"%BE9N&\a]=]:D:5lN5K7k5sbOu34W)l+6k?B5Nb?4hpFag06G'.g*a8G4)UDZF@dd);lO+A"rA7mhk>
%JGi8u8KaN37<je=*$VJP$l2bQ/OT^L+r_jAcqe85GgQLsGch@I:Va7F@V'c*eAUe%D@&su](4Jp!CoMe0=33_AJ*T5_L@_$9aDeo
%<O*/*BLW4WLRRJ3UTAE9AC1[t-TiT@nZ&=;->'RGd_*]>disSO;kMYigV0Y[1$&HMW[FHqaDKmG;ib<+)5lST;b5PU=DRf>5\5Md
%/fRA]ag@cR4(.pcW'TEiL57>W/92'0)))PVO:]P,k,DR^&6asq]\(Fe)+%Z"_%:WfFbX"u(PI<<[U^Q],SQWgAAOrIM5W20LouI'
%#8++b[N:gZ'L3*H`N$fY6N^fg*+1FF_GuBf@]H\Ai!YlJf//1!QKUjQ&<!NBHJgZuIoA1rg;nFMSWPb7R7qHj['CC%87E.Z153ds
%ldcL(,rQDmf'hj>:%u!prLsZX0eMo>@7(GogdG1pn4_Nq"+.%/4"Fj:6[aRrFk'Dc0`Ur3"$<D:d"]KZ@?$rg>t?H:<ij46<J<MM
%OSLB_e)A%Z_RM:-Q0=;`_BtBkFndolP6=DN+:)D]4,:\iZIfRWqCf^X;YdsofSi'&]Ga63[L76q1`mj'Bo)b."GT0!klfC%<B]M5
%O^UZbCJAF$M&[tMbf*Ou)=s#.(tQPZ1JHMOLca9VHq2i8A<LmQ*a4^;-@k.^MtiS^]FQtdn?QaH-JMHWX!Ze0.7jECKb85B4:T_`
%MW$QajDPZan0FKpB;%lunVRK+=;Ge;"eDXF6O/G@fbU`qV@!RH:bCRo`SnCY$"%'4A-)TY)*1K'*>F+pMm-873S]Qa9N=J^A7o!a
%^<n2t\2'ALb's-*@(RAFO?%bW6S&'Y%f(5Zo2#khYS7qWWZN+PIB_C5[<8>SU0%_<BX,BA!%:lPKKM(o'2-gi&Q+7YXC98%#l5an
%Y_[=T!4]n;UZB<8A75QBTP1Wm4fXCd$k4S+#Dh,=*i>SJ6E*O-#]s`S?-$Bji$]71A3W8nLD8V91g:P-PQHIT=AX"o"nP;O/.dpc
%i^/j2,r1bhO)&\Bg$4-QK^hAW-L)8ugfCp8)(qsdjc\_B"<n3.)=7o3ck,=oF]k(83bo(m6eIh]0PIdd5CTAACjV9b@UfY"6;1>1
%1IUXH7nt=qCHeOD+tb@Gp7RfTgY!-:OD*?Am_ll7Dk+'=il:MK+fmXl!sTL%J7f4Or1t234uD1Ag4j!1a>ccT20,i&F!AQF!eCH0
%&7reMYgX?\rIop/fKEW-Y5<:ED9p'Q?k$VGZD<:W3YSe#na>XA'oKPh'N/6_<PkH'+X17"4#R=WD1q>].R.*;#m1cgY]M$qn3p:3
%'+.!t#P=a#2D)r`/LC7aq3uoG/l&lHFltb,0+neZ_&^*h+MFHPI52B2O'kUk7PFp=&V'r0(7KspJ8?qpO:$&7*$.YZ#\bTOm[`<u
%MBU7Wp6,uA#Uk83a-6t),(&9_RH>%5!tQAH0S#rDAWCChcJ)M28A[j&]`U,mFLDqe_YT@J=_>a<jY'5gV,6)2!X+?(;SuGmE79pF
%4IE*`_QK*]eab\+'UO*;fKfKL2e*GNaJ%kC*?h"6N9gal8],J9n@]NE/J?_c5*2:2K:.]Q.&IJ+/gKM8(n*!65)FL`9FYGKJmD9i
%Cn/2AOO0(31]eeG+N][h.=0Faq[bGU\EEo*'oJD+\eINRE82/H*%DUAST;H)2,o8E!@'mE7ECnp$'L17LaSCu.7[UZ!V:"n!mm$a
%;.TsSIU!pkDW.f"W$D5c_)fiY.7k"@dm`1jP>0^8.^CP`W77`tH<J(S2'.QI=`5G(:eR2AVCYJB0I;X0m9p&D+K7o::GU3>Gt#*P
%L?(p=>ter<,bCY]4<TJ#=Yh7<-R8=3Rh==/`&e%cLk/XU2T+8pW#&BnMC`"8+EL)7FrLF:,"kB.6dqbR$U@';UEW?cj!U>$4bc@9
%R1g39Ghmtb*u8!7LJ,%Ra;W>P,dIF"3;*mr=_&D5p9gV=/%Ka4-);5cb7hDe8n:<u9f7fk!#S%ZME$P5`<_LH'MFEpKM4C)KUkFH
%;;`F6%*K"t!N:!c7#_3VpjGK2./ki_Xr$&+$acf-0F]1#VJfb=9+occ6V(\H$popREg2l(?BIArl$U,lOC<B))?N9820_2.<<H>o
%W+%q;+7+]W.Y-@VnPH7.39q2)4@9\dAEZ-sK]k8Ka-s.MSfam[ib][U>*9aL/m(-"@Rc34J2/BDKXcWI%20OA&FR4Pd$B:QNZBFJ
%":8(_#JS:oYJa8^;3OVCId06u;3H[G<$\AZ8*\*jm;OO$UlnD$EMZN@)S)^XFrCU]Z:ZTFV6XGXUSb>=)XjTGLf@fG7Ph$^Pt$F@
%e9[]5,+G?\BtDqk(!rqS4B:UCWJ<;nP-/b%jRWXKSgs>1[)70X*c6qe\1,!L<JupbpM#pZWXY)*D5>l3W>81=Xcm3/V:n]Y/?O_&
%Q=@M')&=GjO;(nFc)<WuZUgQ1%*]A2Bo;;HB&n]mmunN2F-LO5B#LTNql,$1WX"[KC8C\OWSU:JT9JOPV><rd?<4X%QKG`Sq&8L(
%8ZMfRk3;YD%d>uLl01oVM,5F;StLn'*cH+QDk-5aVu#/ISp@=HTB>O=K`tB7#H@-7WahXc_P]Hl@9uLE=IS3IBS]2XJi5'/S^dF1
%,#"40-)F,%&ojm]kUJI,PmE$hK4V#*[:J2I)4X?Zi?^j>a`(Wke1_bF9F3t]Kdi5%b`mA8aIm3+EZ,IkVT*$(OkO>"2a-;m$k4T%
%a(\E5A2$%j@%A4f:56NI+nCj_H8=9I&s?%Mga<4%a[:U.Z\$,X6LrbPEB<&I7AK#_*co>]4&V),;GU%#k:=Y!QtQbiUS@9TBgn[=
%*`5X$?.38hnb?rF_OD*7`DCkc4Ct`Gc:-`LKurDne/ZG<.Ut6i0f:I:R66m2YY<6X9VuU&Ui`JGIO5^rP=_RL\YdK5e3ql&H>74X
%!B-&b4!p)5Qu/<daA#=^9d]T]'7a$QKTkZ=M2^K%]]<W"E_;41C*n$H?TO<HSWZg<P'3;<9MJ5h9r,<H1L];MZc*V:);7T;,NP`C
%",S*V-OunMc`C'*[ZebhWMeg6Zh3<uHeP0@o&r8W]UtVrOHM/V9INHV4%Q4r,Z>OX1EDVb&]pi*PgkS$!_-@R`je^&:r5^X.3t<C
%P/o=K8O?!A<CnOE,a2P4F(:@^1s%SDe81XcdS;!k-T1oO,u#eU8sGcaPY=bC-824X3(<G3P)3(nI&c2IbcB55X_9=g`>^S$n<K.N
%QBF7o9J9%LTV^eM-.CP1.;u2REUit;7#"u^)I=Uh0:C+PRe<#g%8<W0VIg\mOqElaMs5MHan3VAL1G$?AMW'sOc_XJD_n!AR7mW%
%T.([(PU;Sh8*$Pe;cj]9Y,St9actIh>&@I:D'DJ/-&ji8ff,$*S4jhrbq2\f+NK\1;_sgT$.$_hkk*ZpA;YLb%6HFO4-A!_9`%RX
%%Srs`VkofZAtp`;ertsXWVQ#Q2#1Z3I9OL91+b_Y\t>GMT=bGk]I].fV]^9X+Q[o9l7IbOAV]?#Lt$bbn_4f#$Q+_I)UK5`pGl.>
%IDg&[<.p?j?6`$J1eG<?P.\5dEj[4d##+$J9_'Z-lA_:o`LOm&S[8bgM-E6eMaD.PM%[:X;D';mhHrn1E_9Yk9"cmC\5a9UG*RA4
%.sZatH-%T0/m.\e=RoWu9(ljhNb:H\FEF*fO@ks82GMFf9r>'?Z<NMAY`X1FG6JpY,3:EEc>,bNqQNuj,o(5Mn4WNerXN9epL1,.
%c=To"b:<=bA7O90gYP,E?:.jd6m`#'%7r%k5r\f#TqQjq2]KL>J%"k^<JTNE`%XJW\G"5!(rGLt35^%L?km&L&LC^(!a"?1fd'Hs
%'ih3Q+[iaMb7I2M?omXS27JG[JW5$(ZAN$@4d*UC]#cf?B[]C"h%7^P!HIlg"R6Pq,RSPV@A(%1]'")]#`pPs"$nG+e.V::Y\t('
%Xb8qXR**S!KQT[*+F@Y/W#itV^PbIbn3MGZ5WTa)Q9:69ogZ75mksmp)jnN_!p!,fZBSlDK"CpgB]!q8C],"EJ,<oP?@5S"Y6kV/
%:sZF)6n:U1P,o*I56M,D'7g!D6lZBI51o!#JJ<`%^p!kD"=`#cHpo%VD,L6B.`C6`-^I'u_d.FYjm!e4CHZ!)+^Du0!%."fN%<mA
%/G5)Q#E`%h+]3Y2=eK2>)$bXdM/!T9,pS#*X#SF\j\#SI$BK0>`g9#30pTWNES1m:*Fjb\5EgbN8s<^M'a'jkDMU!/6q6DB$0DrR
%=$],:5p)t2B#Pu/Y.GCGn`CAuOpH&FM/uUciBfXDOp?!PNH98$Gn?;d#q6N$6m:4tOp>u`QBZYdd28"4@B#>4D3GTXXP=;]HU7f[
%oL(E&T4!T:1*n)d`^qM,Q3mAQ+:pc[+4$_1aI8B210c\:\0>0FKFCtMJHf@N?-EsEJ7Ap'5:.YZNbf!,_JgQPA&A9XXt&GK8E-#t
%`)@lo[Lcs[Jk"ftBEhZj!l54YL=&tC8YsIHQ6kUMLjEGgD3-`g6T2D,f42-'O]\.b-=G;L;e^to.#\:Y%Q2g:#\KY&:+(*XLQP7d
%aJ&/O%PBFIj@eH>#S\jF3tP[B7Y5YO\h0DW.Y-`Alc-b('dTt-Rg*HKOC-q2mD3cj%/<iPVLim45ZEC\^0`/o:t@`O%LUUF#Xd34
%OBG*/*oRhFLS[RK6PY.eC+07o[au.J!F<h(+XdG4ROpf@)MfMlH3pOLUgZXD=Vl)\*Xp@-#D;$3>D)`eE+M6HL4hDE06$_T:Tt99
%[Y.&>Y&d'l&SgIsK.etnRjB>U0!VIPjTr2]Cl6(@fELn:JkV<G2+\qD7ZA`.B6,8sVe]PLcck>r(;`OBiQ%Z2T-r<EabHV+Ne2<q
%KqQ6g`5sGGeQc]U1HB&XZ#7H>(3nQAo-S(QnHd>hM5eN."^&G'jKW^4)O[YuEB/.UPJYEd@SJ-@"c"GJmY&d]"MeOKT5dk[L:)OE
%on$'Lmj-'I,V/YKXn1RK.T%fH[AZo0JB-oYR80r">T.6e^_.WZPR0ob9G20)VGg&N_'(NK8ute/BFPP/94A:O`ebUPGDu*[8Rpg!
%Vr(Gl:G>+e<T<pU*5Qi5,!$mj=`YiVISq\T;&r%&'%]Bg29!R"k6G*C1DEJMDA!5Wr!F)g.:J\jAT=a":(croH6?L',W/5p#"mEG
%.GU*+<2nRq9s:(bQjh5]jd`3ddjQZ9if[b.:&LkD9*u-(dn8'\8[Y$IAO\tK!eR>E^aMsY%F1V5<X_lm</&CZ;deAnY&qs9;3@?d
%L\dI+]jck81`H\K3%4h-\\^7"q,QsN@TdA158=d(":PP]R,X`B&PPM2)N!E$m>fs7$__Y]WH\]m_90]1UlD\a_;**;0fe\.-FGQ&
%]c7W98<tmVBb2"WEDhL>A^hqo30cB)LJm=?i_CluFHn1]-mDYjPr,9[J=pTpVT;(]2;#\k6A;cYWe<G*m!OtK@!\X_#cOCom&ESg
%'3TAh;EmJ),h3J!P)sF[J?NXtLh>%=-?Aq'*%.?+]V'k.1c9;)36(4E-6dYt'J3'@/3cX(7M_9.b\--GNj;+;`>QguNPfYZ8\mD,
%]P*s7jZp3S-If7F$VDB;O+h6ib5*:M_%=/i*6)'RHjuTmMPLh(Y1&9L1%d;^/=R#!_E\Yk2^RMpEMZRo7Yha)aUn7tZ6k_l]\XqS
%V(jkj%gVViPe^JAZ(<D&'-(;?3RWSe>$3,YTklKt-Yp#l^B$a=;de#t$cPb,Kd&q@911F,Khkt4GiXrdB5=4p".;rP^*LjY@`L?d
%\mi-JO"BK(*7b^s&6C?1jt16$E3RndmDPDVT3QYpa4USV@_f?&S@s_gW16UE#L`]07o1-PQTDd-c-MZ_AWf&#;C5spp+KqCj<3`N
%QP->D&hP>+.l.JUbg2($i$$8P;Et[3CI-C%D>GY=/]:0;V>=74C!B%3Z?IG/36!ucT]tH(:-gq<N;O)_'beW-Y/]EY5&BhsSnVkW
%W2,9_$leUTd_&Pnc<t/R9INXDWR=5O-A3T:p.\2hI+Cm+E%]-+PtW18:X:>iK8(.EGt>GF/E'CI&-Q7.OqpV5>sk%5U6(&(O3'"P
%^_,S1"P'=pPcH,4j^T3ulpbM&#147%W+F%0;32uZ3.0'YM0J_u"EhUKQ;dle8;C-Fa[0#Nk?gZrhObGmLCfe=j*UAe_Rg-Emk5*+
%mA/1t@.i`>'V:.[X:UOm@H+X[$'<Fd<&^,&iQg@T;+4JiJ+!ejs3Lr+rY@pu2G3!*FPp_g>LYX*'iO!;^(0/O&m:iqK'K*P^%'=g
%ma=,aDb-59C"#&RG"BBh2*bS5T?\r2=^OKJEki*n/V8qMJ6e7!6k&Oj<)IaJe(?kEGo/5T6kljP/WR?l)DWtk1EfD=%PN\I#!/B&
%L*Qe=c1`03&d.UfS5&EC(2k9;0EUK+(fl0TOF/g&GcRi33EGc+9[\27n[LA5QHbM!e7!5[]`c2NLIhpQieuH`\6u#gcnm;3EPDPj
%:Io(J3fq;m+X,Sj,2_9gh%s`)>hT68"Zc^_88K^NR\VA.dQ.6eW>t=6Frt.0W0gsY_j2/i0/>RKKeq(q]Dt^?YTq:e5uI[hk`F62
%<bY+-%CE1V*u5(R<%ob<e<m\"=rOTtL7o#U\\INd3n3u^[VNB5'UT)^C3%sEBKdgm@1<AR(`=k)@)q6%bd0bg!bUqYWD@mEcoEW2
%ZY9ETed/;]h8i:I7UR08":V2%T)"%('mMFHJHZ%AcphDsEBgrQLdL!j[8mkn$X#^.8]LhKPQR\A!Laud$l.QU^jQaNH6dhJ8Zul:
%?fJd4Md5-F/W(KH19NmA+DCd]'6Fq$9k(S>B`hF-Sj6U>:+ZR`ciXY`^>fU,VKmoJfu)7V+ibDn3HRfh!/SQu:58Fg$39$_a8l])
%)I',n?=l;SU2ANki$3\NL+q2+m1ZbB4bN^*4*L.bBR6>iDT2?+ZKWDr7>Si+W!!:C-nI]<*dnPJeKaJb/LRJ[_@k)UESb-$9<qZO
%%HG[t0lWAX=VrEP5;"#:18HlrfVAhMK_/_];TL-f@8'pP+uCcN4aA$2^.A>G'B@%Di]^'g,kM<D'5AknM@piN1EN:%NR_.2%ZIF0
%Qms\J:q:;?3Ng4^2&t*:#tlCU/b%hr2MGe"`9`M;AJ-e+MBg?81ik'_2DHap>/a4>\9V*h#`b9lT'6opob,h`b[eAH\J[>+4TcpD
%cc-FN\5CK@-tYTJAh`iSnHPWu8TZ5JE/>m=>)5(67r`[g.OM$9]T-I4.B^@I)X]`PKf$+t0F?p_o9`u.;VZt`\QMAK;8aLHgsLr$
%Q>l(tDI7C:H^Nqb`nems\9&V[8J>EGe?eh<>r?)E-iN)8#9A#pMs9YSRbOEQn%DF$7fZFr"Gp64(LW%g*Ou,[E$>n/LdsI_l/@`2
%YXp%Oie:*90pk@n-6CA#!^)U<%sO9I%4/k]M'u:W4WK_*[S"KI4O/aO_;\n/GV%+snjq9Tg[fZ//ePjV8,9e'@O)rW`=V&Q_aI0Q
%'Qu$bRrFMJA4=:C&^3Y%1DU8hK;7CUW>?OK6rfFjf6D6m&]%2]G[gqk;-\X/(oeDp;0SFW=)It+L_>>O33j4X@?fcDIjDl_N7_6'
%-5!S@8^q59nF7U^,:,O!')ohln3\l!O/Is8_FecfR/BuXl6fAj?UdW_HHNa9X99VS8URQbooh#Glh#0EV^XHAbSNm]9B1E"Yi?I>
%c!h$HhhirG\CQ\@p8Zc:B^dPb?;$3m`<17>:gS`MR8%.tS=oNl6W=5Q7,>J."$"S!$s^o-\!cNGH3\oh:WF&#bN*;lO,lSuj$L;2
%]8Kq67)?umpu>jBY%cgC0K_j;%@[l)Toj9qBB+5taMZ"FGr[Sf-Y=8*%NC`RnY*3f9r!-Di<6/?-7,(e.P=R)^X:&&$^&cKb*ht5
%'4FPD-S'7*+pD?cTCnIhMRUa]cT%PlG:ab*:](5_Fq97<,%[)g[Z^_l;-q%jU*]l'KJ^ET6,MF*EQ8(e9B1\Qd[L4S\6ug=bFs^N
%E\H[,dWJ**10"#q9$Y:B$Q-ma->ipYLs13\a4G?n7L5rIq`Fjm!CS52q?H=\@;`08YRFA'`A2CLR.W'e`f\8Zi<"R!]Wl4&i1W=h
%(L\aY9>R*OQEZJ5Y)6"$MjppTAn+KDqlTCT#4XiFkT_&0h)6?rb.*b1'7\D_A;SFWk&8_Lp_l:ia[WrV(0%/jgi;%`gZ5GZbRtFt
%iSN3HRn)W?.bUDFSSe?[,:LFI=X>%.=d&PI-YOje!gUuVBZ#SAV5%$2H/c@"O8_gXQrq=IYXH3S/qr_NrWi+4^3!#3eeRCT#^>Vq
%QSpQ$!K0a^!K#Z7P>n)'oIriaaV#ki6GFsKSiX!\q'T73L(>[@$,pOn-7s4'f0iQml[^#u6]lat)sG5<&!9jZ=Qbd"p`:NmL*:nO
%"!:NTR"\EE!f#%/0oRXa=hm_dB+qK/:-I/;d^7ucb4l7G"ljuqS1p<Kn4@UnY2]N=;RgD$.OM>a%qA>l2c[:?H(-JN=A3cA*0Ir.
%*kAU*M8Z)')23QZ,st-j-_`7XEQ@_tQnG%-I'h:a&8\WIJum*D1^6-MLTr,[bQCUO"]?Feip&qkd[/13ZZM5ufEfllaN%;#[>IQ/
%`(_Q'/ja6hk/A:d3@pg?WcP<D6fAP1N4]h[K1W@$Q3:"66q47lJ.X)FMSPT/5Vg!`2r%;dq8H`t,Jt3IFc4L\>\TKqi4SfQl7*$W
%E3I\(T9M][$0Fst:t\+L<*T*)P-?`Re2t"UNY7=l\K@7'&(g[b`"js`P\YHYeDr9]lC+p_AQ61f9[6/:fm1C\W@5mi'#RdD%G[nT
%bs[j.P!a4p6\]:8_=>KA*>oP"ep3i"d]u,`%"l2\@Odd;RfBtdI=bDG+;IUO%]HB.QD8/mr4Q=K3X5aL?*X<rYAN"7s5g0b`Xm>Z
%Ct+t`%uaHp]L<bUr["+&2%%j@NOfMm)EfdJnQOqF$MoUo`Z;s&pH+Cr/p+^b&#&Q:4W3&;l!OsEpP&,dOeH5/s+W&G^o1?1D[q&u
%5:c<8'29*f`!5eP2[kh"$Q4K)6Sen#"lbgs$mAdsa[U(fY3g;cQ"Z?BLr?\@fRT=XE@X^5hC@2SHn_h_2W>H0r$EB5EHkY8HcNN5
%OA&C@Bd;u\Xr.S\:u=$Gk9AKoPb<mrpNW/q-\f.8mL=jJQ/P7?:B^1h`]%6@7TBrRB4Usl0XW7q=qubM,X[^0jjE&Mi<,d8M(!QM
%DbYdF2"@JXMX/4-9Yc5)P*.-sDM2k?R\CE+W(93,)+ql9U@&B7:-jONA^<mdPE@@J^QCcld:jcb"60q/r[\ZU##'V2PbC?5cuU]@
%R7@h&Ui4@1Zb61s19+p,,"?AlnH]FiZGc$cRd"'\,%krC-tgZkj(Ml2GpV6J9/4Dn7ms]rP.*8JPf#aL'Mp5mCdK9%qLq6J;hWQ>
%&NC/4<FjTF)+&GF*,^p\0UO+<+bL0"ig[e13>(F@Tc%j\Qo>^HfncW[\Mtm\%MCBBP,]'?L#IM"Q=c/M)5N5n3A#9KTTg^(lDVFr
%5kd2<1iYqqRJ@1s<<i^Ze.Q1ILl6*WXb"m%F35HI-S/jl;Sf*qbUW#gW\>@5G@9=VJqA_[M@\n@TI@!R$8/eE/rtVqT0m>><cD.[
%0mFZ3@qf"a4CE,q*u9V[*ap4HN0"D;mV"SmLn$keYA"l3NdK$:_1=oU.#;V,'eKepfXY%V"O#,')qa5hI)JQ5Yp2NBN*E*hDq.I9
%.f]cK@t4b*(\F\dg;`no-`A1`1)N[#h&&%d&-*uB&O_JSdjcb?-a?!)--oVJNq`k6h'Pa%Yn)@@&Pf,hI4^jO=3_RC&[r89aq,*t
%(V"1B-=>V"BAaJ'^*!M`Gdb8u-9fanK3r#O6e<h<#Fb-FA<f@eMukZR=0rMOP>o95+^moh>!5Vl^?SWfDBnY%ZDe[76F]U!?VePX
%I4.I8oUKZOiuteUO<m6dV.gef"UO%N,7Yq$QA0KJRB&m"W@BEtf-Vq?]L6qP.H179fDF!;2U!!,!iQqSbU.XHS!spnKEZ*0>RsTQ
%nbl<o0,q;:BG$>l\Cd6H*S#Y@V[/+D-42$2!Mb7KB*lR#_Ge%MdM5`QPB.Xlp0I?Mlklr^&h*9u2?Q2P2/rnRgI=S@A/[000in`A
%PEG$fg.`.Q2R8&L:F.5%mKZ?N,/"kJ4>#J1+p?fPVCb/]X==&_>lM,bCBRLNL#!L^f>VT3i?\i?EPKeL-OB@$S(0DhB];q$N@K?Q
%5e)jWTl3:nW$=,s;JjDF>)MT<d>eP+R8C/.24RLmC!-@G=:O9Z5TGU<b.+RphL0DsO7>k;YY^":0Yk.GF<Yq"9jEsA$\;,SSNUBh
%/*AgpE+Qb>_1;qo<,p.n5*)0<8HU0NVp)I:NDGX*)Z:q;/4kU'Eb.$=Feuke#ZmK"**o)pW9iB/ikV$K.)S`"J\os">V.q%%mkAm
%=sOVH6PJWF1<SEu9TK/qC`D^N[[XfDStjMniOB,8/TLRp"G\j='YBH`7n)N#R0AV,;A'[@,n,B7<B/m1mVlok3?,D7I.F"_Fe$IF
%`1c.8jq>s!i$Y7"$E@#Z8E%u[9I/g(+J"EI,A4j)?tR<A2Gm0T[DR+)5e1>]%W-_E9uN,mY,e78:s=j$BqkM9%TlG'XuSaXKGrd1
%)hnQC5bpntPZF,.c$tdj,$=oN?%?l[+doAjffYi9j+&;ai,?g$0S%;2%JOrq)\q3@3JR'Vg'WZ3Bc>;;7GK.SGS2N5R=R,OIAfb_
%NXDCi(^TZ+Jfk-2cpF0LR:.>kbiK@H`-63/_A8RG1?1pG`pk_-c#F4ehQRPtciu6qVJXhAK!-D.&/r%<_\;HB(O8Y#.lgITe`>1g
%=V@VIR(B/9iW3,(k#`q\..O<WYUqXL1lqnA"tE6-DU44T)O.@$<.T3[j:j#PY+US#]0NaJ2>R<+4iaM1GV``X+ju/H,%#5Q\Hn*!
%HD:>@/Dej+BC*"&CZ7L:9iq,LQ6b1_VB;%V%b18i>uN>"#Y7))@3XWu!H-e6I6qBE<1SOU^qL#u\"SF/N6/bS3G&:H:oF[3(ps?G
%RY[;=<g(H,#Zo>.`VL.qAdHQ4!Eh=YX>$n_!R7k5.`;$:<C%c4$?jQM7"q_HQ_^ARPK[K3e/6/"9.3:TF.l7**?<2$3)\r"<$jh?
%-pVflq''fS(dK+Lh#J^9a.jSZPi.XC`bp]E:&n;Jn/MLAMTe#HFOUo-(h0FkXoY:$kclsA*Ngf"^)YGWJhQ+[*\^%Bo-noI[`&V3
%q7%N/8fse%?lR\8-^NO*.N'**BGiAQ-#l3S_.+Jj-6Q:p"fPraL++U37Y.RI=pb1n!5O_U5[aCh`I![qR$L&3&CWdZL01jBbUmW`
%&XpT#d\S)rW&Q:+s6RGPNigEcV0=Sch]Zk?F:3sWT*OY].dE`937(JRPaYZ?,+,H(-kG!=OVIZZgV7>!n(=o$2Ohoa8q:(b:YOM%
%jFauPbEaleUXuN21*C/g6Ld,\&bGDWS)8)1XlD)"HXbO>+qCF8hF*KLV&f[B$)+Rm7C0^)g@[h1#@^Cu6=`oNPmHGFZ6)&K/kO^&
%3DeEB&=@$IUi?\LC,#q(PnhnjVr`'Q4f=:A6kY$8_Wane@I0pZ[SGWN1";-5cuiVAl&K<MYV4eCA'lFOL:7p6Da60'DXO;>H&)/"
%4\JJ7oKk+Kj!EY4qGhE2Do$ZVOd(Zb7l!uR"]n#GY`/_:fKdUU6W5(Zia)p+`D4HmSX4Vu3lWRSg1Y^!%'YP08>R!KL/`t=GXQU)
%&I&G-r>_b"Q`:Oq_A@o4f()nY(m;-Q?$.D.au;mS!pLV>GVZ7o"9;")r93&?,":d6X'o%@&f;)mesQ:O#rfOaLOT8^R_5+5p)%')
%!\f[DRO`MBAUO!aYia6uYn_@ZS.Z#M\J(]9W-ojpA;U("?VPDfP$G#6SoDfY'08X%RJL%kFsRN,85d[RUQ7co2g7bQQgUk#bQ&:`
%&5HN01R**6N@^GBi.UEQnFr6Kqp1:_K;BXl$Yr><#IPRd-BZ:=Af7+M5;p.!C,3;#_NAHRXE33(U9G*%\G#R_]amcjQYm#]UuF$C
%.?^pZ5KiPX:?P[l:Au^-CMYS#qpdM>^1j8VPah!3_":oMG1R*ig8iGtS=mQBb!peN67rn^M'C)8=N3BdVks]Ohf<lCdmVC2bsMLi
%am1(^C)q;M4'=].\tjWcQ7.q1G6EtH8^s)Y-R@sL$Fa?I-.*-:\5$k1@brY'd5LB(h3aI1.00c3^2o,$"9L\&l&c[,2&MhVblEPp
%I:X_-`de5YGVhIsW,Z[ISraAnEErgQ*%;8?4\<L&FMV51]5&<,(]>)DB%o,qbB!u?GeR?T@Hu(LKWMBad1hRG'IEX<^a3=X%_>u`
%C5MJIO'=ng$\7C"M3gWUN@IHah9S?B'u'9_X./2LM)XD\`GW/r^&7D[p?cX*D4D[CYR0"\=%NesUjbiLF@]Qk&`p(l?:'GsRdRkU
%-;^JKoX\7-S!02NVf'VA&QJ2cj(C>MYUSGblU,dod$s\$EjqOoIDOsAmeIZ3*rZrnXL-ee<[:EP2IAl>:9g`%ZUHD4s&;LX,jV]m
%@h6Lpm/Zo@O#Zk]%UTV!STH-FF_Fa0N8!r[XV<IiJ\M?*+fuic'ggGBQNa?AU8PK,Dq;J,:pD]l$ChB">qDNlpK"ka9b.^n&=#*,
%!]=Z`I$f-SR4--r#4[,)?l@X,'9ZlnLJ'&`[_NuD!J>/L3Eb_DLfL>L_t]XO^k+qW+bbS[OAOQP-b*IC*&Tmci!1QLKU0m"hGNq&
%I&\0Ffoc5oYp"<?<R[V)cO^/EL^gAhL_hjhMiR.[?W3GQTV8HUS2E;"U)DV9'Ho&G*ZdHV@pN3ANXQ)mTYaY\GJf$[Bp5t6UmSDe
%MK.cQfRQDV*pEGS8a[tt"s\t*2JOrr;<C"Y+7DV2PEoj,<3"c:XN@^N',Uk<C]a0G?$,(dNc:$:V8,[%p"9XZRRHZm,YcZc7901!
%<0>cJjUG5-DM41t;+cLoOAsFUGsH(N#U3iKAXi=`:o+4mPhcL5O&-rnW,RdDdOuS1_98*r1(A/:anfjq'82ie3QU(F&<*79e@%"_
%gQ7tuQ#&u,Q-+c/&S=Z?Hneu5+_d,."+]nE@1$D,T65anR#5qj+0,tI]RkN"".@.!D$M&#/u_gSO?dLd^]a]s+9jn%&#,#8_hc$6
%EQ:\-LK/(WcpR-o(8+UB4.s7uKo$^nR?>ZpB!.ko<dOS:\_7-(1#bljh"gdA^V$=]prQZU-VX/T9:^=UA(8V[:,u0&-e@Aa`LQ.[
%'4^WdEIQE_M=#RS^rL-I),g)/j_$RO1#@B!jNko\(Z#,_dfk?Z/Cst8,*%1->b)V.>Y7j%1';g%KY#@HUBZm$"XkOB-Vt%VW,2a@
%;S_!B_h;E\B^$\s2(V32AofO(I?Q)H8i:>jft>cV0EE+4DZLA]@ljt9S"$hrX_;C/?q*$LYIP_dP0rHcr]9=_M22>7S:XRjO>fhU
%#19P#njD0Q!7irM1R0'b6&7E_8qE29%@/`6/`[JIE\jDnC55\O&uHo;"+*MJg06q:92;P:Ifk5pg/d@Y=!B_*Wla]]k.8m7pqAeB
%#j.pR6&0#0#nki(7oMke8]!5IK<Oii+%!>I'\AE>\dTXgqLmhJKSOC)leV]#MS(E:Y?NIY4!_oTgG)*ac#=?`kkg&+p*N1*l%k"'
%WQlZDqLn)#]*/e9Vm2*k:1XO*W:>uYXHP2sO789@(u4856:Va.X])h%L3(?D2P]GdHor>=&@Eh9WjX3lp8.pqk?#'6BU2"iV\)0E
%C&Vcj3NO'XIWKpbU^>-3_QLMk>HG>\dfc-(*7sKV3tSH"/HkhKD=mn5-_O$5G9EM?JCILK'n$7@Sl6@D>Uq;m.,h4mqU!&Gk^ht'
%$B;=!j8!JKJJ]M^7>?2G$W7U(StKd4\.ZVV;Ed6LdGTdgq!pFrFfMpScVpW0HM,@pr]GELR>6i[j2]BLQ[V,=e9>&3=q>q9DBB(+
%O"^*Fl=],T8Bmcp_]OXH449LWM9[3(U&"nsGspU20V&:Ko"LeB#?'WuP!%Ys*[)s[B#OeZ3;=9p,i`?J%`lm>.*"dE*;H*=!ou_&
%*))KM4F4r+kgEr=&;<PE-sT0j=@%LKO_PHe2Q?Nt)Mn3+cbu't>!C%5)!VEk@F@T>9P^%X"FN^j+>"QGLmIdu9b[o';U_>n)9/tC
%H%FC).d.TTTT!DAaJ"d[,UuVA3<bb%kXY0pG,dP2_[!iSD+PPg/Kk:Zn(%]"4c?S-`>pL?OG3Vc\VUI>X'4Ts)8J+E[/#*GQnLba
%DQrK1RQWjIUhueja@kca`4_Ra7b(_!G/q"s:]Y=X)Ke'\gt9%[^=V:/K$c'Q:!8'[;E/D`KXIQgKIo>5kK>cD#]B6I4N>C/,FOWg
%YJ`RlY:;V.rG,`)h'&t9Ntu@L`+[%,SW^Q0N8&4GB/CK;_1F1G(@Hmk`+680$5D`r3j^RMX$jHO;'2"GWI>#RS4h_67`^K&Tu8W+
%>u2)TW'H!<9j"Gj^qjH%H[27=JD(AnJXA;?Jc_(sVFW3@)u<qN2d)K3-gmW@I^Vp"Nb.Ql/C$lS*=3F#9;55uWFRe\c$X*_.#CRo
%Jf#`c6d?g3MNk'TSt3^IDb=S^87R2tX--(S>j<>]qBlAXBuR?uD/9a#rA<q*(Z9BL:1qF`7'8Y)aq;4b?dKCbcS]3qTK\kR&Yi_l
%F+d.Y_Yt5K,g%8YJ>O6CKN>H8d`@3#jc;N"Qb?%-/$2=A%4R.&K]Rp;'@K)4'KYl/Wh%NJP7d!jKaG&cG]]67WWj>0]Z;Q9/LkdT
%Z!61FV(LO_+A<+Q=?BrK;;&Z3?JLEPDq?F%HNg-o<Uj[d+,'gnFj4=7pRU"f<!3c7iV2,"`To)?[B+8n??I`EV8ZnF:a]?YaOg*-
%i1Kd9,$FRGmG^\63oZ67CT*MD%VG9.bq6N<a=%7$5p7fkW:JpE<g=sFdR$8f!cX7/:8W\gYZ3q!S6'hd9mb^D?*]9^Oh-^?/25gL
%D.=D9F$eL(m7=0!GMHseWdeuO0cnSoNR94a?^Yjo\QHNQ6hAG9/\TuAnP#&]VdH'AS*`Xs!r_-2[_3;-bY-2*h0a.K.VAZhCE#C"
%_\SXdYF5q:(Cgsf_>=H4[Aq1eLjSB-,7RIK/d2T9M@Y.(BKH*T%.Ld!I-d+OGG1PA!)S(..rDjrXduK<eW>e<4k8r!Q_j"UhTfE=
%Q"GHK8<>-WiZ,FnU-r"]'c+Iq:<@YHRLll?@tpo^$7o%ST?'4INpE2uOUR<1U.fb[<_'\o1;P$m)TJpqj[\m%7,G#nPr>6!n\UKk
%!F%r@AIO-ghT%`%mP_C"#X"t_Z^ZPq493Yo_E1D>rH"Y']MW4rS`+`=jiRG2-a7ek5<73+j8ZJ!:4(t]mUD?1"NNUk/XHm%^W[Vu
%`<sCLEY1'=e-Rj7"\%?6AAQYKZ,mW1Fb9VOP-(u[XrV)3hD)Q'e',5Z*.-#<$@VNnYqmD9e2:GNqpr**T:!fW<IJ'-VhtCjk^$g$
%Q5$P@5R,ZGC<")J'N>CJ$ULjaA2nf(GfY/2XZB$-5mIe08&$j7VdC?#^3B5cTZ0eK'8UL]Ob,8gL%>&#l\Abr&?a;<jN@_ljRSao
%MYo\=jo$A+Gnn;Z!KHWN-Ff1>;=t(P$6C\XeYH-;>6cbtkd%@rV`>@^'qi:`T!NfmgXXVTQfbMYTsnQL2gB3Dq1Q[UPetdZb,`"m
%d4Zq4J",bJ`4eaLiTi08pIud+-(p'p*_J(hI0F#OA2FZ]3#N&beRV@)),ub;TM.d>f"bdE(-)_cJolq6ikZ@`e$rgP$[3dsH=p6<
%neIEJU\oe/f7L,qUbeUIT"0Ssk[TVE,T4`3&[S7%JY25IrP;R6a4G*m[qa^A8C]Na21p,>)Yn3cU*Y]JMNP1R8f#AfdW])V]OOe"
%#5?#c@f8-rgK28);5>C;Qe>I(,g,PU8U]o.H@!LP7^ZP@?O0*(i"m8.MQprg-E%`tYs`"R($J9G?krkR^urBtU+q@$AMk534^.(#
%Four:MNPSVN9h^RjosP1^ml(RoAY.(8FTNrO-Q)]`TC%QBa:[%W$Nc7/RJ<c<N,6V/,bqbU!>(]+T(bq%b9XCluJBTnfY.t+@W&G
%bu6ul_4G)^+fePZL]SN-Bh-!NTeXtNe7r"*E%*i%k_Bh:G]Sk+FYl$7/lc,<MN'8]o<+Cs;1o>!g+%P;$LgX4#mVN[XHhGHA>2b>
%`!Uo\LL)im)Pu<48.`t(ZD#m,e*20MT5G[aPN\0:!-HcuS[Ck'a\`+<b3i+Gi\a8t=_/7Ug3*$TUYd`_<OlN]>-hk;$;X;cI56s,
%7.e=8_b!6a3o2.,5Zj!UQ%U6!:MPG[S3Pqp<6d=h'+e\A/*j]@efDC\@D/*`/<N[hc)B"uP#EbEBIFOf4]q0tqW/hN0PNoU%[JSY
%FFr#<6^(U<%?f/an<iU?YtZnV6!]mO4q[6B$cXk[F!jIV"7q>d*B5=rV%$0AjTaDV!#X=ue<Eb!L>GpOnqKapKTpYsqB#=<aau2Q
%dDO-4ALs"@<C+,qBjmaOZlK=f>1Gt\S0"W[;0Qf59bA*$/1lQXZNp_n=CugYnYHln<F8r#Mq.=IbPi]nAD&h_Q%u>G";&GE2EF:V
%C`N/#'XPAn+iudb$et^h;lph"D8WEk>,bBGZ7<4I-q76?Ta7=d6Z?e#oU6JV9cCmmnQ<'<P<aBX8%C8m7_U'#1)[]]:8=dM?bOY`
%g-;M^p=PI6Xb[<JOhX9j--FZ&C\<Yo6\+hE/(/('@i#IZGc(-X!%$Ec1'U@UXI74Jl0Tqd&U%i!\^8c2dF)hk)5^od#Yfo*Y&>Sa
%+rn510mmL!CgM`K[:7\N("4=C,haNjU6u`78qd^iT<S`G>C!+Q&A@`sT\XLqg+B#t74Jo!=>5n9?CS9TB)Pe<nY>rf#WpJ;rGA+=
%]7*73%S8]!dh_f1E/EEQ)[q``M_$/XZ]VZ/Jr"?ps+-+\>u?3IX^@j.Vs0^cO\R$>XD'1W)RmQK1e!TdBSj]?jV4l_>p^%:bPJK7
%AlZqt883I_-41c-F?nGmnO;it&8_P_l*/U><gZmM@fTa<OjR4KGED0Hl;<Q#.RlFl&d4+_SYsAlT<59e!#tCFhub>%`%ClUjoYd8
%!2WsXomsY;ES3O'gI$6.5k**=nM^tYrWkXl#]ml3:B^OscMcQs%'%_ubq/WSi(5%H,.c^f4-A6%GMp"BaL@'9#@;Z5GeUb.T*#i#
%92")h`Xcpbci_MUKH_FmV)Om*ce'S\QjsDO$'REs<,WiGlALEnEa_X+'B@)`0)KCTpB(]g^o=kX2@&kt!olE<g^18JE-O!=mf`<S
%^cr>Np]r$*5_^<on\crLO@C&^GQK-d&>b/i4<^*tC=C.F3Y9X?-0eo1:WTL;97943^26F,-_0LWZp)?8&'1i1X?H*_NrWGr`I!2b
%*C0+N)Esk6#Q!)*-p']V'C>(9/KICE!SVpSG.r7VoZP7f4Ot-o2;q\YpfNjW=M;5pdAJ`iBqr!OntBC\.&qYNnEB'#b?\fU:nr<%
%EIP(`I'Y[#kF0bW6iC7LHBsl.'rYc=l=2QL>P%-F`h):uDO'TdMgLcU4r!\X-q,Z2KULYk_Tn>376BH3%b0/iAc.MaH!3]^gnd?5
%>4l&LRf$uuTq(CGN_!V/]3()F;[o]9^o=8FSj;5,.8+t2Z'.?;ZWj+L_H*h=0]mAHciq]^#bZs><SbDBc*AoJTn^6/CYQ[,=a59Z
%WrbIgmA#4F<Eo6##J5VsO6*Z;7BKL4qeND-L*Q2m7VC?H4BD#teNTU`K&3)a%ip?n&j#,F%i%`T@?XXiFOj!.V,V*HeQJ-uQ>Sk:
%G9%E+O*+oMG/AVZ./RK(5+g$DcH7uYJF0FZ4)<fHPfu9kep5ei:6FC9bBMP73>GG)*S";,jjmq4AQqZ9QWO0/(5\T9A<2ZJm09Ba
%>^uY$2W[;oY$]=u<;\e2_.W;B>@W&H+s5@X:MQ>hdc[AdqQYeO/@G2oZ/)GIZafl`!.QC1^H$!%p#Oa#peZ/%Q)9&6@"8&4cYD8X
%X5Yek;*=k\@.2\*TB5p1-2h`C^IJiSOpH;3!s^!c8QtUSD6Vj?#b`HGeO#=?!%J15GJ9'sWK^lBiX3oBfpPi3P!kRp>6bM<>t:*4
%mFF2&)X\ph#1omKHp(?5,t"lUG.ko*idIY)HeHcC<MLA!V]OCOmoHdo:nmqk`9rr&]+siH7Is8gr=eu&@r:2fK#Wia7&NfM:DYj:
%'L"S.O\Tbe>D23>.fS[i`k0[>UH[*TU\pN(:Ig-(Vjc7BL$Dh-qPS+<D\]9bH*(/Al4gOq`NF^%-MI.BB6gU\L&9p-;*0#sX&A3p
%GN=:<>SNA(GOe!r/pbZm=e/qO+1:4G]+,C>LD=kAAIe"L"/gDU[Ki%d%u*/#EuqL0J`!"H]`Z@=ir'j)TE?8uEJAf'JP#cKhs^nX
%F<HT>Y`K*'d_f+3d'>S^YQK\n`=i_nc,6tQK>ARI3<rIF@./""'TY+7kT6YmkH#/6Mho#LUX/U(Ibg/oi,i!c3E84kq9N1ejOFi*
%(*">`8P_sFNX@/3$L4^XqPY*6%Rh%oE-VNMN4h,'FTZ`bBeb&t-oO"F@$kK0=MK[65qrZ.J&34$9Z-t&+C0DG/BGAo=:>G=i?LEZ
%#`&QsEUb:qm)0(*4J5gOMA,ON`;g&H2!+qfGW;/pNT39ISmZmb%$1Q*3Y4_uL<03"52,de"/P!CR9[h^,;RDm:HcNsSTl[rZur%R
%KUd8iK(0Qs@*F1e*Vcsb(T?KTff[pAM3"D6KEJ%Ai-#>Xn*OhWbu'VpjVaT-c##LU:o%%IX^2o\GrG[jLCM!;a0Pi_UH-H%Mhg"F
%/-i7m,]qp)Bkb/9X"CIGWaq\$73*.@RX'=HGeGX_&9U_Z+rJp&E89'J)EKc.ZK6mpN^3gOF.6MOk8R9opmpN_jhMaU$oE5cJ85Go
%%$H!2"2ek&bNot)H4o"[D+%ETYeJ6b-5,lAb.=WX%QW=@,e09LbH]g`"<=6f)eM[,@=t8PerG`GE%r6qKTWG`l=,q4o1EJ2Oqh-Z
%[bEj)5#br-,%WldaY-5lUne2MoT2t'8YMP0ag.>$Q17?R#e!dki[BlgZF0peQR+$u+j$GZOBsg1k_UUg]?j9b=B4`7)5<k3XqLh1
%]?Q(j03qleHe?MZC0^q(9"<rc'`\75o]o=T.l.#3IleUln9$uk8XOaZJ\)Z)Xr(-paV^j_@]\-q,uMLhA=2nAbu'[\8@Q!LL4b]@
%dg7K6ZrS'?k,'h71sf3?"Bkd/_jeB7P/:1&R4S8.[23Z_3L3A+1:Wi\(%_o>Z>-'k?&lF6*$Q^mD'E#L6tS?5`EK,j155\oe$nMT
%`5VT.IG#hXUt5tq(40@CCZ/4m!g>3?ZH:M5HRc-;pEuZ#ko.!Zap&%<%"b-[V^r_\51V`=6q)XuR;(6c3ER2VrOQ#fO:cq6RS'4a
%2Fg]42;)RD/\H8rRb;)qV,osKe`ZNNejg>7[n`iCHfYZc*Q%2SklC;0q8LeuAg4AUTD*WJ?nJ!A@0Pu/U.0<RD+IPHJ1u(KY'C5X
%V_/tiZnqhmWq38lO4oqD)o88?/WF'ngeM_FU<GW<`f_Y$Pd^!'):&@f/rsH*kcQ9H1Ji]OEqq8Fc3fafA!hn&8gUlK<)uDm;$8nF
%p1c"-r%eUH'))95fWUjFMR^UJ&ribERk8s_^;16;NS,ms"3a?qLip(IF]pR';fJel+&%A93@Q@3RN.W%)EdI@>Ha^,9T'CnWb+^Z
%OkgqXohc>c(?C[L=ke3]W3#QU(ihG[%nc,'e1f;#)$_&LYI3b]eT'6]UIPip&S2U!(/IoRi-ZZ*U^s(H*EPHcHL.'Bo<b9j7@tu5
%b)!Ui["R96!#q58]JtPXViI]3*h6p9X'mj9CTLkuX39p5s3gQ-5;\:_m$TsMOesmC8@E7$*X23'R(soi:ZV%BJt9o0ns=+H?)5ga
%*RnZN"EOpmg$&'VVWZjJ,6fLRJ1!FpfeVF0HEmjJmHX'&a1\\.D@6"YXQZXjg\XAZ&icIM+,uDB'$PUsS#G+'#t:PhkHH5=\qUNB
%-e[4gP,W*eQA$>9Z&W("/X@5!Qjl#YQm'XFR'7#R'\>p0@l4sT0FJ#'9?&SM]VcPBkno#="0O(.M*M;$gPBP@\W7bC8\Z7m'"G+Z
%X*;cia\%\p!LH(&]+YQ%F^L/)0U]/H)"WY2+mR!CDq=1q:@J'r43oYM]K;.n2h1dTq%3rC9-`XPkiT;P6?t'6NRh46.kcMZB]q2$
%fekd,8\H790aOmG7I.,KVT[*@o#jcMaY',Q[g=[$l3\op"E[$)%ST2K]QWhPDJTq9aX3FHhbBKj2G@/n$SL,D2lZcMI<ilAIg&@l
%PcJ=e4ioOLnr(+f9X:aMpCghWgKSonfmFC?J1(T4Rd+=Z[Y3N"HPi*2o^_WohmLHsbV@(o>+QmZ4URcgNY/Fo63aJ<(BD.q'__Vp
%ZWEA\)a9#.b%*lBZgE'jQJDP(CT>a!$t7P?E]mX&#ruq+'!4[Y[.Z=[-D@@$SqYmThQc;cYKosQn'H7(p<TbbT'[pt:RODo];LDW
%'Y1P_hCm@.Yu<f,eh_[o)qhQoIC%\7cs9<DM:(3Os4C`0VWD8/=`!&qlGMB<DeFB)kq1$h8F/_kdaZ:HqIqQT@6%+fD4mK+2OUk<
%`O#ie#Pj=H)"tC;)@j<1TN#&o3-<Y0A>Kt7S0J!FWA[d!X2q.j=7<Z/^SVHURe99(+K=]@EGk+MA6lkZO\qd1%,eKn1'bcTgHe%E
%obsT=WbTXj$2^$j-oT1WJp!S.k-_l;Jds6oTSn]R1W9&,;6BL8[4p$r,!=;RVe1&5rU^T<YXsdR'\+d:Dj9Y[hW&]jc1]:?_9Oeq
%f8H2dVa'GBSYrmj^5^CdYk/?#hc+`W>0ltl@OJJtW-_RP@Ajj4OEMOcU(,::MLQi(hutI?!/;T]nA6AEpr!]Mp`UM&FRpd#is(1,
%\<5r1qVJ(3KHC,mY,5!Z:-U:*($Nf#bciP=.#cU0NQA<g^,fYqh08d^g'(EnS[6q47TG040\MnZC,5+;Nf6`2qf30=Zao<SReD$a
%AXrJ2S-GP8Z=e<s0Kj,W:17>XB"@ZP)b>1,.(f9>XQdYR,p,:=0M?oI$#AQb8>jlr1Kn(n6tHUr?`R@pC5.D)SI0<#FAFh7,Y=s[
%)oL09UQh:&NiGY8BMU*ln(+M%[COP[Ue#atm:M*X4I&qN00\c<SN!DlWVo,0gVXb"H_ij*7oQ^5gGaAZbNa"XWhc2F;+Jm,Fk),5
%a61.Z7&ko8.P_8JY(Z/O0&,&Y"_/G;3/cM9bV:fn0f=+l&fC$bN,7B,p`8^A?pi*6FgZe^26%4[;KL@\/!#ERA]mjU\*MS"b1?I@
%;e?tF4![T(X&T=2CFZp'Y[+PBoSL/LU(f$kS-nOV,mm&[,u\6:qW'P5hoMZp2Fosko,qqmjr>YV8W$^2,$>[Khm-]n]Hno+'_c[#
%%0*rYE@7NRgM$<CV=\etnu<go9_2*T&5cCMALs%1RC1rUlXb?cBob9CY@TeGMm[Op22Pp19ik><9,Z6Jk'\fSBI/eEPX:)"o8<48
%nkR=<f3:)$ZXj5Q'sN,@T#\7LkC1"01&(3FRq;iI>HMa^(=r?6b>TEBLWs\jn'5"[.TNQpMj?5mX#5WU=)Fj7,6+)<#-dHp5n?_m
%%@&qq>:uqG0i;!:[0)K<6RYe@n_3kTSZo<#1e>t66^Dp_!@9-sang-6%*OthTh(7:*;'Q;p?$.>L<6aL.st`hrQ_`B2?'ISQ"8%`
%jL^2-Aul.Uj<^7LD#L-+LFT,4[og>4)q@joXWS:=<9J5%A]pBcg-uUlOr!kpfoAL,5*b?NgZ_<IiXW(TCe^14()s3IAuTKZ-Zm(3
%7;?g5JMfb/Zmm^p$1X]Qn(T8o;P:U.C('X_1S^>oqDRrp])"6WmrJ592cqm<SOGG8G,p"5o<fp$?Agul(6[;#F6VHM.!n+0[^?P;
%ES%[(1>?ja^KtAT:%m491l/_b)<'iu\,.1Lh)d&m-T\hCDAh1bfE%fm*3FRahfUpE+];ZQm7DNG"gMCDWdlJZlf#7=[L(M[qO*Q4
%q6Q[Mlab*OQB-K>ra3/#T%"^L'4)s.P-o\Jo0\R`ijsJCrj-:RPJD_c@lRs1?J*-SOXWS$&ENA'!g>m[X+_e#GInd-)dQ5=W#h.t
%4`hq]*Lk#o+"Td4jW)dV>$)sd-W(p'nKdTRC5.ac9183U,S]Z)Se)]4@*'8@_gWK8\mXQqB02'5G_.N2,OjWG-]UW9>@Ys)En?kk
%7(q.;/G^aKj2k&:2VdI!H9M-6pNU,?@i8V=k]+T</,NF=G.A8742YcFi(Y#?_@^r%LN8qbeUC>MmN\UlD:WB_a<XSRQ`^Oe0B7_0
%$[-c'f#gkq>GOZ<j&Ed3Vu$&#4[8n%9CI-*?Bj@V-sVN+&UQJIK7DV<i,NRXa3/`@kq`^SLeJp*"5@aka@0lrG4QmYcm_,/)8?sb
%R1T)WkTXlQXYs0=/h:pFj:#FO)0HN,>g$$b@9hiUWZ5N*f<1mk9eu%t><%VS[CNT8.Q3A;Q&rJNeKIhLgnMd<AJbECB`\J>:mJ'c
%*_^nrpe[ejka1!@NGW,aUF?Hq(1?BaJObfECGc'*mi`q1b)B6(q.`BX+Vs=)nt)qc-q"7Ze?5keLF\,<;MVRJVWg7;n!=Ga:(G=D
%2W&tdMV_F>j?c3/RL?BoBX)R=XQ4b><B-b1`If+`^]K':]gpKn:n5"*e<fj!'o)0NdA7dRNdb0)ndt1iY=]a1=fj6D+@><"Tk(5(
%QaB>(%T0SL'34=[,g(MKA>P97]=Q%eWOq)AZRgG^38BYu_+!0/Ah(5@1j-MV%n28%C3%\1VG9B8E%MYlXa"B%(`j'>R&meC?;Z_0
%;gQiU/_(/ZJl0''DAkY9PXRbl<A)$SC*CWLU^2+BPb%H`FcoBgfr8i.XqK'cM.6Wm)4tH(J(=Me%l'HJ,csg^6h&:OJBRLHA<.?'
%oadHZ_q#dM&AJ#jk]\M_mV[:t]79[4Qr;ZmB=;b]#m/ri2Q$s[(:o<Q`t`LHg`\;F-(",+`3Ei\/0W9D'ko>K's("rjgY+r+F?u3
%!AE"k1Y>O"8kS/\9gJgq[EOQ5X_mcd='3*%VB<RKZqSl'7%&&p,\^5=?'qAt1&=F)d`;<jiMbYJJ+=nl5aq22q>R9AJ2C(AG\hAH
%W-OpR]qf,&Z?H;=$fLTPY*-T&".ZhI.VF'H@-=ljS'a/lLK;D)6,F9]=Briebehi%r3LF%7AWX]p7OJ'IsTD/I8QohT0Wd<\q(r&
%?Eab"l-SP1O_0GQ0-DCH)31_UY!u^)/@orX^oHU&@d5r_6:#>PgtYtS3"V2<Je;Y<")#.sa"jr_!rFPA&ZN6T`I8`"7=g!\p2#eH
%Q`6fRUhHr2Jlr6kEpH9;b107n'Lo;U'&Q3m=f=dJka[3iL:Vl7MM="!5W4h^Z3B?gXZ=D64l,,h@"21TD3hOU=:'209'*,_1ND;-
%lUMXQ$6VkVY[45)d,kL?Rq.R93TAQ8g.ZL!Ih>H[1$JRE(i.Pd7HBG-gf!dVACCf)QAfcNgA*@@>n06E:-l\-)NHcTZ<OlSAB>*,
%EJ)[Linpoa@QlMp3u#3Hj:?:fZA5i2Xl*baOhK,`MPDQZW"#f]$&QN`qic0#O-ZABIaqcG^i6Wb_?!gqpJ7IB;E'#o!G]4@,WEhM
%Q?,P1HCYf,A0Sq@<tV;>@Xq+IrY3DU@OI9H(+=kriDp7$,MgSq=tn[6B_0o1gufAFfl5KtYhm0bbE*0#<3q?CSH+V4)Ht(n@FBO6
%O4ltd3aFZgj7A&@DbLsu(qF$**Q<'6mZd.F&[R=8h<V<Q^m6^I28*1g,Au^i*]kLBJ83R$P4=!tOpi\Rlq]'4*Zc_lP>!t?],Z,D
%Ol@655rBn2%!n4nW9tq3VC^5H^!)sTkfHj:'d*9`0TrXd)DhoV%tFBFpRf]`")6ZR'el]K6HW0C9[lrI1FX[%Kl=9MMGt=j`Z\I#
%UgCNi.fn8;S@!/U(?LIYG)L&@U-[V`-1hmde&Em#%9[+>"drT]2Kcsci_=HBP-MQ2WBmj8n2l`_Z30,Rk(jA1o1uD#n99_#5CDi`
%I1Jf\eh`SkjYF<<BiEjn_nJZ[GNc/4h89i4l%.rt1!UjCGCao%e;@)G+%:WH(oLht,Yk]<iXG^lbV9ou<YqDN9&$O2qB;Sm,mGBe
%D%84\N!!&:dbrePcogZfk?6n50&ZER>u!)U+,(\a=iFci/?om(pWpJ<J=!]e:.<Enc=j0tnU*`g.B9DMB]b,V](NMNg:YQU@Ss3,
%b@9[F.+hU-QJ*Y<"3=s-`XGX<$ADC%0O*9bg#Y4;)p05+8!FULX94[$G$$R:?Y+0jQ6aa*$\,)dK<*<aIt,Q=F)4QjGK2_1k2d->
%D<;=6;4O&mnBE:i6[k7<3m]@%8M1:l#AZ?0/e8$G6H,Ohb$4q8#?6&'Zs>c#.D;7.j]";dQ#4bb&>q+'3hJ@EpZSM9rp1<MfCP.g
%Dq]3DD+T:HdoQa=BWue2[7]7S7Yn0mX8-TS2oi4J2M]&,]H-2'9Rd_&qq]^/mV;II]sBlISb.*=]+J-ueQ"3RM6eaJ:mEdb5i_XT
%DgT;_]$$+8ICe=&;uY^UJ(\;OX$</)5>9u<'V5FK]GQ>=cLA[lY+,%4,P!sp#:I\I-UD;!_'0&fnpt5>$4:Fn5c,>6Q)Vqi!2g(o
%oH9j:<0=CB75bb%J+/2!#+8.&>+BF[J]_"4_Zk]r<gI!O,+7B7f,BDnit>ue@["oFV:'$P,rk<F-PI=\&:/?=`2,k!d;4n5?"lpf
%F/dDp)ntO#L<V&M)[r?,@H8@rZJp7)#Du-!lr]#6j`a2ZK:Q[cigH%&l1rh$4UkT8me,p7hk]lqc_i\d@Es12YA5<]H;EdXLLq<]
%kKGqMh\5J*E?m]&o8.C3pop?bqogG]gug&&[c`d"cF`,t]?pU3CuC!`Sjaj9TS43;nDbWtaM\Ig\=W4(-i3>>T6fRioD[t6]?u.9
%Dt!A8WRWJ?rEmlHp0DFRq0%1.a/Saf?dDGqk#"4S\*'K4hRnU(FF_U0F*o:SV0_-K\UL"1chX`9k9YH2j:fS_ohdkZeoAHP8'Q,=
%T"'6@PNXuiY2@?S$u>t.7!..`V4eW"JW#g8U.`R8oLDg2`G%Q=9'/u?d>*`bSSC5+I'^+<^kPj9W[so&4!ms)O6%(PN\b85D=4Gr
%QFF:a"9_0lLN%j6%ksQ+_%6C`m%a0)=D<Uho$sm\ReQmmS3:'cLV%*;LVM`/*<]KSU*=,`EDK"W.SEsJ=,M*c%V!gV<@g2%N2X9n
%kBkmD3hP>YlEa>Ja3P]:ImUfIo;:.\PUGMS%'ql9AtqKB5%^NK<g%)i4YaTS)pP_NI'_/*&04-d28#O5BT=\-=adn)BJc$>dKpB\
%mq*'85$bW^fU=k;f=%QhH:Fh#d4<f>bPI7Q^U$E!b4lsqgKoU.6SZ+4Ra/M7-Pbc]/c#Jn^FIGL1$:/Ir>`qm80)Apn4t)HcGe$K
%&3E/c@Pc^H!>:%D7,m(>i0,tZT"kA0%(t+?S!/k"#Ho8WKElA`+:p/Cn(0c+RgWM!0G]NdD#*'b\.^gkX,?b)IO-h?ZMI'u^/QQ"
%Q-Ib7'h/cm)0mRD4nag62ICpA`(6SEE%F(h,e3\N=Q?+-:X$Gh*^&;3d6C"Rqr%Ac`:)^a^!ZnaKYXQFi,Z#graFHOLd+\D2bD>m
%oPW0NM!lC!mI<LHarmFXT`ppBb%9mkfLO=r[`ZSrK!49AE9R@aR:-o4lp."Fm'DJ1G1"f8JCcDCgV\(/Y\t$qmNBWDJBg<&\cZD+
%iU4:eMcG3Nn2Ji<1j2ahSFJ.A_](3K5"l`4]O9Xe!dfK<Um[Eq)FiUDCC<fq\8T"7K8;T[EY!6:3T-,DI,4N[.M]URL*sqNB:4ES
%:%>=S_QD4)C,u3l&#VV0X!;mjEoL,t3)qMB_995+![P70CTN7^%:'fFGXPPi=t+[a;JS6LF5%$:pej"hAMd./rA5BUhU"B6eV@Gu
%'o4hl,[SHH7k=co'AcER'g2eC#];$OH5)o#`P+b;0$ukc$!D2GD%!eL=dKn\Q\h[]MC!1I9G[<MhMk'!1(0Gr6>$D/,PH?JdLQmg
%M3N>uGUWu.%6N5$d=nN&E9-?DDuMhd)N=_VA!R'bN?Toa?R8b!MIPMa!$F-3d]1u.Ys<Gk%_EV?S;'osT#XK9@o%ni"rALBW(ZBR
%UAjkL%1oKG@%^i.D\OeD/N3FYjag*JZHD&A>$892iqP+dOK>rme>@AL<Q3UNL'^T($q)MQ>)V.&$gL95o)RV0g)QFA[]?[VFDPZ@
%&FGCK^PnA-NDLNf?#[)I]o9g!oK\`VpJbEgKups,(KI8I6q/U'&>j-"nJ%-l4>#tA#7r`0Aht??#1=Z@'E#"b2'^$YM*\*6=dFH8
%Q>hr<l;uYY7C:=`c`Z#s:MNHJb1!@R.C+rA_?cK-BaoJd=5,H-'6IFl#t^MYOO%Xm2\q*_pTP7lRSfqtW!6(ZAGart9u_8eHVn9&
%'3G(q1sY/8H@6^L(l1(RP]=B*#L;1c:M1[Z)GRjMnSo8omXG1%i)3]"d:r[:NE"V@q3#b@4t\$pQl%E9B/!`Rf4E'hGU5I-"il`B
%B@&+t(;qCKK<6U59<MpV:dALcNKD\Y`YpO<njsfcC@&OMeKV71;"ueZo[?:<H;1]O#qs2E4Z-dQ=\M"$W1#d8-o)qa#pYp1l36"f
%[$;i`S=(+9YDC\JD9->%dfg@3dna)'WLB(.01C>4eIY\`8>/QhTqb\`GdNB2XL13"h2T$\/fpW'jlq;q@SJI$>)QgW<*>+d(6pM<
%.,ad9$L&a'qTH4HAi_;qejW:US03i\MP$j\JX!<?;8P@HCdgrYj==Y:iSI1=go?U[M#:;ZXPb2>7VV$o\`#IK]2q1_jf5e[$K5((
%o<5-G:F%@iL3M5MluR<HAp"A:YN.aH&Mae2WhB;BR!g"^SJ9c:l@O9Ra!>7rA@ngi*W&=3CgJ:l!;0j]X>$+L"F@Ne2Ncob[LaoO
%JCN;Br,rU.;,B@e2<s?+H2Ge\9=tH$<SKW>#itS<_aipVaQ;J)VC5!8l@lLZeOGI;H:nu\$&l-s<"j,QK!+CObr/kY@W#AE(k,jN
%T,oQO)<@>gritUUJDNl^mq7.9HRe#O-Dk5Xp9R9!Bqn9m3X-U1NLZDt94G9*FVE%+3a.des27;K<]UL[`?6L9ZDlJ6Tc\C`5rQW0
%V*HOpSr^Qtg`'D3&4jO7T8d]_0/EL[en5fbh70$c$fe*"VL`6nQ?k,6q5!.ioK5thUiQ7/r>FE/;p^\^/sASKH`ioE<VGalq&_LP
%CU0%I:h[1IoiQdW4@mXoq4[A"20pL@0.q#Y&9d@f'^6pSrl\)/qE\2a='51rQ7:^qm^Q"I`ELY!CBI_kg57mr78*gl/LEB<?NP?H
%JEu!H,>r!^ECi9KORg(RAC_U#.S7G_Q&89C6kuF'S=7VY_hmDd"6b93/n1OEV/44VAbMioK=YO7bQ^VQf!1egW'iN']c%QnVs43%
%:HbQ<kY>4&rmW1\>cD)6Fmc>FGO9n:->u\'PdC17q>Al0D$5]PTc<`G2\KRkeV$pGE"O0aVsms-1WZ:+BHn^m^M:uYN7YMh2,To$
%k76fJr$Y`oOn<o2Sn)Mk:T-j:1;.e1\oon`?*4IA>.mS['ahb=;9Zns8a%%Ge2QEK%6co)bE?UEP=oL6:MNip/!P+<*hdM%&b1i:
%Nq-;pjkc+KmBhP&0S1QcBJ%Bh/fA)Rg+;(2WaQ_i*gV'%Bu1BPrg'+U;i4baI.9pTp9GGBq`tskH6X;!357g(^)K^eltXFIm)n/,
%:1S[&L/:K>AJ4@u8D%;j4k25aZ,m^dK_U^L;pj6;o]E)Yp5SQ<96KJDa\qa=*_%(^/_<VJV5d0ZJriZ01(i.Jj#52ISjgMRC+fIR
%mRVCCAUdERfL[&YC6,I%CurS!L!422@tC@Y+kqU#\U1lda/7D6,hbHH[)b'2D8oN0e\D1PZrW2:BLoBHgR9-6d_6FH<6gXQK2$d^
%T.6q[=oXIZ@YrS?h:f5<>MhiC'\`cU$tC$g*a9/XkG%[h[Df9E)32.*-dN)K`^C`"G05-'/BA\,Oh4qi%KJB@YMuoY^\XNG<[4k>
%B,qq%>l++-)#KYUpi5)p>rE3ePn9!QES9>E9*Sj'i"D'hWf^*_!J*8:Jq`?I&l:#Sks_n(o'-Kj<T-`pn!,n]%:RuP;3cD&k)!^@
%PaJB8NpZcDJH=4`.SXJjjL;.s99k4]A;M2TOECYH;Gn8@:o!f-,"8CaoaS2Xf9?hgb4Pfn%ZS4AQjX%ZjNOhp`%n0>($Lb_YECMV
%e/p2^82[hN;B5qSCfj73:)g>4\2qlE-&/XJCr_KnL7Tq:<tkI:m4H`t&R'YR^>&o>&qM)*.Vmkgfh5hL6VNDqVAqT3S$&`tC/P^!
%F:6k<U/X\9$.Hb?OU1SU?\DDCI4$lr%B3o7-[%h-`;V[X!^,pgk;X\pPoR[o1rCYu,.8mk:rro"E6G'%KZMB4n+cs:/T=@Whj5c=
%Cb.RR4?TY8(8"N>*P#^Z^qSu!*)O.<M*s6[B<7g:d/J\jTMA_P_4[k5fM14GRJMCB/".Dl&<%[uD/[CpY_b1"\*6_Y;ZTe\lXd^0
%G.NR4"70bZ,:"^_\FhL4h0RYlNlia%7r-nu@-I6Sm24qI$Ml'rf[0#^9"mjjBA=RsE`NqN84@/0#mpo'/\-1&/PcGeig0oB)VSMg
%90.fm$rY2+\dbP5($ZG9.eGq%)A#$]H&[3-gFB7LpDeao^8V8F?.N$BSr,RansQlHd'Rd$m':k-7lAS>nuC,@<OLuu#_/k#;$*;C
%ii;':qM,Dqnq^FUR?3O&D4We7AGsSG!eDkV#:a/'hMl^j=.?[n#$/VuGS%TKYH2]!3?N\h&M.Pm(b@eC6k'I'[;X!ORagX,_V!eD
%9O_A7XDBmV`W7(+?Aa,<]^uq<HMZl(b&)dOCYtK%O"sCRS9p*LnDI22iAu56ir.FR6K>Tbmpq;iCs]#=PruG4`3D[WJtV-bJ@]Ub
%%aI%s%+rlqbD3N5SSX88aO9[haE$Y4"_Xm2!2GK`ek7\7IJ(%GiquErG!!.$5(':jaOU@0QqWgO[QAZYR+lF'\L4RZe^!Fd"TbFl
%;ukfFY?&cVBR6M(lIOe(;\js8[D!jk8ls[_abGoqJO=5E=P"RsX&]1]Cj$'UXn&1Q];^VM1(I]3OJg&po!&PLQlFD,qjF<!+[t'E
%JJk@4r*4'i1;lFW0hbX>mB*<*b<f73['R+e[)E)`@(tbGo1#MfC;CO,KsZhq^q<38h.C(0bE[ZX1UDtWUC\d-YO#Q:+;hW9Yi4#N
%,W^\9X_./R!3rp0IQ=<A*mq02A)nt,D^9*WmE$dq'>*k`HSc!9L2#bkFKjQ&iFLmM:!sbUd';,QF<^[Te,lZs[A%Lrm:1%;W'Sk3
%0Sst3e7SkmS.3S2?U!$\pl>R/9XEEphH:9lH$,NaTK3*<3M\eFOL<r?'BIa/fF2gQkkDe0[isK[',mQ#,W8mDeXc3[C:EDSqBn8X
%:[lHOKs*ArC_:S54kXrFrcGU=dg^fl#"OG2;)b(Uo(89Pl9)34C!S/aeksPLidRca^!jb]2;A;R4,]+4bLJMb@e(5c1L90W77VQJ
%>5%-Y>BOa4Zg'Y'bd5l*Zd,oW*&H!KXB[!o1Y/.eFcQa"B.1><V:dPXBk:nIB8(W^RW$e<#,#TV3eio<K"7c4'<BD5!'N]s[4-SH
%[$g*@I,/lBi4XA1c80skF.HPPl\RR_3,Xb+pWO:mS4:i8o\E?i@<EPoh];;O2oi])*5Tg@GmNAVh:h3Mf&K/Or7I,NAb)QmDVWBm
%E4M+8,A;7;O`!6.7uKXb!>8B%S>E%@5!bXF4\M['/fu>3^>Ca3LX<B^:dA>mpR0HEgVYfRUY_$'B$UMPdk:YiPusKI>,N23]&*?>
%6KSI"gmFSm'l#V&c6.:?HO4OVqMk3FgJ5ChJehZV@m2XU^$q+"7X>\eEe@:s&Bg".\FC^iMY&1NjG'PE&=+."qXm&F5+1kH[fQJ9
%jZBW\';r\>00DJ;1#@=7hfB$oGRg=+iOL/1cgk!J<Xq;di%P\aj[$TjE#@IgWSH;5l.W=_cDG&2M//75/hWaT!>DaqX/iD*9Sp)h
%rJ8a^*ft1D^PFFolggpS<b"Y:aSE7t=4R:#Skl(C$$[Gr4"c>OA5rkU2X#O?pfgOtlis^MM@<+Jbt1NB%odNb@M@-61^f1/Ug)+1
%L&-A#=kH%YZ.3f5<4Eh2P:TF$cd>o;Yfd3#*EY%&T(7^mieI;Aop6`j",)0bgS<,.l>eL:!MT"I2_#>#WN+68_A#Vi,"2oG%/^R$
%M&KJ,kGG/LLc>o)k<L2TFn/?B*kL>;%`:YMGfYmI"S1\nK-/K$a$Z#<]u6O_B0r27&@E1r##`;A^3K^h-WiD?Fm">IHlSa\q=C81
%/qhT()L@L`F$F>0H!A>D@cqWVh[@#pCqIR<C28=7][.qaCU.NsiP_KHknU9gOT@kbMcm-BREcBH(bG,f;ea_;N3;:?o[_NhW0p+s
%EIh<V%YW2_)P1a/m:WcrSV4"Z$9._Ej_0]sY4Ahmk1<0;1PjBJa_0K+85X.odPXGFHErWrW7RJC=O/RAX!YG@4m=Y&,"ca*dE4on
%H`KIu%:\9:N$</%W=hL+l%QoI,XnQnLYh_-<oLB,2%*s5SH8+P%FG3'2E@p5B#Q=R6ZMGq-lP?^=S,1g5i`&U>RQ6I;J[',FujaW
%,W-pZ=l8LP`+0#@)3f"6X->fiEZ33IGagL1-HFpf\smX<ooDP756F,5!C(lQaTjr)i'ZMUeE'gE(f3BTOLB$^#sA:b#_li!*em?Q
%mtiG+H5FK]_s*1n.T;6JROeXd4=RCg<Y%M)VR#0Ji$m0]73-7iP:"s:.NPqZLb97h/jD(k*k(a[RFrcF5\V&4m(ffM34C8s3"J18
%JF%Y?hD:ga"3>c'mMM<X,obLe>sUIdp=eS-jb&u$Rpq)/92)[^YSj2s[[I2:`QW?'T56IteD&_!U]Vb&!pP*Vh20GK5^^k?J%lj8
%TK@cdJA_/hieL[Nra:[gVPqh>]G.am^iokY:N?MCqS5`[\7,32&c<m%n)jhdm"(L7E"`js<K'aYJ,>jeL8r[E:(Fi8A7JhGLP$l\
%;A':R]+]\i,`Z"NrN?,`GB\<Z^VA%iT`>#kr0tJ"h=(CCqtJuts4cFYqn)n+ndES=X+Kj32ui[/[m.P'gMak,`@q5\]D(34qjW*7
%iO`IpipF4iqos?"qo<W)p&-!3obYBas6euujOXQ!-D=A1>kQokIfJ6mro="N^\rrFr:/M`^Al`uHhj02nGD*ks-nLens'1Q5Q@YM
%5+_<-]i"_&p##`A\'D1,q!ItYom_JkYM]<3n+)OSrPNQ&[Jn&"-N2$OY-44;^O7,Prl=pYhuE!9s0@,HJLAR0p*U+<QTt%pia4OD
%@K.5IL\U4irg*T];0.-@5/-s>5Q'[<a%u`o2rFZ7qepuZhu<-4YC?65Dgq_]*q<_f0)S/uo]JI#rnX`fT]]%plWE[!p$]Zmrh'5P
%qYL66rqah4J,J_!r6)S)ja[7&GMdlJfBWT(?2O+0G8L5TDh%AZ+27X.s8;99n"/>0]&B^PI[TMG2uC5%qqLl>5CEFMhu<UZ[)[:o
%r^XPASObF6nQ5bQ^MB02ojjq4_or)NoCsC>B<[60$M,>p\Z]\f3j$B>:&<t8'L.IIW%Xc]nO.bKO8gSm/2Wd<f(f91m!hIGK)29.
%rQe?HJb-H8gN3B:<3l>7D'_hYN?nCNCH=A@+Y,GI(K'fmC2H#j]Etn_6"5JWHo#s_#gE>1^6*/,Rp%\%RBaD$g*b01U,le*X]]28
%lo$cOT`V8K<eX/0nsj'OrDEX/MC;Q?.D/0h=j5ReWP++`^q'[uKU6%,S:'T:`;9]_bG0Vo1@hbBYV#FPB^TgQCVk<>Pc]+7ipr)k
%H;^_[KY!_Mkk\J1R\lf?aN3pm[I,:C9<>A[-Cdm_&UsUt0-hAA!2-5al8FF]9%+0i#Z9DOpk?%C"<,Q2^3:!i(XP;I6J"gZ@>X4+
%36)D00#]Ua?!-\4-Dg-0+dbj/$[LAq-<(G2AgRFA,iP,!F,-"GldUoAI)spc@aXaL=gR<(XUmnVCW3_Nnk6[&L-k%&#\4*4Yr@g/
%U.k2b=4:/R*"B7d;M.)Cb_Gm5P[Q/u03$8+Ef);MKL*:.P'fsNaG<A"hgS;qYkHjPXd=&]]A_l88kIaCTti'9q6LVa-<r4X=p8'l
%nkc54+d/cjpi(hkY]1L)Ds@ZV8'+nD$A>[3U7A`DCTmO8"uSdL3gGKT4eD2EKA&-+6"30bN/pj(1fG3Rl(!jE^HA!YnD\JWqgREl
%HS%rCP`IB:%l"_*ZmD_8g4rq/_S+Yd#VU<$/tRH^58;tI3?u`V.Dr5F3IqHU1NX>t2oJa+$mN(-%G#;,SKeKa0/q;)`tr+B02Df3
%b@]#Yl!mZ?,R?N6C#E09(DEtBs+mOS-K0h7eu1Z8rMkYq#0U-<\"_$Z$.kBV[ho4h,o$&GY'a5>[eW<MSLVi^F/LoYQ0,&J:]7mX
%Uiiqo?4_-[[[8Uh<Of6K[@1*O(ng%l5.)62%eEbp,&#)c]*8:n=*Wc4W(8>UAkcsjg9@I+MJeYQ&OioMDH\LT50C6h$>0or[.<>!
%q(a7>)tqTN>m-?I4tcL=n_Gr$6.r5nr$6q/YZb9Qkh:>>%9J<JWYYAP?*1bGb>[;YP4oFg&J3Zn&`\1_@5c'Yo^O6Q2r?AQ5;A7B
%/7NBJqRGCsLq`MN&4GJPm]_T"],9r)d`=!-Wm_O)+n>Gl>8c"":T\0H)@;P/W2a`66gCh1D!FB@,?Ls;n]B9AA&A4,#O`YkF!@h<
%Nl0U3i"%p-hDi#J$su1)0>ld+4q9`k;EE=HWD_#5He[`\g7hFiHP:W(Uld\BC>E`#&N=E&1qQUP:Nutgqg9;fG/0Sc2153N^,sZ2
%F724YF98u8NI*FOVqBaF?%46"McYH$;.:r)"\>4/XO<4daVcj=0MEg?fJ/'6Ge-g"%D<\&KAqa9cU#%p]e#MmT\Hbo:"Y0BG=$]^
%S][bk5NI,t37OrbaPBSYNkO2rmY08^rJ<>Y3DjAT5t<MU_b\\d$t5G`Yo(5SdME^>8UQi+XXi%gR;k/??ji@N^3g]K%%aJ?rch<B
%Dj?=3pj/p/Cu'79Q<1Bb-7,=[Zp\U%i^d*O'S[]*\sH\Uoqil19mhB+Qd=[WC[[j:%Ec^Ah,u2p3TD2QhWjt5L`oQbr,o3U,aNk@
%WV4#W^6+OO1I,a)i9[@+Du2](bjI^babk8n^9^[Q".^Bh4+!IDgT8]A^\o&!jI7$rKBol9j+KM?62//OT#e'B,qX5g%3VT$Yp]gB
%;8rold5k@&68dABK.7U,&r1/YIn@U[/85mo*N\f&qI*7aCJr*!97#GXip#!`ofM$V*;aZSP5_7JRuuC`+c;tG"PunI8nr<)#k4*$
%'TX_rnl[4qHkX2OLiDaQ^88@WrN?J:oHqHU9l76$n]L?cCc8tFFPr74X`aku2Z&:s/\7;M^WGbB=b3L>XK?q"#QRaa'"FF`!YMi[
%m[tah+@AP^?K$3H!M$,N-6qf;a;BS-5=9?mko(&tNn#gg"G"M'===DG9h`FDFL";gcIImNEqP.JPGi?H;piHX8X2m`cB5ONH=]oh
%ep//J=5B'EG>D9lJpLW;L6:QT^-i_;3nDfg7"9U1E_JuC;po_l/RY^N'A6YTRV&#.6O=>eZX9A8DB^4"F\<KV$6ZNT:+XmLKO4^Z
%)V$,Q((Kdm"3;$('oX-B1PJH"Z-OjI1dEdOk]r'NP/*f<5_4Z'C.]YXj(`81RH&.dobKG'ZBG6kn9q=+HA6+Kb[_H8'IDGu<\P)d
%LdbJ69;MXh?s]Q^7!*<<pE^E<Btc2W)?_:&Jo)StZZLK/3YYlD3Pr7.qsjWr,+b=s8"jcsY^DDTN?YSQih_[YL+Q!#'^@TpPnB8p
%'>RI5_->TmO*K4g#5oU%LNcW?U<f>ZP`Ub=9!I%caJ.?5!g_A-?k"JG*I/`'A%?MV5Af-jNC)?U<g9a4@Nsqk(QPeQW=ID0=kDKi
%^jrV&D"-qe-E.Nn4D*p9TUsh7#h1)`]_auHhb/'on>7':m5JLMXiAm8j==%Lh$i\[an*-Uh6?V\71n*="RJ-qO2acVe^.8b-X7kh
%piaauB;V&GZ(rpG/#M*6T/K\9F6`"6F3+rHm\p*)j5JfNaG7!Zp@'jPc%!0o*?*&I>DIgZ,NoL:\d*c:jr4h)1s=-9,b)9LFmZ./
%:,V"r'1_RPlH.jnP,anI:t)-c#RiXN;qVR0CG]KrW!/9]&-1t;[HN6LO1LUEb\.hCQ/ZCYl5DL%0@QNHk-iC_feJHfT:iFfSt9eV
%Vj)#6!op>R<n3p>n4i8oP[CGY?&:UeS(R#(;!-#uqJpH"Qq\dZIjgDCN>ucFLpnsQ?'G=XX`G2[\WZI;.-@=K?6"OIQ:N%+],d]2
%!ZD6$$.W)J#P1tC)3CZHNS(f,'f*)N=O/:[X')4l>Um&$JP*mi:omL%lgUjn0(#%W_Md]NS7]5kLn]>Q5n0ts,-h#Yd#^dn"l8?@
%1a+1037@B84eLL#c!;F@o2].pp9`H/[t]@=ll?>hZprsIEdii9374BTD"MTgf#N$8(NoDfI;W<:N?19:)7Me'<)&3LH72t1p3BO`
%W[d^Q<>unrI"1U[WcnpUs5\.F)"0#%Ebs.J8Mo`:TXd+Y7>b`X62J3P\6-?4+%`_s\iWuF8/@(V5kL_(B+YRb2`?)TXo6r4GP?s'
%SK>82Sh0*9_(oFoSJK3m'3G[nfdN8P;4pf`E\qJth:Gc5&d9<[.]:09"ef>E-?]I`N9[.mG"pWOC^TI]6'`Z&K9WN]!o)NQ'tb*<
%FdSVe+ml;r*j!lrDND2bfD21!"`O1mDlO-d`gKCQKRkOOf"B\NNK)^b@4;NE,eL^ZfTYrqQYAMpEfR#B5:PmKL9<;W@i%0(VPn!o
%aXlm&mc/#<R<a"DD&/o;/3Lrc4P-'7h-$0&!e.H+SPA'ZSTC.N-9^`ea4rdIj%@YrrUosf=-kP&qRQoI;@)(EeOH0F.f`Sc'Po@@
%ksfD\`UloHOZ>$_bn*]cTZ`7>A40U@%%Zb33Ju]O_D/,1S3fKQNBJgTai4L$B43FhVKKM\FL04hJ9F9igM9Js^mDH=J?W8F!\3)^
%MFd0>SUGn]q^3-hoq8Mr2=h/FU'#q2)-RfMBE%QJ4.#Go\JOFUIGM`ditK]KI53#'i-BtQA3RZ*o;:.\'7]eK%.cJ(5?@jSYQDR'
%0c(A4nt.I[o4WZ#Au]dqSp%;M)aE!%q[dpU>0$1+4lk(UG22K2DRlitb0JJuY>&$%3_CJ.Z&&fX>8nh+95N(edP7YGQLM>V+"V$U
%Wd_1dhk-;#SiuO"J=oY;`bQ>o9X(2KV=L)VK$:2q?Xg-B/B^FYg"0$JHdp5o<7Na>r47.;Xeb1gMSf!KAZU>Qg/&NrG0FIooM0cM
%CfP9&nIS6GrAkYSBaO\MnY8.n\rs456DsJK.TCLb<E1S;3mk98WB-'fCo3[oH"5>WRsJ\8%,T$3nsi<XUKeM'piUI6_t6_CHdul2
%ir;3#qCr-I=k'<`?+%#O+Tr"&&?7q==B>BS@bG-jWj?\#]G/mQc.[^_g@E)VD.Y8V'I%4Fk;t&#O>LW"gDs:\'E`'KWCpM-'aVfO
%WgJUMiio\';l(hWb&2@^R+]V[634EQa7XU@5)_G2G=uf%9;Yen)u=qX]eC0e:$%G#&QNK[^6l:+s0kQW.^W668d82=(@kcIb_JWh
%7E/fLiK[RYL"4\<XBB$ZJdk^bk`kY=_N%r?l?l=Vr4ikP>;d@!\!Cjr$_^S'bt+J+\6NYRB&qI*S*F%?p<>Q-ZIkUn+R?e%ZrlK;
%N*QdW19G#]%d4[-fDiM!WSahO<!c$J_6pq.)YGfQQ+8KN$]08o[Q9qtAMshE9hheE-R?XNmltZoX?JW*djA'b5Z.L;p@=d<0#`5d
%V;#q5MU,^k>#W`R=Z:3[e1u:4J7UN:+?jQsAZ>?AmBJuU"I[upmsR]WeCm[i%2PQnH(A]C$d@b@,]u,F2/<Pk@&PU83_WO2WR*rN
%+]^Ire,q<s2J+2)g/4a,H8t7kiW?[:fA2GMS]:3>q9)PDUuHq8og,F!/Pq?)eM]oskB3R@rM(Q7-*O>#!R$OS`2fmi0qt);K-.qL
%0e?5$,4YK74r#IJ&"s6];LE:;;)WE*hl4pL]?f<3kA+F7O^TN`=0A)4/DSPkMI`Fq;-MLeqrNaL,^n<oc<"^JSBjD)l$P'^(Yut5
%%\bER3Bp`Zi(Qc*/@2/b<Y]I;Tlk4Z1..jP[>Q`$ZtO2UW@C,#eG(5Fo#rB5pnhZ;CpEb"lnFFmp:J^=@k]6QJK!nb$&cC/XkuuF
%/dj/&J!MGa2gA/'.7?$3GskRT9X2m)b]6XU[1OJ?%&`b9:k$``OBGR.C0c]QA[QP$[s0D8AZ/:ocK]u:"7a_h.eUL=dTBobYpr't
%8Sp(##Ka;kLt9;-YaeFF5q^b!KZ'B<(5EXE>>J`gOU;Q=jN,f\4Y=X]p-0&HW$57(."gZU0[/)kStb@iH7m_X9nNjfkY\o;9pM]W
%C?#U2eC)K!Og5FkLh>3E5k[ne_D8KABW]>[:afM`ZaKFE!P46=6H^$+X=+FKH@,uNR[jGTMk*O>7eqbQC^Ls)_Z7#CXT6o8P5t=I
%=YuS3&-pU"<10!\j>:t%MC?kQB$Ju=?^Z[j><@2h<>%MnCH:G#OTR\19(*oL.(F^/OSVLp6jmnAE?"+FHCuY/+-8@LWkp38b1AhQ
%q-k,I>>^U)[6ggS/W/%6P\L$RWX>*)"pgU-G%ZR/aR>Xu4=Aok)<V&^f@Vf)2UKaXs6?V>;iU_'1m"JN:8RTU][2"?aJn8*A`EP[
%e4<LF)'?:A(laV1W=J6f)`/M@pK<E98&.]HSZS1h)Z$hQiAs$ah%\&+]M8o[%*>n*QTZIk.fuSZ].8:O(Y&Rd[K[a^jQjMO*enkd
%V843EUoYL6OY&,N+R4>`SiLtaA*oh!iObM3Br]>u;G81h7_]LA&Y(A=0hM9LC58nh\lKZ$G#Ne`'?(A,FkmY,d448`5`:nGU:EW+
%bN1KQkiI]$jB,FN:COHT[[L^VSKi$4O1^HiM7`_S?aj!S5GT1`U>qR;OWPYDbN\)t^6%%daV@`G+,u%?]X&+OonVbFR,`;K^A.]a
%'@60)'D^R(npMc1i;>qLNT]#G1jb^d1RTG1GYo]-<A<3(pQ5C#l#'c<1+lH"Nbe;Ij8\iEi.?BDeo=J*-cXh7g(NS_F*?`WNM$(i
%Vm#YoH?3g@hoBf%hOYY_+6%Wtf:B:q0UVGM,?=7rp$[XHZU11YFSnkOK.(MDO5,EDOGLFu[Z@J-TokCKI#.2udSE1[?6G!am_iqS
%d*<L2HG5$Wh=autgQq$b4Z>AKar)"8JgY2qjiq)Fk,-p(RdO"bpYlPtpb<X.!5dKlI=`SjbjZt_il>64]>:%rH$do/ljeU1H_ZVa
%.T[TVQMQ-g7I-jTm\MpECS>qWB>'YfJTpS%GMq;(nHGo*HdE4JHhU/,fNfi6#qPu]]\CElRQcSe^)1hfh*("/FpHm;(Z0dfn&<o1
%hEC*APe2.NM[$]M7mBo9XfA!&]mFLOYP1]XPQ#O.O/&IFAbP;#^*bXtq[[jO\$la8%<J]d5Aqcb++!h7R=r%6A&eF3oHufjk[6nZ
%+7o-uKS8IuIqa<Qe;Aen:hhEG.\0b.4f.uLdWbZO#:7fb9-j6HK"beK,4'>#8psP]-7k)tgme:^^$kt/6k;G#YckM:s+/RS+W3hg
%Z%PM-(3r49Y>.tAbFSi0/Kl^cQa;@Gbq#l2IW03#'>EogaJQU"UUOR2#toRj;q)nLo-tV&VHsh,>2rStD(_8/Xi=p$$UY>Zq%)=6
%J'=hCJ,Y3fI$BWVhbjD3lo<Kj^_=P'ZtpH)C6BWX$9<HF_2IMb)dp2$I=Kj!#CRluQsi0ql%2629UDFpAq;i9;@%spF]jAaEkl6h
%n3=4g'fYV%o"@^X57`%94;X(]?6^fQ\rd9JGWS7cU^MB`&@`p/jd%J:2Pi>g:b.Z<5,YFR-K[Dc2=0$$,I+CWDL%W)&^seIPFW23
%oUs73%Fl:ea[0O0gPA<G]2jir[hf._ZsC?_#NO7%jeQ6FM$]RL(mG64ZEC#khhX0A8X3cMK#!jP*Lc<&W2GSjnQ>3o=R;eSZWqB-
%KJ:=3R@)i6NanBR=r0p+K\h*T@ZV7i+2)lRHo.qpY&h9'o30(j]!a.epAc0/gK#hg<hH`#<r93L_U2F+6+,FsaAj-EfF3]pVu=U<
%.1%]jVW\=N>T]@7$*\r3kk`lXD+Rqq@Tbkk>0?AKb/PVr[eNg64RkQo+cI7mJibd\>MF')0/B)bQe)O<1P8"gg,b:$^a)ZTf<2Lf
%<cr%bg'-(TF%0W))g7Ki/oqlPp*GT2RE2oXLo%8p.>S,Rl$@5un<Q=1&Z7J0aF0$Y)=KW,?76Ht^PG5IH=cjh=k<MTA4,3Jj'O$c
%Z9`Pr/J)VJ99Tq1gXg&-]qguD1pU4-g!iTmYTap%mj,1dfeJ;ja523qd$I;=:s7E,(V@[u#Vs:iB`ReT>;V:S,prd,':nR=et*`'
%2"3Z/Fto-&O#D7Kh;`@u$e(qO>qK9c&BA>J>1/<S&cc](ZUe<(D+bBE5(eZ_YefWhJ=RQ>pt)TmEef?jh&ctsOJVZfS6$V+S4<uj
%[RDSA#"W/:2$/Qf[Bb,:C[[Ui@II(i:rN46LEnjaR;T)&&\U%T<LP,[CBF4;ic/5s;A%SFL+85:`"o0aDX7ErZ6#\b-Z0iqRC-gE
%QH8SjH"8cL1Hf"M;M&F.C7-Zp_)aT4kCoIoIDrQ6!%q@jUT.pWILHS4ato"(Ssp$(XRd.1N"q:Fr2lD]'c&%%m%fTUl6\@53_%Ij
%Z"Q)i\eU3N8.u0iFu^sc6+JC,EDWAqm7ttPkj8R*qTFo25C(TV>+qXAQlYcVW2O8\OF"3)2&ib/<hTAL8f3:dVorTf>4QeXEt&oG
%AHZZX.+SGl#T.)!*C2uFPHF9jPKo,lTdk;k!sD8O'1"TD9Y*,A>\NknPD-o-TH[O0g=TK$T)"6TNS"1F"!N1"AF!5q+N&,di0!+?
%HJV9p80c4]+]),r+ECD<#sdcTK??QsXh6L,h7aC[Akae/Ljg/gQl/uG9Mto!.t@k4(*k!&2YEGUb9p/t"oE;+%`,g!;ONd",V]Rd
%OTu7_:*AHZSCVu7iP[*i5?7\/?tQ^[IoWlXE.p1'l`hQEl96uWe[n2Z!"AX(U=c1C/_Imo,DN>5-l4#A_#@REFtjtiELc#dXhsr^
%,n4J-`C;j!Ij[OdN8_=NKn1."&+Md+nZPYmB;EiRUC@<rcID5\RQs/U8PsTdFkhd9<.ss\Z_JIjC[o9^1B)'*()U-'W<XHL?=Ia>
%U[>]h<btXp/g.235?.?H_c"Mm)ZbAf3gM_T9Sos<e[Kpm@4etsPV-+Z5nVu^.$R2e;ql:tCuYS%V$Y@s^;\bNceIO&XP4U:(lX>W
%HDN#nfi&c?J@HRFJe!\"S-Ur!6l$o;h?fSPRF>0;bB>0Z#V-@,T=&R9WIY;cW0)l.$im6Ml5!!3mV?ms5G[b2E,88"flDh3O\2'J
%8l&!EZhP`0&@MqaGs/N,>;L"(XMV@9Oc#U4Q4j\bAAXY;\?CTrQ38^OfUg(^&S7c%HY!TX$iU7lRrg2,^`OeT+\-s?W1Ggd9=+/M
%oec5oRj=SR+E$T$-tg7cM9m[;4JOid^DA'_"[it*0ukW:o%V146rM0#%PWJEI9"0(nG[*e5/bf#WXd9B1.+TJMQU^0\^;sR#e/16
%m*,a\$F4n&3:TQlVHS09?e<uOB@&MA[A!5=X'M]/j1MMsbU1=t(\,P[F9_'4`XQ\srWl,:HErWqZXPPk<[]k&`,T\4JYsi@?Vp;2
%N-h.Z.'SpYOS.`c&*pUtU2Vtgc`CoKEX3m8r@jPM.hr\Vd\nj]U[q*FV6)WJ6E3%i!s$!^ZppUsb.rsN)kYX\6]`uAd-n]3lYhGn
%$JI]1,t1arL'>HJb=/WD.a!q4<oFtu5IA+fQ3BDYju(<RLS3pbo4>4um<d#5P?/=;;qLq)1g2?.^*?lYoh@;.=*Sl/MLgML$;to:
%ogieT+T>("^ct=$U`Ira?GEj\H1.[QmEB^NP7jU%-)KmHJR^ug+!DT8[M"J,:"4ke-07L/[K[MO@@UmE7KG,V2b\p%pQNO>V-$7U
%0WT\$VZJ[t<8>RdC]>;_$EZ_<>!qSXA9FT=63=8%V/V[]U302*Xb$2=MG1<2i+m29!DD*,#aPb3H<f0(]U2\9KjC@,@Ilf"#%lVE
%gTF2dUp(M?G#nnjl9Dl$<5?Eh]L7Ic8_^FRb[7SNA:.0f&iU%!5tsrjfP<:$AK8M8;S<Fcb]l9p]a?>AQB]%Z[3Wf=I%eu8#cb*C
%#Y)%8q@pgGdQ3@LT8d%88`MB=ZL.#,B%8-agcHh`M%P!KmFmH")GP^*CM'_5l<GjNVf&=Ue`K/ud4SE9<\jcH7pUt%Q5$=nV5CSa
%XE:m8g3deDWn4><GgYMfWbTkS_8e""l%Y(O8>,^NK8S*ND=1<92rp4rB^=RkLS,4K5d^ssr//m,'=6.jmpi]@&RKuGT;A<1pC^p'
%#u*g*88[DsDGtE2KO#NgBOiju+K2nUckFuAA1MNTV1=tiXoPeSNpWaEDb5sU2HaZ:4b>K$/k[Qri=UleTP00CfH'+icsJ/"fDS0?
%h34^mbmhX_!](6VVtD>C4'_WF!\%toP^U_!_A>%@=cq9";"S!,2h9bX[((dM*DlACoZ9YA#h7IHk$-SXP6'=:9PkFONj?cUW/m\E
%VYUdASgEcbUfD8K7VLQ,@JI$8XKS*M%h*F4)lho2W+1VHR+R6e(<EI%9Gsg18KTA9"=fcC"4A@fm&YOf^.F4qh+LEA^m)n[#R44(
%ncG0X3dX&6jM68FI!u`^%!"a&\BL/:e?\o[KcOcsgI*@[V+>behE_#N4)Y!'"EIO3aRQu/9saitT2;_],32"gclV!]+KP<1Vf.1N
%0<?J%`b(bZ.^X(o:WfuZ@DgMaqqMe8;NP5.f#L7.>6]4Rkb5.Gl_K[ON\MZ-GjTF9ZDVM:8")P>7$G\%bK25$RJtUTQ>iLOMb^8c
%9\&4GNteuG-)?K9TG*3S$]?$1-WR!\7QI`&8CrkW'JZdJM:/eg-3EMK_u_HYM3'\&/b\Hu=Mrl=p'D!12*i+[c>VE2,oHkp2)Lc5
%rH6#G#m7/t.Q](`]30)7$p4M2CIF%m^)$Q<<U'FqPT!,l;rRC!ef0BBr/O>;oPU3G#75Cso4-OlC''8kULkIF91)[0=CHsWApo6l
%7^$1X.;u,8mZk:1]N\A8$XcG\S-rY-[=44%83tFMf9WY-F_P@(Rb8QNTrCI-NDb9PL1[Pb#O"EP_E)%=\CM<6FB[311pRkMTW21l
%!gg2.O,qKZY@3>W_UKEC:sh2EQs(@NiD&rY*GJRjMImL4Kl/:FHIoEqf4ldXPHuC%+O&ePLf38K>h>gN79Ts3h5pag@dt^)S/C1)
%8Hic\Hc`:3&"Fdu'I$@+4dL_U2i]_4]4u(\q,rUi:/S],UaIhb.CFM"H#k6/4(H^Kk@>-$o`ls+3*(\`^jr*-U4]N_EI*TaRKMBd
%?Hem1Ji)dSrSubD7-\H81dJUGnr'GEU0<\f@>\[73L=hiY*@t`Ji#;"C'7Y=H8A`#U1rimQ!3UaS$.Z(C1<s:OQH+TD3?h![oTd-
%Rt<[1=]HbQVb[MOb>NuNVeB9\NTnsX)guUdHm9,S#38h:&k@]W;oaPP,QhI#MM+CH]L3@iXSlfQ5eBK&VCHCa8Sse`;0bpK>;m-E
%!t0_$[N0t[LTlA<)as4L-*0lDg,O/uNmOSNL/f0TDTXL+M1hTj^Md_APgE:S*@`rn9lp3a._8l3@13abEmeN.[hRWu$WF1'U3.n"
%EDr0'dFr.Ni7sF1!H+F%FV`"k>q^dWVZM(2hhGh0/`aMo6Rc\.Yut3?<q5M6OuI/*c8^nWX7EJR^CD>T^HLPD`=\J:ebt)D5?'&6
%+SIFQ(h)R]@Zi="T097ZHR-HgXFd*J)d8tO,H62YTg)g$jAoD`J]IkT)NLrG"A)YD\hp@:C6kgCZ$4J=IDP=#S51(/IgfCeW8:gS
%K]Q(u=.="O@Su,J=*5gR51*Ks;S$D4a.msQ$JhhQQbCuoLs=R%FRN-1"SfXQcr_Vf>=fE<O@/[!K>#R;PDTOTNg-=DMC?*1K9ATI
%esB=+^>G>pI,G"b$2>_WN0U]&HD5!"H<F*+eBd3@.I67S?EK&%,6:'>DDcr2/"!!:h4&/p'JFhV-?p;i)AnNe?,lT+jf5bc7"I7Z
%R(d]Xbgse%8bQHIm3EPigJemJpGqqL1i"KBOs:Ie)_hQ01<l+"&bs`/AI'>f=*A@%J\eV"np[TP^8rcn#ju*m9#F+VQ.U"ng^'7O
%_7L=Skl$r,;]tgWgu/3.i;jh/]U,+fTn8[PF_\)1U8an,E)7=o&i&pF@knL)Ik;ZUl'[6>,4etGP:D6oK;)#C`^t^eR"T(^NX)Qd
%L]&p,0e1ZuOfXN`@0E0D6VAaTATNEAArNBq1lP42W^oE1aAoi$JdEtWE;t`'SGRCN:s$<!a!sd'[S0(Z=hRb1[>E*[iEJ_/@Ur++
%3o[#<Lk#&F.`kpmR++OO1>k3[qmL9bS$fu-UqQ!5S`1F,&kuTdn9RK.X8_;6pL8+-*!+Zi,rH"&77ie*ThF(5fe-:dLg<V3AnDMF
%VB3f>KSOrA5e!lpip=DR^Qo,A$7*n^O>`oEq6S1P1BAs8<F/c%mV2Mm3'0AqBRXu^ALB/.3gkR7W?_oS!EU`m:gm3K"@e4BH\pbE
%Xfof6p*i_.eF]5J@n?nu\%%g*g0+/@=rB7g+iS[;/uqp<H-Vso='BH`$o/6d6udD`[m#cS/9m:<N$=O#9!V(%T![CK]c_F1b>6TH
%$RYUc?f1NZE+(<hh_]E++W<(ULehO\YDn&%%MVS6W6A7lbG6]R['NbDpkUC`X6no):5(K&O>mgnD\CA]H:;%1rkC)QdP@WiDbh)a
%DjR1ilJAET_0H93($XnS2_IM[d88q6$0'EEk@)SL,I:.M.VmjK2%aa`pg"HMGq$$i[7RhLL3=0J/4I!s=9K!WjXg]W"@Ts4CflY'
%5C"eV1RhUS3P:qc8Vh-65AIR4,f$61kd5_<q?A:.-3l0o&n4l#i&+(E>MI'S.=3"@.>Zjp:*5c(&iTKb'&1i$+M5(^a*8HC/lZ<Y
%Q,JX*D\W.(>S0B0eHRqMEm_`].K:kJ4Gh0NCc`UT,:fBXB2BJ!AbWlKF/jF(k=nc_<[(jA(1FIKKCH0@9b8aBl`1IL>LcWKC1pe+
%la=>NTc`PVB#Q19WIW(To-.og5sJl9/\=Ee?ImdKVcD#E1mJ0SD^p().*a4<X40$h.<]ZrU+9\ilTi7)[h;`#/u(:<0LHuobFEXX
%-Q*V(SJE0aU"i^IEn2(6KPs9C0h!Yj%BQ!(/G;[iepY]9$p^krT"7\N2G5E%%sf?h6li<CLd;(cCdjVk5LWrsCP=/;,<%n+8ecL8
%Eqfb<@BF*3^Q>i$JZME9+>P2"Rb_)VLfr"AN,p%*G*H\$Mr4fd8COW6U9"=plq]9=1rTGaYVqn_[!4<-7H5lJ6\_R!9_.!-hBXTN
%R4P.90*R?TCEqOD7ksENeL?pLZkg,1WPEi5(s+Yb5te+Y2BqSWLN\;p'Q:H"4$S0h<Q#9(b<Ff.QpPo.qOMe>f1AFGTch>()e[,#
%Ma[1-roi"HNmXOL%#WHNXA5osiEbIddI$Ea#n3U;ZNm57@\KfUY:=Pe1bDk:5VMu/Nphk)nIZU?O38)Z+>l1k7X<uLYn*-0/iAGW
%M7,9V]So;cA12Iq5[kWl3fPrg.VW\%#V>&Jh-.7q12s%m.ol7(("BMsMs@;s4ih4"26M"^BRZ/Wb%YEt/48iJcIRsV_IKuUWG4i9
%4\cnp0U.NX;@;JJjd8>p.^hi0\Z.J%*PFE#%fJ%Q[+n[rG?5$!2(UYN`#mk/j<TGc4!,]jEa>d`^b>kD;Zj@4`J=?oWc?h\T%iWn
%&RM3lR[>h6S$OB![L/HQ^9tr;,9UN&#RW7iA21&>33X8LE<:Jr*a41m!7INQdr)J8E&F.WKdfU9@.PW^%3SN>p!s]nM1CSS6@s=G
%m4(H7/>FSTV;[9jOeH0Wfg")(-9)d+5Z/$?p4'IY)':-2Z'JDo&r$\5hPCg;lp-rWLo%KdN)jFsa*hKqMHuZ;D`=^^N=7)_V2:;d
%5%&+rS$Z"%LM4uA?^MJFPjC2`84D3e?*=KN[Ant3:r:_\Omg#9=IH[#Z)EE"F!LGtp6jn`!ct>n2p;o)S%W^b:hiEK^gGCA)(dCq
%eQsfR+ZSd#'`uKG<`Wncc3++N$;NLJ[H]Ap4rJO(SKYrV<\P;q(/)8/R0?d=+q<Z@OUtuUW#AS1J<aHF"b=7k]^920/?ockp#;jQ
%8EI2E0r3@c),42?TE481Hu\U$lV^O+IgF%)\E66*%.FIpF/=caQH0Ka9mDX8fHR2S3a7LYSO,i`N<3uSX1b28P3%Sq2tNmFBX,f/
%!@51#h-iobJgP1f)0.]t32r*Xm;DA,YO:N1:SRN(&h7O_6rY>r#SskqhO@@Lf*dTU$'d[Y`/#"W,`#1uDC4$N!$07CcG4T,1_/J8
%,/V9`mLh@IqNV=OOs!hAif#<_+MFla$WV3EEIGFqBECsAcXa&fGId&Knhh>iMeG(J!J/0%r@30A]sC_5]U@%Z]Z,I^.^lEjL^MKR
%1b%a3D$LVM-!pXS<MSUkTK>RG;e1K)/\Jc22W1A1pK*1+ZR>r7AdciEc`/oEE&XeSfIR?K/odo-"3?K0(pms.YqT/)IbK1Eh)b'f
%S=[qRM,b8%>T"Ti:'k'!UqC718(1V`pFqPN,AWHm1+GJHFUc/,@"W!pegob*Q7C:H9;LUu&?EGiNO0pbfJQAG'Z7Q:5#%7Y8ue"c
%ldRd+'2/N3@gFH$h[h[n'?6EB6M%8pP7*#l"qDV3MS;!tI&E*DUQah3EpT`%+EC&E!Tt6o._4n6*;]@TM`DC5HgP)OrDcZIK7$[i
%Nb_?*E;!LOc!\NmDF.oQMj7\3lt9Bbe,nua9sEi.0HQoiS//FWV/krH$f!+0<&Je#6X*GfYZ>C8[^A`T$`[?3cX]eV]),IjqIrm"
%#e;ABQ<C^C*c3UB4KoVuBSG(GJQ&di'G=iI!@D<6RMM\>.718?Da>_&ECcX##ne@3d4M0&Ipks"pb2(g)(B%+S<;jp;.+o%Pi0G#
%SVN2s_IP+]r?aA[@Z@2c2WAq_4$s'70NEhaan2jLVMX)d,e0;FZWERp#./K_8D4(ZA0U'!B"VuF#`5utP8nXA]JJ2Xa,Pmo['[!H
%8B#%;ikGYY.lOM@9YEjUFgdm1cm#\o9>VDK(0:qX#s\J=>ud)]27dT5?nXRTMWelj;73tF^>1HJ)6D.Z7hh)kS$iqKL,M#N,!DVl
%Gq1'ShPOub$@"ol73Nq*%D79[=k\R;8[fOLc^#1YArV=lfT(*SX,2%0_9=&kP)MQkh3pOLMf#I7W%W2dS*:\c.H)62i.B$,gD^WJ
%:X]@t*7u7K\QK'A:cSYU$ro9cYn/L"3b^lf0iOTG9(%UHUU[FAd80U:0G+<X/6OjXT%Mkt8B<^-[EpLqP\C:&dR2tHnH\:FLo+`W
%3i/_*>63[EjVT2C?B/cX0pm["M$p6PGYo'Z6FrC'C&;E;F-(Db?E"Ag7(fdpfFT%&>u@s%@\K?-f1gkIk5k,HOc'c_W1#T,ZVf=L
%Fem)#$W7t(1(6DS/Ro2',do*9/B.;ba*j<M1JFtb#7$\&#'Q(/))<#&[R47OaI^I@p(Bc1"dC``l6Pa?Cj9'Y@04uNRcXgk\Q;2!
%#=[O]O^df78l/Z!Q=&')Nt!T>'86YL#fd>>h.jfr&H6I4FNDcZ6&l`7U[SgbOrI+lTq+Pm^YXWG66+bl!K*W/Z6EfrUd'GciN`jM
%%:CF_*)kcpc$h.^"%-g$FpZe?1^G*_gGT<T#/^+bJl)E^9]&kZ7tA8Z8$RM1>8>GAK[[_BJFum$Z6?Pnj/CVi7nrgrD(3)R>jZk2
%Yp+Xcc13tX:1Btb)9a]S_:[PaUSjoI]9NN<aqI6ZbEnr)WLul8p?u&TKs5NFTRWmjP9B'aJ6:BK;'o+JDKURc=qn81;&iijb7R."
%3p_(01a"0/:i1<dFZ!nDdT9Q`DSanjee#$4\^VQtr/p9_TGX]?>O2_8B4[n`AY/5]i),;.QoVR/4r3+0GF[3,$6IU]H7K^0M]AA'
%_oZ^i.!l][:gc+`@M&Pk.:>L3&O-pN093/S.hu^Z$gr;5/D)RCBddH6jK-6I?BePYda0+g8Brp+%3'>j9@tC,JeRNQ`BkRRn/B;h
%-`T/#,a7kbSYtJ@-bqu4T5kT6_A+$YWY/P)*gN%u4Eg,3)^L#%=a$h>)>n<qUr%^N;7(Hrie*>GYn_pLeqK)EMe^IQOS'cr<K;d#
%Tt5-,'K2=NNT]VaP>0AX:0CB2%?t2WOMVjMV\B)bQp9toj;USqh$aV6+bl_c^TkEqaTc3_'toGiU1u_p83n^Dc.Hg_'*2j@1R^o:
%44B#A;U!_W7-ZUg+Q,!SBG6)JMN?N-I^LS^!XY[m#mhu<fs%QT8f_FUoQVs'(>L_KMh6D$(ki_?]h:NYjqnmOW,,lD/.pD7-mY",
%OV-l61lC+hmYt*5/+&0S6)(=DJk8pnTpFGd3VBDo/:4\=3oBQuGgtH`(bGMu*+gt`,O&5gqhEm(3h2R+K:3^)2^FN'<D@VcdP]--
%n3S(+V5\bmEq-/X"8ft0<.&1jhZhJ[#lYOe%nc%n%#!$<3T27,ef7qARaQ`k%%;jX66QId)psM%P)cOtf!->'mgIhJL`=d"2WoB-
%THo+jPf0Zp;P@-ECK@GP*1Kug;MN.QoqlVVVZ3+o^cKZQYSls9_?k!!BiMYUCG4\XOHNV86uA^nHfFWsl.9c<+u.Wm4C^u*3rdJ@
%!F"&I\##_.;8Y2)246!^8AmQj6#QBmNfU"tR4EI2/EX#Fo.fC8:lVG4$;V?%0HVS"L]@T.'XVYNocQLa#,*3=-_Us,*E-FV"1nVO
%5SC$`jM6d;^l01KUR?J[7SZj_'q9n%>4GT<\u.#fb&uAO2?toa99d&$c4=(O8^HF1_JE<=`);?rQNl[.cs&OV$JF-VqNm'%S#<o:
%/BtJC!c@RM1`4VNZ&.[5VPS<D1MIl<W"hRJ[dOSY8]QQ7d2%nNR#rqOTNG]'CO>.F_)iT#\@+mD^'P=9gT0_2D!u)K:c;=G`0kqU
%<j2C^<QVd\(,RoL,-oK8o2d+B<d&sICm2^:VM$qNWa6bK`OZca>YIbBj%i'<pS]IfD8d9>X%)rEQSj>F7X6eIJ!&et^(1iVUrb%?
%Pt=(lLoUU,"FZ8h;eKiB<j3PFd.CjtASMu>jg.IXeXXlMS48X$3jcQCW2;04e8Ja3grC^Lnn$2#^4>B$&l[p47$=mFg->#'pV2k?
%QW/\qc%qODpD*Nfeb.YaDl!A`:JV-E_8^Gg-i/t4C.=Y3,Tm.2;_P=1=d@RjF0:!nSet4T^9>B20;b<r2M9@t_Eq0V_>TPDWR9MT
%]JCYQc.P'9_#sHIf#KTdO_Tk$G/,-W.G`W#!SD+tX(l.r^.MAYRi.':_.tNS\,FKXjqt>70W%:j7%jqJ0#h>7>*IZHi,TG7*Q\`@
%cRTTLM:Yk4&HmbgW<LjB_n/Hmo83Ts+$0a1?6*51(a^m;ouq5u]4&$s#O6^JkM-++F;ZZ1Lo3,8#5quj%H.>n,_]uI"fumu"(<7f
%knR;XP(':lX%Y0UTTVj6Ym:aVQdkN:<[gL\))B<qE<]:RXqE9jjb&:<OKcf/;,D#]cXo%18_kl_4d-b+ieZ5'<p@CK-`QPFX;4d,
%[(JlV8^iUW]RF*Fe/o`V"QbX^Wt6l,;q,S$3%^8[VHT&9Xs$M&R"+p=C-.oM?'=P8cNS_-2<gf.`dbqR/n?XACkLoJ.2T;+/X]XL
%j1G'_4=ftaeN,:7B[s$k;.%&*)&]\hs/`mL-"-8*aYSe7+-'%1(i8h#_FRP"4<u5.4X_AOMZRW'^qqURL5L3HYp/5:.L@FHAV#V-
%:M$e(([i$uaPsupG$@ufKX'!n%ncGDQsif-'+AOToIgk756\:cj-X[RUh8[SPkCog5EjTrr*LQrG[9_@7b6'\Kj*VV6LXol1/\gd
%3mSA?.ZjDXF&f0i88`97q2_dIK*i918Wo4V6kr9!(MQa918"'!#`F,-&_(cHqD[0;'q>qb/k2/jhW+G^mq&PERT'-`q6MM<=kq]n
%OS!Go4Hi,]AUM,Z(5jZ-7Rp@<U?_QZ)NO<l/2Pi;&b;SmFd"TEGs?*Q]1Zg.Au]20m):D7adQ@qBb1pKC$N?uh#c#VOY\YnpK@5*
%Oj%4HZL'5.<TB:/$t@2^e^1#V2QYkDVH*7SSefX>'S$rs[d,g;M5lg=61no(7`nUOd(AAl,a1OW<VUl/IGi#)#6S_sCrHOWS?)Dg
%N5^sMm.2OmKe2;+QK).Ys-;!FD94MJ*@mS9hk1^e>!3QcN/_.(>h6K0Vs_n]<Eb09l\Y`ek$I?%p#_H%MhdF'JFW.4G'a-UHBXO8
%Cmu^&H-fND0^'dYH/[6@aKneiWX?[\GO!&cAY>.tR#uYHNX4L25_D_>,%r$37+Md(>H*4l#QST%Ue4NF$&Z"0jc\UiQlekl&dicI
%^*E-5&u.$B3/p<I<AMn[NrBlU?0MIDihBPU8Wo8sF>aGP:Z1mmr@du*/M_=@kbjeQplMUN4ML:pmB#9"E'8Y.9.hK5*Z)Ee=TrnT
%c#Ll0.P<1)qU>!Oj7C[iL0/gda!QKs"-_`+7jErdHS=M_.+^=Y^?+5+:\7(a@W"8L2$36'FISNHl_a*.3YAqd/ZAZ;o9M#e,lQf6
%r+pL(MT6M$8V@6Z<)paZms2`LNAQX!"):fnM]eTuVF]q.Ss%'$C1hSCisG(Rg!W`]&O5=uC&b:e"/@pX:!+KU1I-gEp?E,OnGBRZ
%C0*V)+r&n%EY$-d?NN$WZqnMk_9[c4!%%9O+RI4B1E\!(,Q2ZG!br5#&sOnW@^6$Yr;7m-8uM?L4b62ZWR0#:Bh[n5Z6q,RIKJ>=
%)ko;q3B3"nRD/9!#\_+O<[.oI70h&<\^+g8:8dTE@EGX]dOf]AJsdn]53nO>30<C+L4sJ0XDapN#U.jn.&[6Xb\`aEQuJMhC/Vj>
%,m(fqdduBJO;)SHI]/o`$2$<T%cD1n/G9RaGZmRkhBXuWQ0p++D4@i&%1J$LhZROieA:=&Pbl[L!FJ;WS18foBdp2rMu1q%^[r6h
%Z;p2oB5)qNcH!+&NUb:jWSC0l4ViW(Hgo@0U)_ko4X_Wd&bD00@oPEuVW:j\D]3%Y*RVDc;R#+kSXF$7^5a@PC!pMS?nFT"p%iG&
%8pfO6D>B+9;080!"R=!6&]I*f#M&eBdD=3tIcPLOTLOuB^\`jk#\2jqk`_>:Nu*1/^9C]!CY=Gq;0)QN8&:5sg9mF>jhbBH1=7)p
%<^iJU.]-D-#H5#ROJs`-.Ybr#C9!/G3SL8*TXKF13+9nE6?NQXbU!jG2!'*Tr(GkC-7'fkA*Zqe?F;uhG$AV\7H).f-`*.3>DuM`
%Hc=n>GX!PlEknLuc)b!4%^X2n-gje\@uQY/CH_:&8dqVQ'XW\?YhgOYksIlOFoin('8@=>U`$5)DDqsWJ7ao^A#,<:jdV.9A7R!s
%iKpI?`a%Y^>rsYUd[_4]7\8W18,Fb")sl9G`s@;K#*rbE'<]f8_-%=&?t+psfI[QB]\hdrN>Qn4VZEuPY1g3sq,XN1B!"9E]7>8B
%f`Kjj*8T2FT;nUNa4u:uRu+D1$lBf3Jg4lOHf5DUaZ]*KV-ODAY2;mo=od=YYdOCSkM`JEc,_pIY!/0B>VirhLr1SZi;W)H2alJ(
%nBYS,^A]m>UA"hZLZ:CM#pTDc>bumgP/D$&>%0[oWBP<JRJ57tF`CP*!;D'f,>!3*r8.D>T=Y_<=>&?aWG>SM1W=0M*lKdNh'W>^
%nPl-mH22km(J(Pmj[Q8Cj[&(00`q<a,!Be='8Z>\EDZdIH^_AE$pofG^PSg)8`S((#I8h"p+RJ+:b9CmfS6)DJK:mhS:nm"@^5Fb
%6K(=WVU"Z<G69'^<-+YpB]F$p-Zb[!;m*OlJbS\M*i@1=V\L&jr3-t:e.MNl]Ic^hbkY)/#RqSd=j&f<j=7DZKeIKieBg\K_EM:-
%qR(&E^DN2TVj2KX'TnhDP`]eFPk>P$p5Z&t:u,P8G"X>0K:C4QWO-uXX.?]'(082GWsX,fVOo9_7Tg9tb<N$*-Gg["bt&M?TMiS]
%#ga+/]ZL$[;W`p3EP\<aE$uQ+j,WI>(5?G7TE_>k?p]TP[Y^-.)=FKPWbNOlWGr<7Nb)+t*==UT5@tt$E"dh(A3dt130K.G,%FW3
%"s,/<+Pl:'IF*i^J22\5/)i'KH7"k53jX9.$cAjQqT2YfEoBOlYNM^7+e9Shd[X`\c!2uM?-\$C5g5o'!se^>1El#GFNHupg`mXk
%+%CM/9T[j_]N1'G()1OW./q.4FAStLJ.8<@po,Gc*jX=[)`C;kfY@O4L=\$VS^]u=c11/iD?i,3\o7ArN.lQE&YibY8/VV'!;Bp#
%o)]Ib&2h>>Z.jtXY+(tkk$.,@ORDX@8ue7L482t'>@+WkZEG!:Re-aDKTVRn=3MI?%oT@NDRKNhedhVDFX5b5_1PI:S_&2NPlD"!
%A'L]4O#uo2(?o)'fatrt?4FQc++dna'-pGG$%DIWC3\FmMe?uRM[4sZ"Tm]S+Tt/r-Fb`cGuori_%dY#?M<L?4M&&K\485pPn,6"
%=o9"FhCf'fF<'NB'GsEeA]8Q%h2s2THLCd/9&^t&h/;iY;2a6I<Ar'2`KC)g:$qQ3Eai.32.jd9JAku.([hXi`03SUh;]EB-X&D:
%0%)n!Hu`NA_Y2'b#P?;KluJY'FqNX6#3Y^7Q[iuld>Z1UrS1:h]`_#Gb#<UBKoj\=UWIe0Xej"0je9Y140SB'"/f:f&QPhhXndCG
%D_oaD:SmgP<3B?7$R.QY,[C\%qVW_56:csCfe+"e@k2bg:/lB;"VjhDU,(`RW]Be_A[T5uS6](3OR*8kHNni3][2!f=X+Xi4I0BX
%',[T0pcldH*5Gk2ClThLYhQ\'9:R;f"#.A:a2Mhg&7!rZ(8[)1@dH-^cP.#rrZCh\5#8qYINONg"0:@_Oc]8p,7X^u]M19*6grV8
%$3J\X9FcVG!Dssc=1nX[e,;>#qUunZ>Sir'a#%297J>lKCCIMO&dBaD?:*J>M\TdgK<Su^>TF3dRh_\5Jng%I:uY.Dm?T:Ja)m_4
%_3pqloJF\eTUX:s<;]?HXfq=BEr,=jb0>9+)>j3*MoDM;A*iCXna)k`1`'-;]k<=n\`k<\cARXPTp6&k_]U)-BuE2J#BTdX*RDe>
%%Rr('baTh,0_379WKh@k@+h3,/]EhqL89Pof*f'-\gdIO?5Sif,@O^Gce>LGXSmh*pro.dK=U!.89Z$V)qD9\5:aqla41/Bi?Sj1
%4o.&%IF<F-b+r7H6;6VRDZj3:#b*h"dQ5&2Q<$,OH$_UAgYlM6$.#2,PCTSKr)6D[a)A`pm:XVi=io_'5#Pr\c3=K6G(#*'r%%*Z
%qPl(d7kP?GS%A$[Fm,NgD;4*2\@&#Zs8![(mdcY"r"jiPTB*s1FhT\UGNkK9a*KCliD0u87icXLcTlFd.6oW8)2Np!b[buP,T**j
%>TWlpWtMAY\AkM.6Y=.JB]6U,4rlTns)QF<0X7__P?^Dd]8`-\ZR9j0f?c^ECWYLn,6h.eU))I`T])eE[:a'0G0`9)EtSqqn7G.k
%e$E(UDYP(e6D1I9\+daSc;9S1`c2k%0bNfO'?:P(&cP,Tlg&pnUUQ499tHP"^AVCagJh2R%:C8/?g^s9I-n%+LYHdB(8-hOXrssc
%-6*(OF$JXApaM!TP5PYA0A&mcSJXGj8t-4uN.>d5`-osVO'2!u\+H\%::4U-=9Sk0f9$egcogc]8sutPR51ZibPb=o:pF<G/!sIP
%Jb7F6&]B>u'hs8)E;0Ok[Hij&W,c9)e;XQCRs0Ds<U-;B&\_-Rd.X_cgH!%'MLSdUpWl2>i!XDT>P'MS&_0UGe<t\OPIMR&A;C;n
%n0#Q%qK(1p"mZF*R))qN%:@d":is/_Im;F[l.9a1(Q\JmF?Z2YEVrl$3]f0;6#e!'Q2;!A%O8Z!+$iJE1&(dI-oa3h<gd?@@8JRG
%W/T5OPsGGqAo*R>K0$cMRqqedhAQ0,q+p@O8rfh("&nej1G%PRek=o<Q\L@mahEp`1cL(k`C=U`CH0c'%ArBQRB!3EFBMVp>u)9E
%.Jl)*#=l4/:?/ttB#,E=M<&H0W@)IMo#uCZ/Gu,$%r$t>d^WfI;XBnS#')s*#^[VNLq/H2hB<b'`kXQRA@"5YS%OWf@`L1E&enP>
%lH/QIg(>IcHt7D)-H[O0B#H;c:3c;/%$CYR79qVO?)0?oFWX[cQS`hZ^afTh?L2]M:oq#q=!!&ea,dCdWih6$^Ec]f<V`RnK_X?=
%VXWtQrO,`/Q-<$$!$6<L;?SGM[D?,$hB?6EPGe1"RD5#/=L_?P'eUd/`1C)j[;b;34V7F\>@r34o`FJ^T';:aYBn5M:MNoCN51$m
%kVQ]H`bdt-<oTh9_B'"e*"htM!Q"[PNh^>'3F*!Me9lY68<VRKl6J0`Nn]b-Cuh<.l(XEAqlW3\?oUr#\K3#TNYPf38Ut*,neZ=_
%V=C88`b5VC`</bJmRXlOKS*6U,@fU&lV4fK\1Ro[YBrd/]nCN"d9A9IMc-7X;UV\_$`p"P#%*B&>:3g6LO>R'>&-N9b^_TJW"#,I
%=FrlJ)SPILdDZU/r"q4)h0-JVr%3U[$nW4T-ot7WRm'Y&0XA.+'OJAY>UYG#SF8ha\6B%Y?VN_JG)%\=C^+^-q(Wu=WX36n/ld'@
%):MOCk_dMbl6Q*hZ#g-s_BLG1H5P]n^e=oBW8&L+E,;YWFtG?Z[5\%28O![mQs0@o);-]X_'_H\P\*M<dN\1-<_D-&qtOZo)kZ>a
%1s?t\$+Zc-RFE@P?LP_d8jqL<$?.Bg_MGS;;9N>tWYl5hO$;`i!5@2a862NN3QKgCQEYZ!2:SCgOFN7?NGn\5VpRDnU+3GZ#!6P0
%ct0YY/Fl8ioJ;O6BlMLVC]NWq<Jbt[G8eA]lGhgH'H2q^AgC*D3jr1T5c[b:@jK<S@<\0#1]edepiYb3#d$Z-;*D+d'@7>enJ')7
%5LDN%%='EnpV%b@'0co4Zj2RInDaYAI0!Qu\jceJi*7su&gY%&_1)&fCVG!JIeq[B@7.6(,Qi9iNPCNji6$&fD];o?>hgnq5@If2
%?uY4s08YO?6"Pr3W8#HNr)atIg?H?=(6*5sIQ?kRVK@#)Q:6LNlKT\Y?HLk[,H2udBS:jNnomZ&XhqS)E?^<4C\VZ!OA0r(YOl%:
%T6+/T78N0H4ON7/>"R&^&Cq$RRI_OaPN5W.FCQS/A)XGW"ktc!LV0+^o/!nHG.CT5;<Q^[Q*crVhlsO7V1dAR11>1R`/u>9L?/24
%^i1Jka:j*UZ;q=4$+9UUI#Wa)%.%8Wc!i/:Kp#ot*4cgIW@S19mlp%A%6G>i?e`SH6j\#T6:FhEKHN]eh!Z"Q*,Ttg@BZ@25oH][
%B<Z7_.81>$H"e@99^<9J>NEq%f0d57b;.L\YQ/^;:X"VGgR+&HVW9UmVR:`UV?<7QfsG'<$2*iE's1l>Ym+b0h_PK:WF7)_q$qKi
%VT/]l(:f4V@X+d>pIDO-r68L*"lc9_<8]eu@\fmIP>]Z)@:<L%2L0s[fp=GD`P[l@-:07-VRt!MEl-[mOGtpl3b0d:bSjETU);Pr
%9^J"N'/tRe+4R?tI&hDVa"=ZWO+B`2A.gE_bm'8Z7f^MIcLkh!>r^NP)#+:BOccuWma)*-m'P1=.5e*eqkU'5C-"<,=IX[CD(#k>
%N*"eJ92*<0mMf';-2@m@#R0Co2@LP*ac2Hd/i\<M9K+OHf=qFr_8f8o$o.G)k$C')8h/#HhX2bEI^SNhSUup`6$c#c%)\2Y#<opq
%Sh"VH*7@QApFr0L/@f]*6akc=U[c4Qr>SoF<\Eu!T59*G:GX5V'f?Wu36b-1IDSFhIOb$aoe\N!gid.:<UC&TnXo6e?fU2a2E6E$
%@>>aB@NMcl$o[Y1>uK[h2muRNn_)H-&A"HU$2)Y?S)=YK6kZ8;EDacF=Y&HaeramM>:Ta4H%]@p>du`rkoSQ@*K[_:PkHIBN1p,s
%>@T^m3!ng'P@RRr5,R6'.1PN2JkIc`G3nQ8@,19lmpR119KZ>>U5*CXi-\%A-s'Yhco\o#4uH)V2d)#^fD7'moHXU.Z*@o`.W+q,
%&bc9j?kM@]gZR5kAua1k$kndY`ZM5>^&WGTKl]J>gZE5d*?1M"Z`pmCnn7'`.:2m3q#+j_PBk*/3WT;'+bql3<ugt=H%I)N_1d+1
%C<;u//c5sVa,RMlkri)i#sh)`/SfjEG2KI"RS<@Rl'3r!B?!Au8D_S21Ws?(ZJJtq2Vqf:4\[MnRq(a1p))eU`:/i;h\'8(jND:1
%XoUOf>_WZL"SB!!&^@(kBH$[^PrjA,:5]h9WVB-+[OAUQ,M=F7&A"HT!Ulfrh-%QTdaW5&8Xn7JLRZMGs'urFoIVjNJaKGGZ8\tm
%])@)eaCXoH*g79J`PW49;hfdlQ.AjT)="_;,gc2MKmgH9PWWrEV'df=Q%q9dX()e9cBg-"W/2ne8JnI4V_!S`XRiQH,*h/shb%Pu
%=C_!M;_?i!i-%-3d_T9_;?mW=12j!hkU,,^rU$WcCo'&^Z,r#"rO!rbjbjSa74/mPBu2jKr,@TcWMW6hj1V[Q#CeOl@4ZkjXgG(b
%$f*bC]Ff<N#+Hms-:.MDZkp`X=_`63ZV$=HCYs8Qk&2Re=D0+&.U57bE`GFK)(6Rh4acU.08-P.ei%WkLV[4)pZjR2"hh9Z;n2ib
%Xb80oN4[HeR?Lr/\K_gJ_PO-$Tl!ZuR`j)&;Yiga"5V7g<e_V=Jouls]$QDj61*sn(Zlkd)mW:dS\B9u81SR]$^Id*];F=06(4n1
%cMAe=CBsq-]pBfT:j1*dZ.mEH"19>#`AHSuAhQJGX;fb-KU#:>o20q65N"P"/>$>Hb]l<IJt6bkkP)PdCAE0$9/tN,YY7u(cr\=m
%[[mIkLDYYh09l;s^t\FMS*c@KD+i!>&K?=)J`HH[gOf6GG%&umRNG`c.JCh.l@nic"Zu7SK?r<<@Y__f(rM1DEc)q@c&705JEQA_
%RVMD0gt+/Bh:*/+a<I4?7g]Dp3VPkp3A9`-c^FF`o9HD_rD(?M%1\ffH^)aBe?E1@rA&:UAFqF8Q>9=[\0_#8DS0Dca*MM3Q[ilX
%IE+/[dF[9DeA'56qWCK[[Y1"EKfDqZcWCL(g4i)C?BS5Sq[Y<;Eu#5A,@*E)/jZ%a$+DgL'TNmd-2$il4lmF_T7)PL::N8^XHZE;
%16l';gpc$=Q5nK#W6#H=!p=\f/2FeOc_W'/V["slr!ZMMngBSbnsnbOb&n?Zh!&d[a@XJij/TprZqGJeK8B:pXb[\CaIlP$Ji@tO
%'=sA`ngDj^qOAdnIkIC^7bhTqRmSc$,tsOe)Qql@m3G.A_86?EEcJM`4gY_3pm(5h48^('8<U$Crp6!/8t7id8ScWc7/)'ug?jQs
%Gb$$"([_AiR=VZk(Bd^WT"lOgMboJ>-Yun1.R%Q>kZ$<][SC1oK[i9L)^'qE3HG>^(,FtKltt',J)N64T%ul+KO%J"6L;,P^@)i#
%2[V";RfZnC)hEekY6(D>!7DO:fQg?5TDqS#7Eo-t_)AL,W7,e\]h68HfF8m1L4nZs:E)c5e[M[bPYWH%7]!OV1MM"-r26n_-%pk=
%bWN=F^*W]GSN`<%?V/?[N"WmT#h(N7S,/q)N.co0Pq*ZbS>83@A@@b;m&:H:#fB2+ohKDonm5F!:SkY\YtQZS3u+q+L6.O_$E^>K
%l^aNm9?Iml(E0dGQ1f?N>`g^6Z#2f':(:jt8M-#>%0fusR>@oT?UCb&gZgCGndO9l$4,-X*f%+ogTVlbT%^`"AQsUa35g>9O.661
%VX:>ie&[YcKk^+A_D10ZaV,JZ-k'J,JJnm'jKW$/038L8;nOZ_J3=T8'@9R6:^]SnaqNM03$c9i8^a(eR*hB#1&E+R"#4#m9G`X,
%igE4IPpC\A/Iot8Fa:=j<I-4qT"!t4kbc>HPU[n^Z5j"tVd2d.H0(!(k9Ta$4"B,@Jg>\R,]53*i<@5"4fH(+0#X","-hFD0W(2-
%$H(A*'D">o^)&8pBoNfQR&M00i`(lu1P!--=m^XGqi3F^n)UIg=4s:ec"QcVf]u6q[ZMid'NMTi-[ff<r\e5l^n4j;@G^mAZBiK(
%BXi67_F9O35Ac[=iG_Gs8[WZRPIau3$sW9F+G_m]h@Atkf6BFLEDJ4G#G:Mu_t]14-aH?da3=.ug'.(:c(BfGeGrPD=c$S4RhLr<
%;!JV6H(YZ21F#]+"rN3V>1*K;*gZo>LPBUsP=].]lchK74/I'iQINCP<JA_mH"R>P+Y$t6%J#U@ih\5t&gQ=!RPfaRa`,LbLRlRl
%rDH(2P"<'^2Kusa@d2*p#+l>E.!a]7nRR+Hf2"kQqcb`B/W#^Q\$R5;s6!+$Ir*OW-(pN$`;!i2Qg@CAQJd!?N>XU):ob/pJ!LBc
%!n@-r2Ba;+a"Hlpj1,l.]8..GBLejLiHX8p@AKaU=85P4*SFLU9c=sIfFig`,DXSgatnPJLupt;3ql:$qL+2t8ZF=4EPunUWKOJg
%Wha*j:o(_)3"%"?AC5q^aVur)PQYt.MoB3YJS0C"8_jV/r4R]K(uPSgaN+@YCBB+6.K>:oeBfgg+Xg.6nbe"^M36,pPUA?^FX5ZY
%-!e5iLc.U@TbJ06Yb27X\rtM.ZUEDEY;?0(MsBsJ#(4k4!2IjAn\I5=[Hnm"MtI@%?Wu>%Q!4HJb\m31UjjDaf/EiYks030,P6HA
%&";2;5Z$.p_+tDa1R,!LRVPnWc@!T)H"SRlfs#[$lI#R:(TTO$W)HG?Fjm+pCi?8g"d?;t\.d10fAGt7&Cr6DBk_l)/k`XZkJg?r
%^fhuG[->*Hl<(D?S<X;e=b>[95dn'E..M6r/WsSDVe9q3I9sNlf7r)?D8Kr9NamhhN<G"G!.@0?@!4jh[q(k>0/6Mul7P:3'=,)$
%dr'KZ+AfCkP23Nkq,6cBoqk2:bY?EIm`\#fH_Z(8Af;QuT2Ka81fekqnHq4LE"YcnjFmhg(L-^]72('mn5^*.[JN!.PV"\ZB<]M`
%m`8*6T^r:(*G>:&Q^l,Jl]-?FJ(EX3X,Org\`[/59@B`-1gLtP*[>)2:Vd[;5fV%FSE4>&rG5qM`DpGrH^QJ#?FiZTe!q9>n4a*R
%^W5CelCsFD>WFC5=h)!LDNhi0,&$7cAh.>+a)e;L]-L+UQ+VA4B=m%s.%;bd7Q\VE"Zq;18Cu9c0i!(#+FZiRDnuT<a5pPN5\,/a
%VrX-+jV;%kf[b%@P+NQ.*1Fo#jtAoAe`Q-1#^fFVg\&$/aF;R^c%sTejrRZo>1u@[,gQ./X_@D.;HP3RR@,`E&FXckB0cgU_M1E`
%o)21b%UXW?gM5(FoOh'bqX-cK2,;Dn=OFQ(A(8E$#t^8bF:c=Z[DfnMM3Kpko<i;![6+eed^r+":`HBq@][:)e4dM%DB8-YX#W^U
%e.]!gj6GGM#hXd>Z[Cjd;DeslhBHlJLjEuXjY#Mq1qcugF]'<J#!d;U/lNlaG,NM2iYSRid+jU<^_=(q>9-![pmd4hCqEPcftRFY
%>=kX:qoM*E$%eu!gfO^tLLmLo9bR&AX?1G6:l*rY]l-EA:jB]B$Ze*ArjWV',,f4=U7AgZ'JhE@[S:V#6+\G+]h,pI=(o3^r.g0q
%L*K'17>QIY,?+$s,dnGRj?`ppd4PY`Uq0L,`(L2*QgL*diDrTT:%5k#f%%R34/)+L[c.N?f.bDfG4I)a$F=`O\B2+89j#R"<W?lr
%9@PDWN#22gfK3]627>)[-+'e4du.i]&Mre<X48SGr&B>sOLmt2^I5u>KQLdHCeI7j$4QC&&FR*7Zq2b8Yu?rCNDIQ:o<WOm+DYF&
%hF81=bZ$RbPG6q=a(WErTj;8XpD6+&M[U38pY50R7@\34ADGl?I:MV@nh^0^eIsNQTk,HC&tA;.<mO`ak`d`P[LI:\etRS,T?!Z'
%*8EFp?7p'cC=#kX+?S_>2q_TJ/g->uR@](sKb!>&UnA3XH-GGXLb@keSsM!4"*:'@)KuO()tqnQ;kL7B%L-.LHpJ+\D?(78')G/'
%[H12rSYkSmH853]R7]mmKtOJ_aGE13:L[k;k>IP/oI2P_hH"Y.A:k^2!FbDa(+i#0Y"?IDm,SX+QT]\?"M@RM*ZVT6S\:]sWbH-#
%hWp2,[59i$$hN`5bd*7EId+d\_f>\Riq]#^RCO%UhuG)B<!83?*A59J=/lBee=3(?/1DYXr]!pUM@(PNVZ(!i=P$h^D)hcLb"8kW
%.^MhTr'-[>1=L9>C&BCGY?TqKVoeU-/'(DPaVM;/RGlg2;:dChl1V-+;OuYA6?_HB7;_Sq.n@_%)jjgCM<Cp;:>=Cm@56[6@h%lM
%3RW!f$E>Tq=_nZVbg_'Sd4R*k8U7V1N#]5q%8%lVLM3>KdVYV)08*m/7%'nShUj/;B*@6Q.Pm#7oo<VnUOa60FOWZ-0;<8%+fP]4
%Ms6XioIuf\YcZ^hB7G2CB^fD?SVu-<Zt(tu=%d26/a)lFUJT:JPtOXFp/kU>%fTF,C*D_6#BoM`)A#0Qb+lCb1P]jUQmSA8).2RY
%3Rht7aFrebPA-jjE>B6JS7TpXV#*Gd1&.]Q9kO$;C.QeCTH:d__dShj7a]OFB`#=LAtI2<^Zt.1N1FIdr:%BWrO(oL8(r[[erWaW
%LAY@D`Y$rY\LAcP1illAhB)2%21iB@KS&bWC9g=)DsQ'^gVSJTR$gV$l(\K\]!R/.#!X%YVc9@HI1'XoWFX2uZdiP,0`c\-c*o^U
%Xi-=aLN+D&`KD7@W&d_Y90%4VhTM_Q]t/tu,rX9(irXR,BA.SV+\S@\-!mL.`m'&9P2UlU>fDOlgqIK;OYUZE6+?HU#3S!f)Akq5
%<kA:c24oq)(KOF<]-d!jF7t.XmttS3KdX]JoJ$G4*;Y]=jelc_C%EJrpbY-&AZtC^c`dp3%9/mO_]_K#1C0D.Zg*8)(6t5S9n"1c
%_^4q/MVsM)Ncn42/):1B<!a_Jb;;U/.6a>O@@Nm73(bWk["PQQ6g7QJPq<93M3QVc,W0HG5SBXj:<=!iD4p/P3m+(YPD:=`puH.h
%oUI`ddE6N\H*;;2TM!!SLY`F7%[_NZfNtfnMV$-oQX(j_NiSap3dCgb._$6.`=DeN-5F!@>b>0=NKP=":9(+7::F;5?cW=j$:;\]
%`nD=\"ekqL_nina]5jTA]dlE9S'GGH.JomYpZ@b.TXn.jRZ<q+.UkQ->2s,SR.r*pn2s:N*+OS$Da>Ui@E/TJR[t<O7kBFilD@*&
%"@Ku\o(!WEZ0SQ]-O>-](G]HT,`o&2ia,`L&!^B^L2IrVoN]2\edIRBIVH4W3>21RB`?jRr<a-KH+N=Ul5K=.Oq^`Qs$gqDEr'FQ
%4?tBsktUD.P_KgM<!+!&!Si/oac+.JD6d*4&bVl>kR4']$k[Z]25c?MhW>'Fnp!AVXFnS2?@a`jS`#3Od#6C2`4&oYUA0[J:@f0`
%m()s$a[HdV.b072aFZuB5cprD/*6qnJiq!$R)n66L3ba6+*LIpKmk6X\.nB*<V-=8X>^nECAs:r[el\jl-DYF23J/-Qa5g2=<h#1
%in7/M5NF9Cd322X,j(23;\75c/p:3g@4#DMDW"@#irA"^]S".k$pCfF_@qUpaf!(,q$`[G)V5j\P5Cpl>WPkA'3?qR^0;KVBF7](
%i#sChU1%a-lqE[ncR'B51<Uq:?h]cX9.)p_]c?o[dm$2IodBIL\4uC?h'2"C"am"t*bbte*Y6N.=Y-aKrOfL[Y,^/N<%oVFE;<4\
%":fRS6nZpGCkVB!s$tHD9YuWEl0t*0;ffg+cmDhWNF9A/HP/^.g6JZB$G9:\$AKhmWA^7'OXQEm%!^W%+`=Gsle#'?K5g3_;0BGF
%I,qCtorB(%CMBnJ:)<n#pKD8jWjq*LD<ncP?GXd(lJ5V.-\6&NUmR\I2-ZaPB$:->98-*%%/!b1HRMe&Oq+u/)QC9?UcT%2DAMbG
%Ud6Y=f7gZWBA(C*GLgUCMc<Y\qH.)<.P!!ZpAJC-ak%MDGBIL]<n+Pieo<Z%\<+?*<jX9pE%cS_.Vp==9I`Q<7a]<thIo("X)&WI
%*R7duD1Eue!ou0b*rKK:(Fu>\PEF2H%7g+LpY3F-gohCKSh26X1it\$r'u\`k(TVr\E=5o1</gR:a!c=%/).jqo#*GY'TsZ/*5T6
%oMYQfE#nd.*$Tj3-m=Os,s>RI^Ff+,J'M$AH&O5O[TTLV5,qqeId>$3rINQ\[VaBAE.T;tH=;'(R!Ta4R),Pj$;2!t5N[BoTP*Fm
%i-Bbp\cmhiK]deQ#qsC7&47KW&2<OJlI&(@8BiSo03@1H_6ZTp7^<=.hZS$USoT1W6hB"c&<HQ98gU<^5/sG!e#XDVBhKkHJ'MiI
%ON:?&SNrln0\T[<1=WY0Mc;"AU&1,c8p%(@2EB+0&3l.Y.$=57RjJ@b6Z'QhdRS[?]!nPiSY=K>%Sa#R,m!^S/Xa\(@h&h[N)lB%
%q"Wp,o6bd_N\%YX,q8AQTd!1g380Wt@OV(Qo"I4:6eg*MHn+<M.2k@-mtO'RhEM_LD`&s;7=9+\U0hj<f;BMBRrEi#*#-4ii"-!u
%pMK:;<:]rI?P><H/l@PG-"*n[<g'i@<ma\KQKGqO>ThW^!C/AcWZK*RU2LqNUfhdCN2<YS7,@"WZ)DkUr7??\.LhPX[+'f9maT0j
%1O,RrPMCIr>A;c%*>_FNF(RX`(U6sq4XM:)UBl2jq3;RV_uh"cc7b10r8Wl@KM0HC5gPcW!`6j2NuTqAghi1BK:.Is,;[7HdT@LL
%:GH<Vn.07!RYIN3Z<Y:uJaqt&<XMI4Q\d4e.dZ*O+(^sh`&A5&&?^?_D8Q`e,'`F7V,sLj.@V8KaWns+BL\i>N`t&(?dq]kl)<`D
%5JOGj;Zq&ZC>-!-5*RRtEmtA>Jrd(qVEJAa:"3!KiS4!D_,6.Rh`SG0>-O1A9b;p/078rP32bY[_Ds2<jm*\A<VGhUY9U)Rnn+Y_
%]A:ff%K^)#o?HM?m=Li:>'5`uKY[)ZFO4]NBpk`oPk3uOV<&_K`Y1RBAAJW6PlAFB7AaR6AM;TKUU!r076^>WRMIBpZ%6/B6Yfsk
%J?/]f(a6_kl%V]X!le@c>@52(580:Z.\RB2JIP"EBW(ae1FQURMr!9ZF+Q_A>V#'$=eo,_"bjR7e^jN/@O%q/oa_PVarOdug!?gK
%+n`emp9i:$(BXS2/^?H^0cLg?cWiO+b+%1@da@4Mk*NXk>7^,tMDPZ2l6+X4i.74[Z=0rkq(hGXb(<K"cLPe>(,M[u_e06p:gL[\
%j98l4jqh`M;3-d((89IdlB`ecUi[[._=_[]YW=2^fh^55"iX\C52]h6qK]lM4Yn/E)=(&I&a/!1(iJ0RA(ic'>[d0CRR0JIr"/S(
%\F_&0`E&?<64f%u_d"ua#,XmNV0ZA<hFD2-DE22l,;nO%F'FG%>US0@&6qRkq#*B3D:Brh]IToI3O`c--87T6UXK!0pF<$-4>BQS
%/Nq&dmh[hsS2#K[#oXAk-01;J6g].8,K[<T(<k=Ba'Kq:A>mmPj<km%>OY&B[7D.kIG6\lrqQt"hCTUZ)C2:qqX*gcHGhGB/Vh5(
%iB6lDWVk0aRZBr`eO4otG2]n(gTDos,%'^l_]ZM<PG[2lKB4o=P>->h/AJY_nOX11i.'ku^kS:+V^M*kTH/\ofJ8Nlcddo!`emY;
%T6<Cf.:a"V-RB)Ggj4Ua3$'`5aE^S[FCpMJ"cbP+<u$jRF_D"3=k%[_c[K02'S`&?c9m5Q6ZN\IOb9+j0d;(&?Vu-a1IZWIl8ROT
%SEg[$m5sAScn2#Vd%HUEVY714!IN<kRL,@C,=`(]p#pQGWf66eaT%PVBa-c10%@:+6NrMCXZ#KAOsKu/2!.+oXBXVMj`(4#,cdt%
%d57hNKV"QY6_b1K.re.ROhc="MB,'"Rnf,nKXZ^X[9gO=\U8JMI`5!q`&;mDahe4^-(P27=M)\DYT8,2g8cr#SCcq0G=K99;Jan0
%&Brpr.HeotKBR"k:`=:Re#8Esm/(7qF*^BFo0m6^*Zsd[C;*KoJC8>c>0?JclPjeB#kG@On]IK0aV=%U4PoolgY5)G]XKO))4t'1
%='<=3pBkQH.G8SqA@(#^d5K9$$"MXqd?Q+u7L*,Onn)Inj2ss+"7b$)$J44j/acBm(%3SJY;fq5;6Ps.l[GulnnW2-oH`R60DE*4
%<-?S9Abm#+$Fg0/"Sj-TTQkO`@Ag!IVP'<(e9UM'9q3:F1-D6/aZ_-7-)DX\U,QS@aiPn4p!=`DM]Gq18V]M?6'SCFN9Zet/q6Ed
%i4-c_Dp>V?H%_%h++J+_0@l&3I$.6#D-p=`9"da9>YXCC.C[X7.Xq63pR]T9<]'^FmS]_a8MO(S$kNNU=%8J#g&;ilW660RC+"@@
%VlTtFBL0XXal3@$er6[agkXC0i<3"sLqd0Q4,-a&b//bQi5!7q[Qgng;E@Mq@Y7>q7a$CBiQ$l;N"S.e[3Y[YN!W:)#aeI'('fpU
%D?Af4Z<X]1a,riJ)biKTa-!'EV$r:4s-cS24tSXD?l^-M1fkGLDjQD>J<ulY&;g=#,O"dq'OE?APG%TBfST#!M?EJk043?&_eU!X
%nD,d4rZ)"7(-[V=$,AKN#,I.k^(Q(>ae."%eo#ZG6VWrKV"m(s<D=$Jc+2PmN[g$R>faUcgI/15TY!W4grKN-bB^9+5F/*O*A.D\
%oh1A77O*,K=FLonq()?`X&V!U4DXP#[#V6RcbYk1ckc4B'l`!XXXJd_<8YcTTj[O=_]iZj6V"<VC9G7!c#ArRNJ&ZS]L+3+'3*l[
%_/)ULnNaYH3(Fe[@Ib>/=./lCZ/qMDfRAT$BchAjXS7QQC;FL0,"#V:'8L")hP$.A.5D.n6iM>&=V:_V)&,,4X)24a!,1*LK<58o
%6^=@mY8pU"8qSDPP[CjiOiQ&,WZV+`l>7g/s*:U>VOjg6-GeZLfV[-^SY99%'GYGPA^'9-DHda5OoZ1"<qgfZVNP4!XB,s%D<92!
%8/75'9<YtaOf`;E+Yo%o.'!-3?7TYSEe*>I:.j#uT:;#j&*O5d1nfD?eC;!o4m0XO\fY"9ZBIh_.^dLdSgeU!%V!SS!HI@#(S^87
%k!BD%<X9H*;FD5dKH.6=qrZ-pIU=g?#.k1B''7UL*@`3$9X"W*0Bb`,DD,U`mXD(G_ml;n<HAgQ4)GUs4L(naXN?c<pLXB9[[NSW
%pCj(&6QKIROg^RITg][sVgNlk@S=b]l#"-!fm2X;<,#l>SWF`TG/E\B:@U#M+DffapgQh%A/&DLeFdK)=%LJT-"LW-04:<W's.?&
%k.'p84U.4WOKQl7'=7kH0Y*#jYTPQ'VaNP@M;/2=Cju%'l@**+V6=.7%"DsXWcKcR!IXtcrIT-l<@E]=0'/\FA+[m"0QZT3`R)k^
%O"X]"_hOIf][uH;[@AdD&u0IoH4tY44dtNW+^47>7\&M'pVb#Gl\Qmad4^rn6i$u.?!JlUjb,;2c:P?];(C=$70Mt9/dc]e2Gm?R
%:l;a?Q@XWFpNg-j"YAc"m*S\d5MKN+"@Tl6J$o\V/",OA&4.g?psn0-*H9p![WhoR)Jt1W1c[Qf1QhJ?rr+]E0'ru<cH$cdi9ZFL
%F7.MD.?1)mEr!;r@RXAk)N"*lXp/fGT60l-i_8iICj3TH]8R1_CJ%I,>4+f#g8'&$DTR*_e?>"jq?0"/7S*D:0J%Ha;;@GqPsRJ+
%nZ)FF6toT&f?[Dr)DfGX6K_NA1nYg'NRhg:,oA77jS9HIdsR0j3#h_FHHeVTOe(i!UjsJ!D5iieiD?%+mG\<.ap+K((lW5s.jmN<
%N'7*74<=+"o7T3P#'83#S3&l`FWlld0X:"#3YW],-?iI^K\L*P#4g/AD$c+BaC\!"*F-bC7r9$rV)0n-@!t_9QE\_B_F_BaV$+A'
%I+fj&Z#J8\aj#u0##n:uff%-`8W_^b(>9B]_m0G97f-XrTZCX3i,R]gS%cLQMb#q$:8_53TWoHAlE!;ZXqarYQ_dD>nn*d%bB+/:
%T&M,iTb4K>9>7Hr-dZ2^1lUL?YD!/_>1+Ypk?^4MSnm@Xb'8^6Lsg6_?6d$MpWo<GF/)>'_dR=^\M#*jMgU7:#b+L%)"<Y3\*OAh
%3Es=_jg+]3L;8#$nMBi^09tKQV-#<:V8oFgg@$;4;lW@B9`eZZQ`LKnQ`9t-f<!iZH@<a!npDXMJNYbdcW[Eob&juk=)o<Gid2Mo
%>/8ZPMZ+o,!V_EcIPl=R>FZYAO-K9#9(OWB=Z%@\#MX.YP"e%)DhMOKqkrkd_-!ldkugG*T>1o[JU&\=&;%-JY/<aYaGs$cRYY7#
%Fk1rmGGB)*k'O41l4G+Es0pu"$BZkt8UO"=]T#MQ:=@W1$fE"Dr!ddh8IZimWZn5D7WgY1/t;BF-(k:B-(%^`X;Rh;CYnE?VM%GW
%gBf;)D]FI47,62=V"h5)PPkq38`"C.DE*PLear>?Xe%#UceO6F_\CBgXs9@j+d1(^$6Ir:\6`4KC"-"lEJK.5O-bHZCl&KH6u8=Z
%CSOHsf6=+AWmpf=+BMlQ\u$&^S=b`K+rM!&V<8ooAHs3PGZ_;*cH%/%DfDfg1Mu"i+[:EkHROaRgM2`r9CJ2P9J+lJ`(I((O-"@d
%l_#YqgU#1@ZKtu-0DqWGDc?(MTO6fM@<_J3<EB")Sl@K=Mksn7fp[TUW9!QWogc/+g>a_]Y[*Uj5TJS2&9.b>e/7dVh2!OmYXuRW
%ljQl$!YRpc2ef1)pQEK0jq&RO]oTTgUKGd+X8ZCH22UpCA>)gZNh@hURRb@Wm!'8ciY+ZahO(Ia_>:H*T7`nQg.0[;.)G_)>O;@i
%1$@<ZOL;CecMP&s!HBUS_@UZ@V-6QQSW//W'0d&5@n7Nkb]45/P>ge_kC`h@)E%:W6\\c4#\Ts)[$epi5nD<WYalj1FM^SM8rr@'
%0k)mVoZ6<_0-aNg^kndB@4\sl\=Z":"GR]jXKnG`ZOf$6I,hbSZ:?WOXld]n@#MBm<^qi8+!?MlGh8!;$2bf4:.u<TO@Sc5?27.2
%Xa\Ud.f/(V=`T,tM(P\5f#2^p4<4aKMCF=!#.qRiXD)ppUho@Xd(O!FI^f.PZAd[*&!JXP%lOdNh*1#Jir$Kb-)CVJj;32o71Ds0
%\Y3W4_H9dX"O#CCSdXXH5u[Hd/A(`Tcc9h\/>Q7:.23QI)BU7DW.:[-ru&J:>"5.E+_!l4c>1(-MC.Uc8mJQ?pNn1E1:31k$?H-P
%0'F@n6S^mj#h_o&+,kF:ep2"4_Nol1:XdQWTR?OQ-_1u@NG6H;@)oF:ZL0OFKXdmpElfMF'%irf7t3T=VJ0B"8>Q2r)q!(<:Pf:k
%Yi8J**:.[]GFTI?>BF6(D=>]F_K_(^k93osTrf!>da@""Tln[E1LA\"gVW+-7=j[b:t+pakhIl$>,cB15:'ojDX"CJr&GFPcZU]$
%0i80o1Haqtk@9NAn^;Rsr\b);@thPGJ+"YE9g/h^7=4hZf2drRF$lr-QX&6IQ!#PJ\:A0&[hglpA[LX/ocj6;HBn8ak?FT$8kWgc
%a<S<WRAZKWB,u2oWXJZJ:4q*Y^hcn;-V5J7YFl5+CJCD/SiaoK!AFKBl2eJi)AZ[@Cf#1l;M?.%>N*7\kGE"E9V-TIpK<c?:*[73
%9eK9Pk%!lUV&nsd-DS^d@T*JK0BQkkOqa!!%aC1#iWYSs-eq0b[EVtP1[(aKPQcDGkc#UTG$:bra)hgO2>(fW;5gHg;ODO$GV+h_
%5sF?I<3H$tj;M?NTF\`n`D`F*L_bea$;F8N.NA?"?8L1KK33uegV$*5qIB%02`qD:S`mPT$][NY\l'2?#j$;uWgZ;2BjF^l#5M5G
%-S4:Vp,udWb\CP'G;c8_GS&,-/?8qcXHDm](lS(BAA-.F1hJFF%-!X(UF:lNPA=0ec!MJfd7uKU[Da7i3]@D7\>j[,1]\?$/IK^\
%9#HUW$:?:Ea`0d=o[=M+m`::S7tar?,VDfTO/oVECM2jCSX4!-EZ\SB@6SUAl`&*YH".$895W4<Urbl[d\/W;Zt5\CD3>4*/Mj,G
%Sje@Y?2Rd'KAC7$r!N1s^``X#dIg-;epB"I'XA>rodk$:?/PKH\\Fq6m#]nlpQ;%XH-Wuq":UUVQBMoTh7%t5]IRUl^*%[lY5[T?
%^F%qh(5sZ??W0DW@u9Km#N6EMQ7tC+%ZYJ*,Y1-9<`?r=Ub[*sN`+&a76<8l[3+j?C6q'fkMX4eKSK1$B]3-=XT:P)BO9\B:KZ^M
%cu_J)d:D5.WaJo&<l>VP@?dHd?UnE#bjMa@7/VB=.m>,GO*BCrfAI=opJ=f9#8O#/!C(c9W`qg+Y^8&19X;;9]'qk;ftPoB,Uf@`
%25m1$]%4)%*Hd>a$YJ_U-0si&,sBu2bI2lp[b2r+dXH\TRf9UghZ(nH;cF3YML%@\!#I798Tth)ge5,6N1M.7o'U+p:h^o6glR/n
%jQB]CE4/7U7JO4cm^bkUdaO0]1jUXt_\qqr,>-5g2TahDEG6V_*CErA1,Mq(:c=-;i3aj0Bd;)(UXciH,-QYEmTfK3-X;D*!>uVf
%>']*T3WYVLCc5ZR8)m?N`=XL1nWoKHRb)SQ#\&7LpkR^1>3NaQ/r)>kH9oFeW3Rk\F2RpqI+*Jeo%5(e*K"V\T`;P5/4E3U@Gg\Y
%$D#&,4cuY+1(5Gs[DJu,M(@_$]u/*e2?WkF4&=Ba_#Mm^jsB@G6*IGB.,_1S@i2T:L<"IuIR@gY:MV:GoPV5)JN)/l6*[_J]dJ\)
%o!C7H-<`l&*X]*^Q0GpVb5!(b1a0^gB;dc2&g7G1bs`OG3_eZc!EsY(9Wj-PBf!--3Ya88lj:Yr/jkF1)4QkmL9l8U^b3HJ958[]
%FHl,eQ:$qF_GC^&T@ER^?PWggLQX3GAp>1%oV:iBUtGPS;>9^U)sQ%!<%K3YONLTiqbh@Qo,>ZuHS32EP!.D@F]46hM>`Ue3)i15
%&fF\Z)'q$eDg2!]kBkg$^DI,USH=N[_I2C4gT\7K\s&[@pMO@0eCtWG]+&D/6V7q7Nh[_?62bo@Pn?<p$^P;0#l5bh[QN:*28N8@
%91nX#Ta)Zlk,KrI;:&G4G^<I&(Z8q>8tXO'd:Ja8Z-@bpg"j,iJPi`.(q0Bf5+Wh+1[NYtnCrVOn7YcP9>oGqlSRhA!1C(L*R5DX
%Z5gb0*2JV+H.ZqU5"26`f52IA/MgX3AhBTL,B"Jn7s_Z%CR\jVloO.`8$fX0SB%7#[+C<4R+S;N66=cp+mERMn\D0F\396S6%DR&
%PbK3TN0G`e.I<BQ4(28R:?W7cW`UP&\9s3%<k]\3RTN=IN;[(067Sj?;UZEObe6O#YR:\Kk^Y9YY^O2cQ/fP2TI7$f)@#;M=NQPP
%37O;7Sg)l_$T2]5<)r-'*6')/3qJ-D%SG'/c1J#"h1>laFoX=CVCN1+<@CEQW'Z0\Tb/B.%/kJo=VAi!7Id7Y$h!!;.is8f9uXuK
%+)==7]i#QJP#R1G%V`uB5-f"+2DI@O>tTs^^9.W>On]%5pP[)0*`[W1a[/Ln'??A=FeU,al118[D(7$'i`fVJE(!$SShdZZmiHZJ
%I7n81hITPZ:C3"-S1H,"Ke2?1l`Hj(]A23Ro4[\\WO[BV2%i55a]LNI+Q'lT(7n[/kB;^N^fTI'9X(5)fZH3$7P_iC[Iq._-r+MU
%0aD#GaOcHRVgE[JhGU$L9!U*T[(TEX*OLa(>WeT-,e3r.+J&MF"8-FD@'O,u<cfS[jN!ND*(g86=5u8MBNdg#q@@eL6d&lDS.MFp
%FKaLf,@\D/-JnYI[L6$O;<O#HjA(/5h!@YB;f>0kDo/GXYS%jbd8a^pR>sQfXb2>a\!)_qF.#V_je7?F%TRC#6R'*%%k*ul'7'PJ
%E8B153;V"I8a$I09i8c1:=Kou3E<(>8T']Qn,/:8Aou\_X?N521k,dH6,>l=:T7t3Qg_?"$/OIIMGQ)(VH=Lc7Di*uq6VPC"%0\g
%>P<A<AH6P:M$4]'<$%kaUVNY_-=lO<9]`KuYN&e#$.DuTY$+=!KkE0-+_"HDUqK?PDSD-Z!./n`3tg4]"s1ij3&%srl6QesA%Y`/
%$&;h$"h'OXEbIQdMaoh4QD"L`[OJK/Z<qk4"b=TKqp>_$k(]PZ'AHcnVN[N-6hRm#(!LPC)pLAqSI8tgEF9X;5\'bS5dp,g?2Mh@
%EJQgR`M`$/M6$$S#;nWq:H:</luRV-7k'.)*gsed/!Q^(8^><^a\oQ3^6p'l<sJVPZk;RSJp!,:A9[I5GYL$=;S(A?]/pPL!.]mZ
%l:4@m[a=HbHb0)VJ1!]QaOpHs#QX*HPNCC:/19Cg-\juajH*iN>t!B5luDXG!lJrXl6P%_W=3GJ^;?S;BJ1R,mBm[_?F->Xe:d#S
%,I?X5iL%&9n7^DSCKIgo(XmZapYbK53pT8$keLdo&sHb4D_cplq94'gl:X*Y^8:@X6dVFkRpoadSYhOp@+Iu0&LgDb+kZMs-HVE0
%oMQ:JGMCNs\tb+`#Z"kEQQ@Qf7&Ksp9VKR]ooP+HkMJr_9bEf:)4j,(pPgcq[gGfSSCqQ46?<s*e.XN`2W)ft'e9?l6s?a8Pt=P9
%9P$TZD)(("f%DZRY1qdKIRS9M(]iM^(%JGUDgN9b^!8!]P@aj2PHGd?RH8MR`%E".Xo4\f@!I&U"H^iLo0nEl1T5L,RHP[)R#qR=
%_C(Z0]D6*aJAGE/:V_@Tk)(%'hYQ)Rh<6"fBu7E[M1F3kqYW7@?uC90&I^i"4g&nMH;_>#74'Q1.#iXq,N7_.*Hu8eDcS=<H<q(W
%:C2Rh4QBqWJ2`onFD1((qc-4(7UE\sFW'9^lC]F@fuJ=<24\EjT)!h6,#QsEF>fS:ZKHT;83,jPBLUgAYGg/BD@/qA`#kU_h.,j-
%#d$#0);:t-0sBX9j8G^Qcg8krf)>6e\DGNO'gJs`6Sp*i%-s:G1rAfO<$?mFX&-r)67<F3hto*W=deg+4%f&p!c$q5\I;Fh/6PXq
%TGXo-"g#`IH0Rt;/PUI8*)[cHrCNo#)&?)+,Ol.to#m+IKZU-M;'6:/(kj!ANJKT_d]u+*d8%>N0(QKi?unpV^b-A!Zu2r4c/T#]
%iXbHBfSf6CBLRk)GmA*O7P-H\?CAo%p%ZWWNGautWB-Z)V.+uNZ)=K?\-iGN`rm-[9"Q#!B\@)Nf"^lgq=*f$81>.n^tXu:??X.G
%^kFK_P,uEjS*s-jR+3i@o4!TAOX(B?A`@V'1\k!l@2ff?kQd:^S58lU1?XRn6K>u7HC`56m8p0!_In;>M,2mkG],(;cYlYJ"EC`m
%HmuWdSVd((+BQ]DkKXT\Qu\`ODE=Sip,JuFf:CV/d6#oVHXUN\:-du`mSA29D&(T`Cf+Xo_4."j?ZtYo;@[$]OX/I#aii*V6Xn>/
%"FK(0,7]oRC0?2#n9@HH!f\a<V7Xg1#mMgO+OG#[%V;bH1fblaf!VAI"CA#8%-6H;8ACEsX,pR*CUT-^Qhu@i,D"t*?2?fCTTdt7
%nP0FQ&O2:s+Y]YKBpp4F:k\)=&J!LS-3WDt"4[IpAt5oH=bK9RJ'\lTPCu/Sk$56r)&V6BMtu%Lr*$Y/R4)BtUDWV[Ya9S0'XR'j
%S.WU]*d<ZL"Jp@iE>+cB`1C9,++_Ni^EF`Q+q>XuEOVogYI+MO>:AQ!IZcLl"7deKhpl!8gnm*=6>tqmCPA:hW@qm(7:)FUNJu7#
%:afq1`[3n7I[bRUhf<`oC+?N,=P/,q^01*7A8&holHjfP-IC%c$<i`LR9fcqdX=7,Jf[s63WT@!ocDsg%Jc/O1lp`ibMM=3AB!gh
%UFu"L>rGcmqd"'aXuZA;3(1&c9:@E'A!rksZetP(?BB9q\3:<'oP<r-JPe!pj^j/)LLaGh2-\3tH%VNh-$mfnhL7D<KES3_hZt(&
%=VBRg'(O%smtWO=p]PM&^NF$tg2L!Y(D4VIl%r9e-?M\lil;CL9!Z+<93'ilHi>'LL>klZHb(d"B6f=0e#J"cB)^EIhlJ`46oOWX
%=m&&S:A/o%&WGiXl]fKgAjIg3p*Q[CqF\?+LEi)W'r+A2_@0R/mh,/E\\ci[<-36+HlO/96AcQj't>Opm/?o`Bs7=9U$<i"/DsZ)
%\fKb%Uu=;+(g6oI9Z)8r693+j*cRg0jO!<PmnYgpK@2@q\(e;^K"=1]_JD,GHO`2#9/ekPId<(oj2:N4lg/<Bg/YfGINNe8:uda7
%.tG:`VI[]%TCqh0X0dErZ:HCs3):KW:J,g(bj]GRpq=@,Xk`Nc("hl['3%<!LXckbd@s7qF$o`SO0_$u]7KAs#Etq71+iP,CTK(h
%Xr9>kj;dK$%4:;5R6L$u&<^R'7Z[[?/0]<%o%MnP8esT<L+ZM\hqoI&dF.DB9JK+pbIT4G.+RWnZ/K6liT+m)^G_8jp?d5DmUrjP
%7%CZEYAM"FlXNLJ'Ji@M8!g7"CKW$e,<.=AmJPJD/o(Ug[Us_&G&%EfX2_XlO(-c?R>\O58jMBGEZKOU!Wg"DYL2\I.BtP\"qXs1
%f@Tnc85PeC(Y6o;%>3rLE_*YEL=@?&b-.VuhH@:!n4Ba-Ji2Sn7N`KPXJc&*1jC$`(X-VQqk!rMYY8#:'?,o8gmdXM:ZqP9Q+S=R
%bF:=.@U7T-Tp!@$[p+T?mAsR[j;dK]:hIkliml#+dmqag'!]k1;__QYB:<SqK)fW5\KkTT1/#q6bM&45M'k/*YA@f]h@=BaN/2/C
%okOIHA=Ul.U4#tlLD#mZ=KM)\(BPT5TS263)SVI+LP!K.ZjlrgGCdoO4E(-849'p4s7Pj\r/6()mD&PC?iB]UreL#Ns5reMgY`"u
%s8MqO^]*QF^i08%n,Db<s71s&rK%!So,iGQ=+Bt*^\cnQs7!Y8s8.<@j7!!BoDe[bY93c3%mU*S+91:15QC56s8=&=%jP?OFhr!G
%q`"QFhuDiBrZA"`;N_~>
%AI9_PrivateDataEnd
